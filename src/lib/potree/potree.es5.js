"use strict";var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function Potree(){}Potree.version={major:1,minor:5,suffix:"RC"};console.log("Potree "+Potree.version.major+"."+Potree.version.minor+Potree.version.suffix);Potree.pointBudget=1*1000*1000;Potree.framenumber=0;// contains WebWorkers with base64 encoded code
//Potree.workers = {};
Potree.Shaders={};Potree.webgl={shaders:{},vaos:{},vbos:{}};Potree.scriptPath=null;if(document.currentScript.src){Potree.scriptPath=new URL(document.currentScript.src+"/..").href;if(Potree.scriptPath.slice(-1)==='/'){Potree.scriptPath=Potree.scriptPath.slice(0,-1);}}else{console.error("Potree was unable to find its script path using document.currentScript. Is Potree included with a script tag? Does your browser support this function?");}Potree.resourcePath=Potree.scriptPath+"/resources";Potree.timerQueries={};Potree.timerQueriesEnabled=false;Potree.startQuery=function(name,gl){if(!Potree.timerQueriesEnabled){return null;}if(Potree.timerQueries[name]===undefined){Potree.timerQueries[name]=[];}var ext=gl.getExtension("EXT_disjoint_timer_query");var query=ext.createQueryEXT();ext.beginQueryEXT(ext.TIME_ELAPSED_EXT,query);Potree.timerQueries[name].push(query);return query;};Potree.endQuery=function(query,gl){if(!Potree.timerQueriesEnabled){return;}var ext=gl.getExtension("EXT_disjoint_timer_query");ext.endQueryEXT(ext.TIME_ELAPSED_EXT);};Potree.resolveQueries=function(gl){if(!Potree.timerQueriesEnabled){return;}var ext=gl.getExtension("EXT_disjoint_timer_query");for(var _name in Potree.timerQueries){var queries=Potree.timerQueries[_name];if(queries.length>0){var query=queries[0];var available=ext.getQueryObjectEXT(query,ext.QUERY_RESULT_AVAILABLE_EXT);var disjoint=viewer.renderer.getContext().getParameter(ext.GPU_DISJOINT_EXT);if(available&&!disjoint){// See how much time the rendering of the object took in nanoseconds.
var timeElapsed=ext.getQueryObjectEXT(query,ext.QUERY_RESULT_EXT);var miliseconds=timeElapsed/(1000*1000);console.log(_name+": "+miliseconds+"ms");queries.shift();}}if(queries.length===0){delete Potree.timerQueries[_name];}}};Potree.MOUSE={LEFT:1,RIGHT:2,MIDDLE:4};Potree.Points=function(){function Points(){_classCallCheck(this,Points);this.boundingBox=new THREE.Box3();this.numPoints=0;this.data={};}_createClass(Points,[{key:"add",value:function add(points){var currentSize=this.numPoints;var additionalSize=points.numPoints;var newSize=currentSize+additionalSize;var thisAttributes=Object.keys(this.data);var otherAttributes=Object.keys(points.data);var attributes=new Set([].concat(_toConsumableArray(thisAttributes),_toConsumableArray(otherAttributes)));var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=attributes[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var attribute=_step.value;if(thisAttributes.includes(attribute)&&otherAttributes.includes(attribute)){// attribute in both, merge
var type=this.data[attribute].constructor;var merged=new type(this.data[attribute].length+points.data[attribute].length);merged.set(this.data[attribute],0);merged.set(points.data[attribute],this.data[attribute].length);this.data[attribute]=merged;}else if(thisAttributes.includes(attribute)&&!otherAttributes.includes(attribute)){// attribute only in this; take over this and expand to new size
var elementsPerPoint=this.data[attribute].length/this.numPoints;var _type=this.data[attribute].constructor;var expanded=new _type(elementsPerPoint*newSize);expanded.set(this.data[attribute],0);this.data[attribute]=expanded;}else if(!thisAttributes.includes(attribute)&&otherAttributes.includes(attribute)){// attribute only in points to be added; take over new points and expand to new size
var _elementsPerPoint=points.data[attribute].length/points.numPoints;var _type2=points.data[attribute].constructor;var _expanded=new _type2(_elementsPerPoint*newSize);_expanded.set(points.data[attribute],_elementsPerPoint*currentSize);this.data[attribute]=_expanded;}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}this.numPoints=newSize;this.boundingBox.union(points.boundingBox);}}]);return Points;}();Potree.loadPointCloud=function(path,name,callback){var loaded=function loaded(pointcloud){pointcloud.name=name;callback({type:"pointcloud_loaded",pointcloud:pointcloud});};// load pointcloud
if(!path){}else if(path.indexOf("greyhound://")===0){// We check if the path string starts with 'greyhound:', if so we assume it's a greyhound server URL.
Potree.GreyhoundLoader.load(path,function(geometry){if(!geometry){callback({type:"loading_failed"});}else{var pointcloud=new Potree.PointCloudOctree(geometry);loaded(pointcloud);}});}else if(path.indexOf("cloud.js")>0){Potree.POCLoader.load(path,function(geometry){if(!geometry){callback({type:"loading_failed"});}else{var pointcloud=new Potree.PointCloudOctree(geometry);loaded(pointcloud);}}.bind(this));}else if(path.indexOf(".vpc")>0){Potree.PointCloudArena4DGeometry.load(path,function(geometry){if(!geometry){callback({type:"loading_failed"});}else{var pointcloud=new Potree.PointCloudArena4D(geometry);loaded(pointcloud);}});}else{callback({"type":"loading_failed"});}};Potree.updatePointClouds=function(pointclouds,camera,renderer){if(!Potree.lru){Potree.lru=new LRU();}for(var _i=0;_i<pointclouds.length;_i++){var pointcloud=pointclouds[_i];for(var _j=0;_j<pointcloud.profileRequests.length;_j++){pointcloud.profileRequests[_j].update();}}var result=Potree.updateVisibility(pointclouds,camera,renderer);for(var _i2=0;_i2<pointclouds.length;_i2++){var _pointcloud=pointclouds[_i2];_pointcloud.updateMaterial(_pointcloud.material,_pointcloud.visibleNodes,camera,renderer);_pointcloud.updateVisibleBounds();}Potree.getLRU().freeMemory();return result;};Potree.getLRU=function(){if(!Potree.lru){Potree.lru=new LRU();}return Potree.lru;};function updateVisibilityStructures(pointclouds,camera,renderer){var frustums=[];var camObjPositions=[];var priorityQueue=new BinaryHeap(function(x){return 1/x.weight;});for(var _i3=0;_i3<pointclouds.length;_i3++){var pointcloud=pointclouds[_i3];if(!pointcloud.initialized()){continue;}pointcloud.numVisibleNodes=0;pointcloud.numVisiblePoints=0;pointcloud.deepestVisibleLevel=0;pointcloud.visibleNodes=[];pointcloud.visibleGeometry=[];// frustum in object space
camera.updateMatrixWorld();var frustum=new THREE.Frustum();var viewI=camera.matrixWorldInverse;var world=pointcloud.matrixWorld;var proj=camera.projectionMatrix;var fm=new THREE.Matrix4().multiply(proj).multiply(viewI).multiply(world);frustum.setFromMatrix(fm);frustums.push(frustum);// camera position in object space
var view=camera.matrixWorld;var worldI=new THREE.Matrix4().getInverse(world);var camMatrixObject=new THREE.Matrix4().multiply(worldI).multiply(view);var camObjPos=new THREE.Vector3().setFromMatrixPosition(camMatrixObject);camObjPositions.push(camObjPos);if(pointcloud.visible&&pointcloud.root!==null){priorityQueue.push({pointcloud:_i3,node:pointcloud.root,weight:Number.MAX_VALUE});}// hide all previously visible nodes
//if(pointcloud.root instanceof Potree.PointCloudOctreeNode){
//	pointcloud.hideDescendants(pointcloud.root.sceneNode);
//}
if(pointcloud.root.isTreeNode()){pointcloud.hideDescendants(pointcloud.root.sceneNode);}for(var _j2=0;_j2<pointcloud.boundingBoxNodes.length;_j2++){pointcloud.boundingBoxNodes[_j2].visible=false;}}return{"frustums":frustums,"camObjPositions":camObjPositions,"priorityQueue":priorityQueue};}Potree.getDEMWorkerInstance=function(){if(!Potree.DEMWorkerInstance){var workerPath=Potree.scriptPath+"/workers/DEMWorker.js";Potree.DEMWorkerInstance=Potree.workerPool.getWorker(workerPath);}return Potree.DEMWorkerInstance;};function createDEMMesh(dem){var box=dem.boundingBox;var steps=256;var triangles=[];for(var _i4=0;_i4<steps;_i4++){for(var _j3=0;_j3<steps;_j3++){var u0=_i4/steps;var u1=(_i4+1)/steps;var v0=_j3/steps;var v1=(_j3+1)/steps;//let x0 = box.min.x + u0 * box.getSize().x;
//let x1 = box.min.x + u1 * box.getSize().x;
//let y0 = box.min.y + v0 * box.getSize().y;
//let y1 = box.min.y + v1 * box.getSize().y;
//
//let h00 = dem.height(new THREE.Vector3(x0, y0, 0));
//let h10 = dem.height(new THREE.Vector3(x1, y0, 0));
//let h01 = dem.height(new THREE.Vector3(x0, y1, 0));
//let h11 = dem.height(new THREE.Vector3(x1, y1, 0));
var x0=u0*box.getSize().x;var x1=u1*box.getSize().x;var y0=v0*box.getSize().y;var y1=v1*box.getSize().y;//let h00 = demNode.data[(i+0) + tileSize * (j+0)];
//let h10 = demNode.data[(i+1) + tileSize * (j+0)];
//let h01 = demNode.data[(i+0) + tileSize * (j+1)];
//let h11 = demNode.data[(i+1) + tileSize * (j+1)];
var h00=dem.height(new THREE.Vector3(box.min.x+x0,box.min.y+y0));var h10=dem.height(new THREE.Vector3(box.min.x+x1,box.min.y+y0));var h01=dem.height(new THREE.Vector3(box.min.x+x0,box.min.y+y1));var h11=dem.height(new THREE.Vector3(box.min.x+x1,box.min.y+y1));if(![h00,h10,h01,h11].every(function(n){return isFinite(n);})){continue;}triangles.push(x0,y0,h00);triangles.push(x0,y1,h01);triangles.push(x1,y0,h10);triangles.push(x0,y1,h01);triangles.push(x1,y1,h11);triangles.push(x1,y0,h10);}}var geometry=new THREE.BufferGeometry();var positions=new Float32Array(triangles);geometry.addAttribute('position',new THREE.BufferAttribute(positions,3));geometry.computeBoundingSphere();geometry.computeVertexNormals();var material=new THREE.MeshNormalMaterial({side:THREE.DoubleSide});var mesh=new THREE.Mesh(geometry,material);mesh.position.copy(box.min);//mesh.position.copy(pointcloud.position);
viewer.scene.scene.add(mesh);}function createDEMMeshNode(dem,demNode){var box=demNode.box;var tileSize=dem.tileSize*1;var triangles=[];for(var _i5=0;_i5<tileSize;_i5++){//for(let j = 0; j < 1; j++){
for(var _j4=0;_j4<tileSize;_j4++){var u0=_i5/tileSize;var u1=(_i5+1)/tileSize;var v0=_j4/tileSize;var v1=(_j4+1)/tileSize;var x0=u0*box.getSize().x;var x1=u1*box.getSize().x;var y0=v0*box.getSize().y;var y1=v1*box.getSize().y;//let h00 = demNode.data[(i+0) + tileSize * (j+0)];
//let h10 = demNode.data[(i+1) + tileSize * (j+0)];
//let h01 = demNode.data[(i+0) + tileSize * (j+1)];
//let h11 = demNode.data[(i+1) + tileSize * (j+1)];
var h00=demNode.height(new THREE.Vector3(box.min.x+x0,box.min.y+y0));var h10=demNode.height(new THREE.Vector3(box.min.x+x1,box.min.y+y0));var h01=demNode.height(new THREE.Vector3(box.min.x+x0,box.min.y+y1));var h11=demNode.height(new THREE.Vector3(box.min.x+x1,box.min.y+y1));if(![h00,h10,h01,h11].every(function(n){return isFinite(n);})){continue;}triangles.push(x0,y0,h00);triangles.push(x0,y1,h01);triangles.push(x1,y0,h10);triangles.push(x0,y1,h01);triangles.push(x1,y1,h11);triangles.push(x1,y0,h10);}}var geometry=new THREE.BufferGeometry();var positions=new Float32Array(triangles);geometry.addAttribute('position',new THREE.BufferAttribute(positions,3));geometry.computeBoundingSphere();geometry.computeVertexNormals();var material=new THREE.MeshNormalMaterial({side:THREE.DoubleSide});var mesh=new THREE.Mesh(geometry,material);mesh.position.copy(box.min);//mesh.position.copy(pointcloud.position);
viewer.scene.scene.add(mesh);{// DEBUG code
//let data = demNode.data;
var steps=64;var data=new Float32Array(steps*steps);var imgData=new Uint8Array(data.length*4);var _box=demNode.box;var boxSize=_box.getSize();for(var _i6=0;_i6<steps;_i6++){for(var _j5=0;_j5<steps;_j5++){var u=_i6/(steps-1),v=_j5/(steps-1);var pos=new THREE.Vector3(u*boxSize.x+_box.min.x,v*boxSize.y+_box.min.y,0);var height=demNode.height(pos);var index=_i6+steps*_j5;data[index]=height;//let index = i + steps * j;
//imgData[4*index + 0] = 255 * (height - min) / (max - min);
//imgData[4*index + 1] = 100;
//imgData[4*index + 2] = 0;
//imgData[4*index + 3] = 255;
}}var min=Infinity,max=-Infinity;var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=data[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _height=_step2.value;if(!isFinite(_height)){continue;}min=Math.min(min,_height);max=Math.max(max,_height);}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}for(var _i7=0;_i7<data.length;_i7++){imgData[4*_i7+0]=255*(data[_i7]-min)/(max-min);imgData[4*_i7+1]=100;imgData[4*_i7+2]=0;imgData[4*_i7+3]=255;}var img=Potree.utils.pixelsArrayToImage(imgData,steps,steps);var screenshot=img.src;if(!this.debugDIV){this.debugDIV=$("\n\t\t\t\t<div id=\"pickDebug\" \n\t\t\t\tstyle=\"position: absolute; \n\t\t\t\tright: 400px; width: 300px;\n\t\t\t\tbottom: 44px; width: 300px;\n\t\t\t\tz-index: 1000;\n\t\t\t\t\"></div>");$(document.body).append(this.debugDIV);}this.debugDIV.empty();this.debugDIV.append($("<img src=\""+screenshot+"\"\n\t\t\tstyle=\"transform: scaleY(-1); width: 256px; height: 256px;\"/>"));}}Potree.updateVisibility=function(pointclouds,camera,renderer){var numVisibleNodes=0;var numVisiblePoints=0;var visibleNodes=[];var visibleGeometry=[];var unloadedGeometry=[];var lowestSpacing=Infinity;// calculate object space frustum and cam pos and setup priority queue
var s=updateVisibilityStructures(pointclouds,camera,renderer);var frustums=s.frustums;var camObjPositions=s.camObjPositions;var priorityQueue=s.priorityQueue;var loadedToGPUThisFrame=0;while(priorityQueue.size()>0){var element=priorityQueue.pop();var node=element.node;var parent=element.parent;var pointcloud=pointclouds[element.pointcloud];//{ // restrict to certain nodes for debugging
//	let allowedNodes = ["r", "r0", "r4"];
//	if(!allowedNodes.includes(node.name)){
//		continue;
//	}
//}
var box=node.getBoundingBox();var frustum=frustums[element.pointcloud];var camObjPos=camObjPositions[element.pointcloud];var insideFrustum=frustum.intersectsBox(box);var maxLevel=pointcloud.maxLevel||Infinity;var level=node.getLevel();var visible=insideFrustum;visible=visible&&!(numVisiblePoints+node.getNumPoints()>Potree.pointBudget);visible=visible&&level<maxLevel;if(pointcloud.material.numClipBoxes>0&&visible&&pointcloud.material.clipMode==Potree.ClipMode.CLIP_OUTSIDE){var box2=box.clone();pointcloud.updateMatrixWorld(true);box2.applyMatrix4(pointcloud.matrixWorld);var intersectsClipBoxes=false;var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=pointcloud.material.clipBoxes[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var clipBox=_step3.value;var clipMatrixWorld=clipBox.matrix;var clipBoxWorld=new THREE.Box3(new THREE.Vector3(-0.5,-0.5,-0.5),new THREE.Vector3(0.5,0.5,0.5)).applyMatrix4(clipMatrixWorld);if(box2.intersectsBox(clipBoxWorld)){intersectsClipBoxes=true;break;}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}visible=visible&&intersectsClipBoxes;}//visible = ["r", "r0", "r06", "r060"].includes(node.name);
//visible = ["r"].includes(node.name);
if(node.spacing){lowestSpacing=Math.min(lowestSpacing,node.spacing);}else if(node.geometryNode&&node.geometryNode.spacing){lowestSpacing=Math.min(lowestSpacing,node.geometryNode.spacing);}if(numVisiblePoints+node.getNumPoints()>Potree.pointBudget){break;}if(!visible){continue;}numVisibleNodes++;numVisiblePoints+=node.getNumPoints();pointcloud.numVisibleNodes++;pointcloud.numVisiblePoints+=node.getNumPoints();if(node.isGeometryNode()&&(!parent||parent.isTreeNode())){if(node.isLoaded()&&loadedToGPUThisFrame<2){node=pointcloud.toTreeNode(node,parent);loadedToGPUThisFrame++;}else{unloadedGeometry.push(node);visibleGeometry.push(node);}}if(node.isTreeNode()){Potree.getLRU().touch(node.geometryNode);node.sceneNode.visible=true;node.sceneNode.material=pointcloud.material;visibleNodes.push(node);pointcloud.visibleNodes.push(node);node.sceneNode.updateMatrix();node.sceneNode.matrixWorld.multiplyMatrices(pointcloud.matrixWorld,node.sceneNode.matrix);if(pointcloud.showBoundingBox&&!node.boundingBoxNode&&node.getBoundingBox){var boxHelper=new Potree.Box3Helper(node.getBoundingBox());//let boxHelper = new THREE.BoxHelper(node.sceneNode);
pointcloud.add(boxHelper);pointcloud.boundingBoxNodes.push(boxHelper);node.boundingBoxNode=boxHelper;node.boundingBoxNode.matrixWorld.copy(pointcloud.matrixWorld);}else if(pointcloud.showBoundingBox){node.boundingBoxNode.visible=true;node.boundingBoxNode.matrixWorld.copy(pointcloud.matrixWorld);}else if(!pointcloud.showBoundingBox&&node.boundingBoxNode){node.boundingBoxNode.visible=false;}}// add child nodes to priorityQueue
var children=node.getChildren();for(var _i8=0;_i8<children.length;_i8++){var child=children[_i8];var sphere=child.getBoundingSphere();var distance=sphere.center.distanceTo(camObjPos);var radius=sphere.radius;var fov=camera.fov*Math.PI/180;var slope=Math.tan(fov/2);var projFactor=0.5*renderer.domElement.clientHeight/(slope*distance);var screenPixelRadius=radius*projFactor;if(screenPixelRadius<pointcloud.minimumNodePixelSize){continue;}var weight=screenPixelRadius;if(distance-radius<0){weight=Number.MAX_VALUE;}priorityQueue.push({pointcloud:element.pointcloud,node:child,parent:node,weight:weight});}}// end priority queue loop
{(function(){// update DEM
var maxDEMLevel=4;var candidates=pointclouds.filter(function(p){return p.generateDEM&&p.dem instanceof Potree.DEM;});var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=candidates[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var _pointcloud2=_step4.value;var updatingNodes=_pointcloud2.visibleNodes.filter(function(n){return n.getLevel()<=maxDEMLevel;});_pointcloud2.dem.update(updatingNodes);}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}})();}for(var _i9=0;_i9<Math.min(5,unloadedGeometry.length);_i9++){unloadedGeometry[_i9].load();}//for(let node of visibleNodes){
//	let allowedNodes = ["r", "r0", "r4"];
//	node.sceneNode.visible = allowedNodes.includes(node.geometryNode.name);
//	
//	if(node.boundingBoxNode){
//		node.boundingBoxNode.visible = node.boundingBoxNode.visible && node.sceneNode.visible;
//	}
//}
//Potree.updateDEMs(renderer, visibleNodes);
return{visibleNodes:visibleNodes,numVisiblePoints:numVisiblePoints,lowestSpacing:lowestSpacing};};/*
//
// WAY TOO SLOW WITH SYNCHRONOUS READ PIXEL
//
Potree.DEMRenderer = class{
	constructor(renderer){
		this.renderer = renderer;
		
		this.tileWidth = 64;
		this.tileHeight = 64;
		
		//this.target = new THREE.WebGLRenderTarget( 64, 64, { 
		//	minFilter: THREE.NearestFilter, 
		//	magFilter: THREE.NearestFilter, 
		//	format: THREE.RGBAFormat, 
		//	type: THREE.FloatType
		//} );
		//this.target.depthTexture = new THREE.DepthTexture();
        //this.target.depthTexture.type = THREE.UnsignedIntType;
		
		this.targetElevation = new THREE.WebGLRenderTarget( this.tileWidth, this.tileHeight, { 
			minFilter: THREE.NearestFilter, 
			magFilter: THREE.NearestFilter, 
			format: THREE.RGBAFormat,
			//type: THREE.FloatType
		});
		
		this.targetMedian = new THREE.WebGLRenderTarget( this.tileWidth, this.tileHeight, { 
			minFilter: THREE.NearestFilter, 
			magFilter: THREE.NearestFilter, 
			format: THREE.RGBAFormat,
			//type: THREE.FloatType
		});
	
		this.vsElevation = `
			precision mediump float;
			precision mediump int;
			
			attribute vec3 position;
			
			uniform mat4 modelMatrix;
			uniform mat4 modelViewMatrix;
			uniform mat4 projectionMatrix;
			
			varying float vElevation;
			
			void main(){
				vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
				gl_Position = projectionMatrix * mvPosition;
				gl_PointSize = 1.0;
				
				vElevation = position.z;
			}
		`;
	
		this.fsElevation = `
					precision mediump float;
					precision mediump int;
					
					varying float vElevation;
					
					void main(){
						gl_FragColor = vec4(vElevation, 0.0, 0.0, 1.0);
					}
		`;
		
		this.vsMedian = `
			precision mediump float;
			precision mediump int;
			
			attribute vec3 position;
			attribute vec2 uv;
			
			uniform mat4 modelMatrix;
			uniform mat4 modelViewMatrix;
			uniform mat4 projectionMatrix;
		
			varying vec2 vUV;

			void main() {
				vUV = uv;
				
				vec4 mvPosition = modelViewMatrix * vec4(position,1.0);

				gl_Position = projectionMatrix * mvPosition;
			}
		`;
		
		this.fsMedian = `
		
			precision mediump float;
			precision mediump int;
			
			uniform float uWidth;
			uniform float uHeight;					
			uniform sampler2D uTexture;

			varying vec2 vUV;
			
			void main(){
				vec2 uv = gl_FragCoord.xy / vec2(uWidth, uHeight);						
				
				vec4 color = texture2D(uTexture, uv);
				gl_FragColor = color;
                if(color.a == 0.0){
					
                    vec4 sum;
                    
                    float minVal = 1.0 / 0.0;
                    
                    float sumA = 0.0;
					for(int i = -1; i <= 1; i++){
						for(int j = -1; j <= 1; j++){
							vec2 n = gl_FragCoord.xy + vec2(i, j);
                            vec2 uv = n / vec2(uWidth, uHeight);	
                            vec4 c = texture2D(uTexture, uv);
                            
                            if(c.a == 1.0){
                            	minVal = min(c.r, minVal);
                            }
                            
                            sumA += c.a;
						}
					}
                    
                    if(sumA > 0.0){
                    	gl_FragColor = vec4(minVal, 0.0, 0.0, 1.0);
                    }else{
                    	discard;   
                    }
				}else{
					//gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);
					gl_FragColor = vec4(color.rgb, 1.0);
				}
				
				
			}
		
		`;
		
		this.elevationMaterial = new THREE.RawShaderMaterial( {
			vertexShader: this.vsElevation,
			fragmentShader: this.fsElevation,
		} );
		
		this.medianFilterMaterial = new THREE.RawShaderMaterial( {
			uniforms: {
				uWidth: {value: 1.0},
				uHeight: {value: 1.0},
				uTexture: {type: "t", value: this.targetElevation.texture}
			},
			vertexShader: this.vsMedian,
			fragmentShader: this.fsMedian,
		});
		
		this.camera = new THREE.OrthographicCamera(0, 1, 1, 0, 0, 1);
		
		
	}
	
	render(pointcloud, node){
		if(!node.geometryNode){
			return;
		}
		
		Potree.timerQueriesEnabled = true;
		let start = new Date().getTime();
		let queryAll = Potree.startQuery("All", this.renderer.getContext());
		
		this.renderer.setClearColor(0x0000FF, 0);
		this.renderer.clearTarget( this.target, true, true, true );
		this.renderer.clearTarget(this.targetElevation, true, true, false );
		this.renderer.clearTarget(this.targetMedian, true, true, false );
		
		let box = node.geometryNode.boundingBox;
		
		this.camera.up.set(0, 0, 1);
		//this.camera.rotation.x = Math.PI / 2;
		this.camera.left = box.min.x;
		this.camera.right = box.max.x;
		this.camera.top = box.max.y;
		this.camera.bottom = box.min.y;
		this.camera.near = -1000;
		this.camera.far = 1000;
		this.camera.updateProjectionMatrix();
		
		let scene = new THREE.Scene();
		//let material = new THREE.PointsMaterial({color: 0x00ff00, size: 0.0001});
		let material = this.elevationMaterial;
		let points = new THREE.Points(node.geometryNode.geometry, material);
		scene.add(points);
		
		this.renderer.render(points, this.camera, this.targetElevation);
		
		this.medianFilterMaterial.uniforms.uWidth.value = this.targetMedian.width;
		this.medianFilterMaterial.uniforms.uHeight.value = this.targetMedian.height;
		this.medianFilterMaterial.uniforms.uTexture.value = this.targetElevation.texture;
		
		Potree.utils.screenPass.render(this.renderer, this.medianFilterMaterial, this.targetMedian);
		
		Potree.endQuery(queryAll, this.renderer.getContext());
		Potree.resolveQueries(this.renderer.getContext());
		Potree.timerQueriesEnabled = false;
		
		
		setTimeout( () => {
			let start = new Date().getTime();
			
			let pixelCount = this.tileWidth * this.tileHeight;
			let buffer = new Uint8Array(4 * pixelCount);
			this.renderer.readRenderTargetPixels(this.targetMedian, 
				0, 0, this.tileWidth, this.tileHeight, 
				buffer);
				
			let end = new Date().getTime();
			let duration = end - start;
			console.log(`read duration: ${duration}ms`);
		}, 3000);
			
		let end = new Date().getTime();
		let duration = end - start;
		
		console.log(`duration: ${duration}ms`);
		
		//{ // open window with image
		//
		//	let pixelCount = this.tileWidth * this.tileHeight;
		//	let buffer = new Float32Array(4 * pixelCount);
		//	this.renderer.readRenderTargetPixels(this.targetMedian, 
		//		0, 0, this.tileWidth, this.tileHeight, 
		//		buffer);
		//		
		//	let uiBuffer = new Uint8Array(4 * pixelCount);
		//	for(let i = 0; i < pixelCount; i++){
		//		uiBuffer[i] = buffer[i] / 1.0;
		//	}
		//
		//	let img = Potree.utils.pixelsArrayToImage(uiBuffer, this.tileWidth, this.tileHeight);
		//	let screenshot = img.src;
		//	
		//	if(!this.debugDIV){
		//		this.debugDIV = $(`
		//			<div id="pickDebug" 
		//			style="position: absolute; 
		//			right: 400px; width: 300px;
		//			bottom: 44px; width: 300px;
		//			z-index: 1000;
		//			"></div>`);
		//		$(document.body).append(this.debugDIV);
		//	}
		//	
		//	this.debugDIV.empty();
		//	this.debugDIV.append($(`<img src="${screenshot}"
		//		style="transform: scaleY(-1);"/>`));
		//	//$(this.debugWindow.document).append($(`<img src="${screenshot}"/>`));
		//	//this.debugWindow.document.write('<img src="'+screenshot+'"/>');
		//}
	}
};
*/// 
// index is in order xyzxyzxyz 
//
Potree.DEMNode=function(){function DEMNode(name,box,tileSize){_classCallCheck(this,DEMNode);this.name=name;this.box=box;this.tileSize=tileSize;this.level=this.name.length-1;this.data=new Float32Array(tileSize*tileSize);this.data.fill(-Infinity);this.children=[];this.mipMap=[this.data];this.mipMapNeedsUpdate=true;}_createClass(DEMNode,[{key:"createMipMap",value:function createMipMap(){this.mipMap=[this.data];var sourceSize=this.tileSize;var mipSize=parseInt(sourceSize/2);var mipSource=this.data;while(mipSize>1){var mipData=new Float32Array(mipSize*mipSize);for(var _i10=0;_i10<mipSize;_i10++){for(var _j6=0;_j6<mipSize;_j6++){var h00=mipSource[2*_i10+0+2*_j6*sourceSize];var h01=mipSource[2*_i10+0+2*_j6*sourceSize+sourceSize];var h10=mipSource[2*_i10+1+2*_j6*sourceSize];var h11=mipSource[2*_i10+1+2*_j6*sourceSize+sourceSize];var height=0,weight=0;if(isFinite(h00)){height+=h00;weight+=1;};if(isFinite(h01)){height+=h01;weight+=1;};if(isFinite(h10)){height+=h10;weight+=1;};if(isFinite(h11)){height+=h11;weight+=1;};height=height/weight;//let hs = [h00, h01, h10, h11].filter(h => isFinite(h));
//let height = hs.reduce( (a, v, i) => a + v, 0) / hs.length;
mipData[_i10+_j6*mipSize]=height;}}this.mipMap.push(mipData);mipSource=mipData;sourceSize=mipSize;mipSize=parseInt(mipSize/2);}this.mipMapNeedsUpdate=false;}},{key:"uv",value:function uv(position){var boxSize=this.box.getSize();var u=(position.x-this.box.min.x)/boxSize.x;var v=(position.y-this.box.min.y)/boxSize.y;return[u,v];}},{key:"heightAtMipMapLevel",value:function heightAtMipMapLevel(position,mipMapLevel){var uv=this.uv(position);var tileSize=parseInt(this.tileSize/parseInt(Math.pow(2,mipMapLevel)));var data=this.mipMap[mipMapLevel];var i=Math.min(uv[0]*tileSize,tileSize-1);var j=Math.min(uv[1]*tileSize,tileSize-1);var a=i%1;var b=j%1;var _ref=[Math.floor(i),Math.ceil(i)],i0=_ref[0],i1=_ref[1];var _ref2=[Math.floor(j),Math.ceil(j)],j0=_ref2[0],j1=_ref2[1];var h00=data[i0+tileSize*j0];var h01=data[i0+tileSize*j1];var h10=data[i1+tileSize*j0];var h11=data[i1+tileSize*j1];var wh00=isFinite(h00)?(1-a)*(1-b):0;var wh01=isFinite(h01)?(1-a)*b:0;var wh10=isFinite(h10)?a*(1-b):0;var wh11=isFinite(h11)?a*b:0;var wsum=wh00+wh01+wh10+wh11;wh00=wh00/wsum;wh01=wh01/wsum;wh10=wh10/wsum;wh11=wh11/wsum;if(wsum===0){return null;}var h=0;if(isFinite(h00))h+=h00*wh00;if(isFinite(h01))h+=h01*wh01;if(isFinite(h10))h+=h10*wh10;if(isFinite(h11))h+=h11*wh11;return h;}},{key:"height",value:function height(position){var h=null;for(var _i11=0;_i11<this.mipMap.length;_i11++){h=this.heightAtMipMapLevel(position,_i11);if(h!==null){return h;}}return h;}},{key:"traverse",value:function traverse(callback){var level=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;callback(this,level);var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=this.children.filter(function(c){return c!==undefined;})[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var child=_step5.value;child.traverse(callback,level+1);}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}}}]);return DEMNode;}();Potree.DEM=function(){function DEM(pointcloud){_classCallCheck(this,DEM);this.pointcloud=pointcloud;this.matrix=null;this.boundingBox=null;this.tileSize=64;this.root=null;this.version=0;}// expands the tree to all nodes that intersect <box> at <level>
// returns the intersecting nodes at <level>
_createClass(DEM,[{key:"expandAndFindByBox",value:function expandAndFindByBox(box,level){if(level===0){return[this.root];}var result=[];var stack=[this.root];while(stack.length>0){var node=stack.pop();var nodeBoxSize=node.box.getSize();// check which children intersect by transforming min/max to quadrants
var min={x:(box.min.x-node.box.min.x)/nodeBoxSize.x,y:(box.min.y-node.box.min.y)/nodeBoxSize.y};var max={x:(box.max.x-node.box.max.x)/nodeBoxSize.x,y:(box.max.y-node.box.max.y)/nodeBoxSize.y};min.x=min.x<0.5?0:1;min.y=min.y<0.5?0:1;max.x=max.x<0.5?0:1;max.y=max.y<0.5?0:1;var childIndices=void 0;if(min.x===0&&min.y===0&&max.x===1&&max.y===1){childIndices=[0,1,2,3];}else if(min.x===max.x&&min.y==max.y){childIndices=[min.x<<1|min.y];}else{childIndices=[min.x<<1|min.y,max.x<<1|max.y];}var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=childIndices[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var index=_step6.value;if(node.children[index]===undefined){var childBox=node.box.clone();if((index&2)>0){childBox.min.x+=nodeBoxSize.x/2.0;}else{childBox.max.x-=nodeBoxSize.x/2.0;}if((index&1)>0){childBox.min.y+=nodeBoxSize.y/2.0;}else{childBox.max.y-=nodeBoxSize.y/2.0;}var _child=new Potree.DEMNode(node.name+index,childBox,this.tileSize);node.children[index]=_child;}var child=node.children[index];if(child.level<level){stack.push(child);}else{result.push(child);}}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}}return result;}},{key:"childIndex",value:function childIndex(uv){var _uv$map=uv.map(function(n){return n<0.5?0:1;}),_uv$map2=_slicedToArray(_uv$map,2),x=_uv$map2[0],y=_uv$map2[1];var index=x<<1|y;return index;}},{key:"height",value:function height(position){//return this.root.height(position);
if(!this.root){return 0;}var height=null;var list=[this.root];while(true){var node=list[list.length-1];var currentHeight=node.height(position);if(currentHeight!==null){height=currentHeight;}var uv=node.uv(position);var childIndex=this.childIndex(uv);if(node.children[childIndex]){list.push(node.children[childIndex]);}else{break;}}return height+this.pointcloud.position.z;}},{key:"update",value:function update(visibleNodes){var _this2=this;if(Potree.getDEMWorkerInstance().working){return;}// check if point cloud transformation changed
if(this.matrix===null||!this.matrix.equals(this.pointcloud.matrixWorld)){this.matrix=this.pointcloud.matrixWorld.clone();this.boundingBox=this.pointcloud.boundingBox.clone().applyMatrix4(this.matrix);this.root=new Potree.DEMNode("r",this.boundingBox,this.tileSize);this.version++;}// find node to update
var node=null;var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=visibleNodes[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var vn=_step7.value;if(vn.demVersion===undefined||vn.demVersion<this.version){node=vn;break;}}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}if(node===null){return;}// update node
var projectedBox=node.getBoundingBox().clone().applyMatrix4(this.matrix);var projectedBoxSize=projectedBox.getSize();var targetNodes=this.expandAndFindByBox(projectedBox,node.getLevel());node.demVersion=this.version;Potree.getDEMWorkerInstance().onmessage=function(e){var data=new Float32Array(e.data.dem.data);var _iteratorNormalCompletion8=true;var _didIteratorError8=false;var _iteratorError8=undefined;try{for(var _iterator8=targetNodes[Symbol.iterator](),_step8;!(_iteratorNormalCompletion8=(_step8=_iterator8.next()).done);_iteratorNormalCompletion8=true){var demNode=_step8.value;var boxSize=demNode.box.getSize();for(var _i12=0;_i12<_this2.tileSize;_i12++){for(var _j7=0;_j7<_this2.tileSize;_j7++){var u=_i12/(_this2.tileSize-1);var v=_j7/(_this2.tileSize-1);var x=demNode.box.min.x+u*boxSize.x;var y=demNode.box.min.y+v*boxSize.y;var ix=_this2.tileSize*(x-projectedBox.min.x)/projectedBoxSize.x;var iy=_this2.tileSize*(y-projectedBox.min.y)/projectedBoxSize.y;if(ix<0||ix>_this2.tileSize){continue;}if(iy<0||iy>_this2.tileSize){continue;}ix=Math.min(Math.floor(ix),_this2.tileSize-1);iy=Math.min(Math.floor(iy),_this2.tileSize-1);demNode.data[_i12+_this2.tileSize*_j7]=data[ix+_this2.tileSize*iy];}}demNode.createMipMap();demNode.mipMapNeedsUpdate=true;Potree.getDEMWorkerInstance().working=false;}// TODO only works somewhat if there is no rotation to the point cloud 
//let target = targetNodes[0];
//target.data = new Float32Array(data);
//
//
////node.dem = e.data.dem;
//
//Potree.getDEMWorkerInstance().working = false;
//
//{ // create scene objects for debugging
//	//for(let demNode of targetNodes){
//		var bb = new Potree.Box3Helper(box);
//		viewer.scene.scene.add(bb);
//
//		createDEMMesh(this, target);
//	//}
//	
//}
}catch(err){_didIteratorError8=true;_iteratorError8=err;}finally{try{if(!_iteratorNormalCompletion8&&_iterator8.return){_iterator8.return();}}finally{if(_didIteratorError8){throw _iteratorError8;}}}};var position=node.geometryNode.geometry.attributes.position.array;var message={boundingBox:{min:node.getBoundingBox().min.toArray(),max:node.getBoundingBox().max.toArray()},position:new Float32Array(position).buffer};var transferables=[message.position];Potree.getDEMWorkerInstance().working=true;Potree.getDEMWorkerInstance().postMessage(message,transferables);}}]);return DEM;}();Potree.PointCloudTreeNode=function(){function _class(){_classCallCheck(this,_class);}_createClass(_class,[{key:"getChildren",value:function getChildren(){throw"override function";}},{key:"getBoundingBox",value:function getBoundingBox(){throw"override function";}},{key:"isLoaded",value:function isLoaded(){throw"override function";}},{key:"isGeometryNode",value:function isGeometryNode(){throw"override function";}},{key:"isTreeNode",value:function isTreeNode(){throw"override function";}},{key:"getLevel",value:function getLevel(){throw"override function";}},{key:"getBoundingSphere",value:function getBoundingSphere(){throw"override function";}}]);return _class;}();Potree.PointCloudTree=function(_THREE$Object3D){_inherits(PointCloudTree,_THREE$Object3D);function PointCloudTree(){_classCallCheck(this,PointCloudTree);var _this3=_possibleConstructorReturn(this,(PointCloudTree.__proto__||Object.getPrototypeOf(PointCloudTree)).call(this));_this3.dem=new Potree.DEM(_this3);return _this3;}_createClass(PointCloudTree,[{key:"initialized",value:function initialized(){return this.root!==null;}}]);return PointCloudTree;}(THREE.Object3D);Potree.WorkerPool=function(){function WorkerPool(){_classCallCheck(this,WorkerPool);this.workers={};}_createClass(WorkerPool,[{key:"getWorker",value:function getWorker(url){if(!this.workers[url]){this.workers[url]=[];}if(this.workers[url].length===0){var _worker=new Worker(url);this.workers[url].push(_worker);}var worker=this.workers[url].pop();return worker;}},{key:"returnWorker",value:function returnWorker(url,worker){this.workers[url].push(worker);}}]);return WorkerPool;}();Potree.workerPool=new Potree.WorkerPool();Potree.Shaders["pointcloud.vs"]="\nprecision mediump float;\nprecision mediump int;\n\n\n\n\n#define max_clip_boxes 30\n\nattribute vec3 position;\nattribute vec3 color;\nattribute vec3 normal;\nattribute float intensity;\nattribute float classification;\nattribute float returnNumber;\nattribute float numberOfReturns;\nattribute float pointSourceID;\nattribute vec4 indices;\n//attribute float indices;\n\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\n\nuniform float pcIndex;\n\n//uniform mat4 toModel;\n\nuniform float screenWidth;\nuniform float screenHeight;\nuniform float fov;\nuniform float spacing;\nuniform float near;\nuniform float far;\n\n#if defined use_clip_box\n\tuniform mat4 clipBoxes[max_clip_boxes];\n#endif\n\n\nuniform float heightMin;\nuniform float heightMax;\nuniform float size;\t\t\t\t// pixel size factor\nuniform float minSize;\t\t\t// minimum pixel size\nuniform float maxSize;\t\t\t// maximum pixel size\nuniform float octreeSize;\nuniform vec3 bbSize;\nuniform vec3 uColor;\nuniform float opacity;\nuniform float clipBoxCount;\nuniform float level;\nuniform float vnStart;\n\nuniform vec2 intensityRange;\nuniform float intensityGamma;\nuniform float intensityContrast;\nuniform float intensityBrightness;\nuniform float rgbGamma;\nuniform float rgbContrast;\nuniform float rgbBrightness;\nuniform float transition;\nuniform float wRGB;\nuniform float wIntensity;\nuniform float wElevation;\nuniform float wClassification;\nuniform float wReturnNumber;\nuniform float wSourceID;\n\n\nuniform sampler2D visibleNodes;\nuniform sampler2D gradient;\nuniform sampler2D classificationLUT;\nuniform sampler2D depthMap;\n\nvarying float\tvOpacity;\nvarying vec3\tvColor;\nvarying float\tvLinearDepth;\nvarying float\tvLogDepth;\nvarying vec3\tvViewPosition;\nvarying float \tvRadius;\nvarying vec3\tvWorldPosition;\nvarying vec3\tvNormal;\n\n\n// ---------------------\n// OCTREE\n// ---------------------\n\n#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_octree)\n/**\n * number of 1-bits up to inclusive index position\n * number is treated as if it were an integer in the range 0-255\n *\n */\nfloat numberOfOnes(float number, float index){\n\tfloat tmp = mod(number, pow(2.0, index + 1.0));\n\tfloat numOnes = 0.0;\n\tfor(float i = 0.0; i < 8.0; i++){\n\t\tif(mod(tmp, 2.0) != 0.0){\n\t\t\tnumOnes++;\n\t\t}\n\t\ttmp = floor(tmp / 2.0);\n\t}\n\treturn numOnes;\n}\n\n\n/**\n * checks whether the bit at index is 1\n * number is treated as if it were an integer in the range 0-255\n *\n */\nbool isBitSet(float number, float index){\n\treturn mod(floor(number / pow(2.0, index)), 2.0) != 0.0;\n}\n\n\n/**\n * find the LOD at the point position\n */\nfloat getLOD(){\n\t\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tfloat iOffset = vnStart;\n\tfloat depth = level;\n\tfor(float i = 0.0; i <= 30.0; i++){\n\t\tfloat nodeSizeAtLevel = octreeSize  / pow(2.0, i + level + 0.0);\n\t\t\n\t\tvec3 index3d = (position-offset) / nodeSizeAtLevel;\n\t\tindex3d = floor(index3d + 0.5);\n\t\tfloat index = 4.0 * index3d.x + 2.0 * index3d.y + index3d.z;\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(iOffset / 2048.0, 0.0));\n\t\tfloat mask = value.r * 255.0;\n\t\tif(isBitSet(mask, index)){\n\t\t\t// there are more visible child nodes at this position\n\t\t\tiOffset = iOffset + value.g * 255.0 * 256.0 + value.b * 255.0 + numberOfOnes(mask, index - 1.0);\n\t\t\tdepth++;\n\t\t}else{\n\t\t\t// no more visible child nodes at this position\n\t\t\treturn depth;\n\t\t}\n\t\t\n\t\toffset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;\n        \n\t}\n\t\t\n\treturn depth;\n}\n\nfloat getPointSizeAttenuation(){\n\treturn pow(1.9, getLOD());\n}\n\n\n#endif\n\n\n// ---------------------\n// KD-TREE\n// ---------------------\n\n#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_kdtree)\n\nfloat getLOD(){\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tfloat iOffset = 0.0;\n\tfloat depth = 0.0;\n\t\t\n\t\t\n\tvec3 size = bbSize;\t\n\tvec3 pos = position;\n\t\t\n\tfor(float i = 0.0; i <= 1000.0; i++){\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(iOffset / 2048.0, 0.0));\n\t\t\n\t\tint children = int(value.r * 255.0);\n\t\tfloat next = value.g * 255.0;\n\t\tint split = int(value.b * 255.0);\n\t\t\n\t\tif(next == 0.0){\n\t\t \treturn depth;\n\t\t}\n\t\t\n\t\tvec3 splitv = vec3(0.0, 0.0, 0.0);\n\t\tif(split == 1){\n\t\t\tsplitv.x = 1.0;\n\t\t}else if(split == 2){\n\t\t \tsplitv.y = 1.0;\n\t\t}else if(split == 4){\n\t\t \tsplitv.z = 1.0;\n\t\t}\n\t\t\n\t\tiOffset = iOffset + next;\n\t\t\n\t\tfloat factor = length(pos * splitv / size);\n\t\tif(factor < 0.5){\n\t\t \t// left\n\t\t    if(children == 0 || children == 2){\n\t\t    \treturn depth;\n\t\t    }\n\t\t}else{\n\t\t  \t// right\n\t\t    pos = pos - size * splitv * 0.5;\n\t\t    if(children == 0 || children == 1){\n\t\t    \treturn depth;\n\t\t    }\n\t\t    if(children == 3){\n\t\t    \tiOffset = iOffset + 1.0;\n\t\t    }\n\t\t}\n\t\tsize = size * ((1.0 - (splitv + 1.0) / 2.0) + 0.5);\n\t\t\n\t\tdepth++;\n\t}\n\t\t\n\t\t\n\treturn depth;\t\n}\n\nfloat getPointSizeAttenuation(){\n\treturn 0.5 * pow(1.3, getLOD());\n}\n\n#endif\n\n// formula adapted from: http://www.dfstudios.co.uk/articles/programming/image-programming-algorithms/image-processing-algorithms-part-5-contrast-adjustment/\nfloat getContrastFactor(float contrast){\n\treturn (1.0158730158730156 * (contrast + 1.0)) / (1.0158730158730156 - contrast);\n}\n\nvec3 getRGB(){\n\tvec3 rgb = color;\n\t\n\trgb = pow(rgb, vec3(rgbGamma));\n\trgb = rgb + rgbBrightness;\n\trgb = (rgb - 0.5) * getContrastFactor(rgbContrast) + 0.5;\n\trgb = clamp(rgb, 0.0, 1.0);\n\t\n\t//rgb = indices.rgb;\n\t//rgb.b = pcIndex / 255.0;\n\t\n\t\n\treturn rgb;\n}\n\nfloat getIntensity(){\n\tfloat w = (intensity - intensityRange.x) / (intensityRange.y - intensityRange.x);\n\tw = pow(w, intensityGamma);\n\tw = w + intensityBrightness;\n\tw = (w - 0.5) * getContrastFactor(intensityContrast) + 0.5;\n\tw = clamp(w, 0.0, 1.0);\n\t\n\treturn w;\n}\n\nvec3 getElevation(){\n\tvec4 world = modelMatrix * vec4( position, 1.0 );\n\tfloat w = (world.z - heightMin) / (heightMax-heightMin);\n\tvec3 cElevation = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t\n\treturn cElevation;\n}\n\nvec4 getClassification(){\n\tvec2 uv = vec2(classification / 255.0, 0.5);\n\tvec4 classColor = texture2D(classificationLUT, uv);\n\t\n\treturn classColor;\n}\n\nvec3 getReturnNumber(){\n\tif(numberOfReturns == 1.0){\n\t\treturn vec3(1.0, 1.0, 0.0);\n\t}else{\n\t\tif(returnNumber == 1.0){\n\t\t\treturn vec3(1.0, 0.0, 0.0);\n\t\t}else if(returnNumber == numberOfReturns){\n\t\t\treturn vec3(0.0, 0.0, 1.0);\n\t\t}else{\n\t\t\treturn vec3(0.0, 1.0, 0.0);\n\t\t}\n\t}\n}\n\nvec3 getSourceID(){\n\tfloat w = mod(pointSourceID, 10.0) / 10.0;\n\treturn texture2D(gradient, vec2(w,1.0 - w)).rgb;\n}\n\nvec3 getCompositeColor(){\n\tvec3 c;\n\tfloat w;\n\n\tc += wRGB * getRGB();\n\tw += wRGB;\n\t\n\tc += wIntensity * getIntensity() * vec3(1.0, 1.0, 1.0);\n\tw += wIntensity;\n\t\n\tc += wElevation * getElevation();\n\tw += wElevation;\n\t\n\tc += wReturnNumber * getReturnNumber();\n\tw += wReturnNumber;\n\t\n\tc += wSourceID * getSourceID();\n\tw += wSourceID;\n\t\n\tvec4 cl = wClassification * getClassification();\n    c += cl.a * cl.rgb;\n\tw += wClassification * cl.a;\n\n\tc = c / w;\n\t\n\tif(w == 0.0){\n\t\t//c = color;\n\t\tgl_Position = vec4(100.0, 100.0, 100.0, 0.0);\n\t}\n\t\n\treturn c;\n}\n\nvoid main() {\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tvViewPosition = mvPosition.xyz;\n\tgl_Position = projectionMatrix * mvPosition;\n\tvOpacity = opacity;\n\tvLinearDepth = gl_Position.w;\n\tvLogDepth = log2(gl_Position.w);\n\tvNormal = normalize(normalMatrix * normal);\n\n\t// ---------------------\n\t// POINT COLOR\n\t// ---------------------\n\tvec4 cl = getClassification(); \n\t\n\t#ifdef color_type_rgb\n\t\tvColor = getRGB();\n\t#elif defined color_type_height\n\t\tvColor = getElevation();\n\t#elif defined color_type_rgb_height\n\t\tvec3 cHeight = getElevation();\n\t\tvColor = (1.0 - transition) * getRGB() + transition * cHeight;\n\t#elif defined color_type_depth\n\t\tfloat linearDepth = -mvPosition.z ;\n\t\tfloat expDepth = (gl_Position.z / gl_Position.w) * 0.5 + 0.5;\n\t\tvColor = vec3(linearDepth, expDepth, 0.0);\n\t#elif defined color_type_intensity\n\t\tfloat w = getIntensity();\n\t\tvColor = vec3(w, w, w);\n\t#elif defined color_type_intensity_gradient\n\t\tfloat w = getIntensity();\n\t\tvColor = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t#elif defined color_type_color\n\t\tvColor = uColor;\n\t#elif defined color_type_lod\n\t\tfloat depth = getLOD();\n\t\tfloat w = depth / 5.0;\n\t\tvColor = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t#elif defined color_type_point_index\n\t\t//vColor = indices.rgb * 255.0;\n\t\tvColor = indices.rgb;\n\t\t\n\t\t//vColor.r = mod(indices, 256.0) / 255.0;\n\t\t//vColor.g = mod(indices / 256.0, 256.0) / 255.0;\n\t\t//vColor.b = 0.0;\n\t\t\n\t#elif defined color_type_classification\n\t\tvColor = cl.rgb;\n\t#elif defined color_type_return_number\n\t\tvColor = getReturnNumber();\n\t#elif defined color_type_source\n\t\tvColor = getSourceID();\n\t#elif defined color_type_normal\n\t\tvColor = (modelMatrix * vec4(normal, 0.0)).xyz;\n\t#elif defined color_type_phong\n\t\tvColor = color;\n\t#elif defined color_type_composite\n\t\tvColor = getCompositeColor();\n\t#endif\n\t\n\t#if !defined color_type_composite\n\t\tif(cl.a == 0.0){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 0.0);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t#endif\n\t\n\t// ---------------------\n\t// POINT SIZE\n\t// ---------------------\n\tfloat pointSize = 1.0;\n\t\n\tfloat slope = tan(fov / 2.0);\n\tfloat projFactor =  -0.5 * screenHeight / (slope * vViewPosition.z);\n\t\n\tfloat r = spacing * 1.5;\n\tvRadius = r;\n\t#if defined fixed_point_size\n\t\tpointSize = size;\n\t#elif defined attenuated_point_size\n\t\tpointSize = size * projFactor;\n\t#elif defined adaptive_point_size\n\t\tfloat worldSpaceSize = size * r / getPointSizeAttenuation();\n\t\tpointSize = worldSpaceSize * projFactor;\n\t#endif\n\n\tpointSize = max(minSize, pointSize);\n\tpointSize = min(maxSize, pointSize);\n\t\n\tvRadius = pointSize / projFactor;\n\t\n\tgl_PointSize = pointSize;\n\t\n\t//gl_Position = vec4(1000.0, 1000.0, 1000.0, 1.0);\n\t\n\t\n\t// ---------------------\n\t// CLIPPING\n\t// ---------------------\n\t\n\t#if defined use_clip_box\n\t\tbool insideAny = false;\n\t\tfor(int i = 0; i < max_clip_boxes; i++){\n\t\t\tif(i == int(clipBoxCount)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\tvec4 clipPosition = clipBoxes[i] * modelMatrix * vec4( position, 1.0 );\n\t\t\tbool inside = -0.5 <= clipPosition.x && clipPosition.x <= 0.5;\n\t\t\tinside = inside && -0.5 <= clipPosition.y && clipPosition.y <= 0.5;\n\t\t\tinside = inside && -0.5 <= clipPosition.z && clipPosition.z <= 0.5;\n\t\t\tinsideAny = insideAny || inside;\n\t\t}\n\t\tif(!insideAny){\n\t\n\t\t\t#if defined clip_outside\n\t\t\t\tgl_Position = vec4(1000.0, 1000.0, 1000.0, 1.0);\n\t\t\t#elif defined clip_highlight_inside && !defined(color_type_depth)\n\t\t\t\tfloat c = (vColor.r + vColor.g + vColor.b) / 6.0;\n\t\t\t#endif\n\t\t}else{\n\t\t\t#if defined clip_highlight_inside\n\t\t\t\tvColor.r += 0.5;\n\t\t\t\t\n\t\t\t\t//vec3 hsv = rgb2hsv(vColor);\n            \t//hsv.x = hsv.x - 0.3;\n            \t//hsv.z = hsv.z + 0.1;\n            \t//vColor = hsv2rgb(hsv);\n\t\t\t\t\n\t\t\t#endif\n\t\t}\n\t#endif\n\n\t//vColor = indices.rgb * 255.0;\n\t\n}\n";Potree.Shaders["pointcloud.fs"]="\nprecision mediump float;\nprecision mediump int;\n\n#if defined paraboloid_point_shape\n\t#extension GL_EXT_frag_depth : enable\n#endif\n\nuniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n\n\nuniform mat4 projectionMatrix;\nuniform float opacity;\n\nuniform float blendHardness;\nuniform float blendDepthSupplement;\nuniform float fov;\nuniform float spacing;\nuniform float near;\nuniform float far;\nuniform float pcIndex;\nuniform float screenWidth;\nuniform float screenHeight;\n\nuniform sampler2D depthMap;\n\nvarying vec3\tvColor;\nvarying float\tvOpacity;\nvarying float\tvLinearDepth;\nvarying float\tvLogDepth;\nvarying vec3\tvViewPosition;\nvarying float\tvRadius;\nvarying vec3\tvNormal;\n\nfloat specularStrength = 1.0;\n\nvoid main() {\n\n\tvec3 color = vColor;\n\tfloat depth = gl_FragCoord.z;\n\n\t#if defined(circle_point_shape) || defined(paraboloid_point_shape) || defined (weighted_splats)\n\t\tfloat u = 2.0 * gl_PointCoord.x - 1.0;\n\t\tfloat v = 2.0 * gl_PointCoord.y - 1.0;\n\t#endif\n\t\n\t#if defined(circle_point_shape) || defined (weighted_splats)\n\t\tfloat cc = u*u + v*v;\n\t\tif(cc > 1.0){\n\t\t\tdiscard;\n\t\t}\n\t#endif\n\t\n\t#if defined weighted_splats\n\t\tvec2 uv = gl_FragCoord.xy / vec2(screenWidth, screenHeight);\n\t\tfloat sDepth = texture2D(depthMap, uv).r;\n\t\tif(vLinearDepth > sDepth + vRadius + blendDepthSupplement){\n\t\t\tdiscard;\n\t\t}\n\t#endif\n\t\t\n\t#if defined color_type_point_index\n\t\tgl_FragColor = vec4(color, pcIndex / 255.0);\n\t#else\n\t\tgl_FragColor = vec4(color, vOpacity);\n\t#endif\n\n\tvec3 normal = normalize( vNormal );\n\tnormal.z = abs(normal.z);\n\tvec3 viewPosition = normalize( vViewPosition );\n\t\n\t#if defined(color_type_phong)\n\n\t// code taken from three.js phong light fragment shader\n\t\n\t\t#if MAX_POINT_LIGHTS > 0\n\n\t\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\t\tvec3 pointSpecular = vec3( 0.0 );\n\n\t\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\t\t\tfloat lDistance = 1.0;\n\t\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\t\t\tlVector = normalize( lVector );\n\n\t\t\t\t\t\t// diffuse\n\n\t\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t\t#else\n\n\t\t\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t\t#endif\n\n\t\t\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n\t\t\t\t\t\t// specular\n\n\t\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\t\t\t\tpointSpecular = vec3(0.0, 0.0, 0.0);\n\t\t\t}\n\t\t\n\t\t#endif\n\t\t\n\t\t#if MAX_DIR_LIGHTS > 0\n\n\t\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\t\tvec3 dirSpecular = vec3( 0.0 );\n\n\t\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\t\t\t\t// diffuse\n\n\t\t\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t\t#else\n\n\t\t\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t\t#endif\n\n\t\t\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t\t\t// specular\n\n\t\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t\t\t}\n\n\t\t#endif\n\t\t\n\t\tvec3 totalDiffuse = vec3( 0.0 );\n\t\tvec3 totalSpecular = vec3( 0.0 );\n\t\t\n\t\t#if MAX_POINT_LIGHTS > 0\n\n\t\t\ttotalDiffuse += pointDiffuse;\n\t\t\ttotalSpecular += pointSpecular;\n\n\t\t#endif\n\t\t\n\t\t#if MAX_DIR_LIGHTS > 0\n\n\t\t\ttotalDiffuse += dirDiffuse;\n\t\t\ttotalSpecular += dirSpecular;\n\n\t\t#endif\n\t\t\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n\t#endif\n\t\n\t#if defined weighted_splats\n\t    //float w = pow(1.0 - (u*u + v*v), blendHardness);\n\t\t\n\t\tfloat wx = 2.0 * length(2.0 * gl_PointCoord - 1.0);\n\t\tfloat w = exp(-wx * wx * 0.5);\n\t\t\n\t\t//float distance = length(2.0 * gl_PointCoord - 1.0);\n\t\t//float w = exp( -(distance * distance) / blendHardness);\n\t\t\n\t\tgl_FragColor.rgb = gl_FragColor.rgb * w;\n\t\tgl_FragColor.a = w;\n\t#endif\n\t\n\t#if defined paraboloid_point_shape\n\t\tfloat wi = 0.0 - ( u*u + v*v);\n\t\tvec4 pos = vec4(vViewPosition, 1.0);\n\t\tpos.z += wi * vRadius;\n\t\tfloat linearDepth = -pos.z;\n\t\tpos = projectionMatrix * pos;\n\t\tpos = pos / pos.w;\n\t\tfloat expDepth = pos.z;\n\t\tdepth = (pos.z + 1.0) / 2.0;\n\t\tgl_FragDepthEXT = depth;\n\t\t\n\t\t#if defined(color_type_depth)\n\t\t\tcolor.r = linearDepth;\n\t\t\tcolor.g = expDepth;\n\t\t#endif\n\t\t\n\t\t#if defined(use_edl)\n\t\t\tgl_FragColor.a = log2(linearDepth);\n\t\t#endif\n\t\t\n\t#else\n\t\t#if defined(use_edl)\n\t\t\tgl_FragColor.a = vLogDepth;\n\t\t#endif\n\t#endif\n\t\n\t\n\t\t\n\t\n\t\n\t\n\t\n}\n\n\n";Potree.Shaders["normalize.vs"]="\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position =   projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}";Potree.Shaders["normalize.fs"]="\n#extension GL_EXT_frag_depth : enable\n\nuniform sampler2D depthMap;\nuniform sampler2D texture;\n\nvarying vec2 vUv;\n\nvoid main() {\n    float depth = texture2D(depthMap, vUv).g; \n\t\n\tif(depth <= 0.0){\n\t\tdiscard;\n\t}\n\t\n    vec4 color = texture2D(texture, vUv); \n\tcolor = color / color.w;\n    \n\tgl_FragColor = vec4(color.xyz, 1.0); \n\t\n\tgl_FragDepthEXT = depth;\n}";Potree.Shaders["edl.vs"]="\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\t\n\tvec4 mvPosition = modelViewMatrix * vec4(position,1.0);\n\n    gl_Position = projectionMatrix * mvPosition;\n}";Potree.Shaders["edl.fs"]="// \n// adapted from the EDL shader code from Christian Boucheny in cloud compare:\n// https://github.com/cloudcompare/trunk/tree/master/plugins/qEDL/shaders/EDL\n//\n\nuniform float screenWidth;\nuniform float screenHeight;\nuniform vec2 neighbours[NEIGHBOUR_COUNT];\nuniform float edlStrength;\nuniform float radius;\nuniform float opacity;\n\nuniform sampler2D colorMap;\n\nvarying vec2 vUv;\n\nfloat response(float depth){\n\tvec2 uvRadius = radius / vec2(screenWidth, screenHeight);\n\t\n\tfloat sum = 0.0;\n\t\n\tfor(int i = 0; i < NEIGHBOUR_COUNT; i++){\n\t\tvec2 uvNeighbor = vUv + uvRadius * neighbours[i];\n\t\t\n\t\tfloat neighbourDepth = texture2D(colorMap, uvNeighbor).a;\n\n\t\tif(neighbourDepth != 0.0){\n\t\t\tif(depth == 0.0){\n\t\t\t\tsum += 100.0;\n\t\t\t}else{\n\t\t\t\tsum += max(0.0, depth - neighbourDepth);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn sum / float(NEIGHBOUR_COUNT);\n}\n\nvoid main(){\n\tvec4 color = texture2D(colorMap, vUv);\n\t\n\tfloat depth = color.a;\n\tfloat res = response(depth);\n\tfloat shade = exp(-res * 300.0 * edlStrength);\n\t\n\tif(color.a == 0.0 && res == 0.0){\n\t\tdiscard;\n\t}else{\n\t\tgl_FragColor = vec4(color.rgb * shade, opacity);\n\t}\n\t\n}\n";Potree.Shaders["blur.vs"]="\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position =   projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}";Potree.Shaders["blur.fs"]="\nuniform mat4 projectionMatrix;\n\nuniform float screenWidth;\nuniform float screenHeight;\nuniform float near;\nuniform float far;\n\nuniform sampler2D map;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tfloat dx = 1.0 / screenWidth;\n\tfloat dy = 1.0 / screenHeight;\n\n\tvec3 color = vec3(0.0, 0.0, 0.0);\n\tcolor += texture2D(map, vUv + vec2(-dx, -dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(  0, -dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(+dx, -dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(-dx,   0)).rgb;\n\tcolor += texture2D(map, vUv + vec2(  0,   0)).rgb;\n\tcolor += texture2D(map, vUv + vec2(+dx,   0)).rgb;\n\tcolor += texture2D(map, vUv + vec2(-dx,  dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(  0,  dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(+dx,  dy)).rgb;\n    \n\tcolor = color / 9.0;\n\t\n\tgl_FragColor = vec4(color, 1.0);\n\t\n\t\n}";THREE.EventDispatcher.prototype.removeEventListeners=function(type){if(this._listeners===undefined){return;}if(this._listeners[type]){delete this._listeners[type];}};THREE.PerspectiveCamera.prototype.zoomTo=function(node,factor){if(!node.geometry&&!node.boundingSphere&&!node.boundingBox){return;}if(node.geometry&&node.geometry.boundingSphere===null){node.geometry.computeBoundingSphere();}node.updateMatrixWorld();var bs;if(node.boundingSphere){bs=node.boundingSphere;}else if(node.geometry&&node.geometry.boundingSphere){bs=node.geometry.boundingSphere;}else{bs=node.boundingBox.getBoundingSphere();}var _factor=factor||1;bs=bs.clone().applyMatrix4(node.matrixWorld);var radius=bs.radius;var fovr=this.fov*Math.PI/180;if(this.aspect<1){fovr=fovr*this.aspect;}var distanceFactor=Math.abs(radius/Math.sin(fovr/2))*_factor;var offset=this.getWorldDirection().multiplyScalar(-distanceFactor);this.position.copy(bs.center.clone().add(offset));};//THREE.PerspectiveCamera.prototype.zoomTo = function(node, factor){
//	if(factor === undefined){
//		factor = 1;
//	}
//
//	node.updateMatrixWorld();
//	this.updateMatrix();
//	this.updateMatrixWorld();
//	
//	var box = Potree.utils.computeTransformedBoundingBox(node.boundingBox, node.matrixWorld);
//	var dir = new THREE.Vector3(0, 0, -1).applyQuaternion(this.quaternion);
//	var pos = box.center().sub(dir);
//	
//	var ps = [
//		new THREE.Vector3(box.min.x, box.min.y, box.min.z),
//		new THREE.Vector3(box.min.x, box.min.y, box.min.z),
//		new THREE.Vector3(box.max.x, box.min.y, box.min.z),
//		new THREE.Vector3(box.min.x, box.max.y, box.min.z),
//		new THREE.Vector3(box.min.x, box.min.y, box.max.z),
//		new THREE.Vector3(box.min.x, box.max.y, box.max.z),
//		new THREE.Vector3(box.max.x, box.max.y, box.min.z),
//		new THREE.Vector3(box.max.x, box.min.y, box.max.z),
//		new THREE.Vector3(box.max.x, box.max.y, box.max.z)
//	];
//	
//	var frustum = new THREE.Frustum();
//	frustum.setFromMatrix(new THREE.Matrix4().multiplyMatrices(this.projectionMatrix, this.matrixWorldInverse));
//	
//	var max = Number.MIN_VALUE;
//	for(var i = 0; i < ps.length; i++){
//		var p  = ps[i];
//		
//		var distance = Number.MIN_VALUE;
//		// iterate through left, right, top and bottom planes
//		for(var j = 0; j < frustum.planes.length-2; j++){
//			var plane = frustum.planes[j];
//			var ray = new THREE.Ray(p, dir);
//			var dI = ray.distanceToPlaneWithNegative(plane);
//			distance = Math.max(distance, dI);
//		}
//		max = Math.max(max, distance);
//	}
//	var offset = dir.clone().multiplyScalar(-max);
//	offset.multiplyScalar(factor);
//	pos.add(offset);
//	this.position.copy(pos);
//	
//}
THREE.Ray.prototype.distanceToPlaneWithNegative=function(plane){var denominator=plane.normal.dot(this.direction);if(denominator===0){// line is coplanar, return origin
if(plane.distanceToPoint(this.origin)===0){return 0;}// Null is preferable to undefined since undefined means.... it is undefined
return null;}var t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;return t;};/**
 * @class Loads mno files and returns a PointcloudOctree
 * for a description of the mno binary file format, read mnoFileFormat.txt
 * 
 * @author Markus Schuetz
 */Potree.POCLoader=function(){};/**
 * @return a point cloud octree with the root node data loaded. 
 * loading of descendants happens asynchronously when they're needed
 * 
 * @param url
 * @param loadingFinishedListener executed after loading the binary has been finished
 */Potree.POCLoader.load=function load(url,callback){try{var pco=new Potree.PointCloudOctreeGeometry();pco.url=url;var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.onreadystatechange=function(){if(xhr.readyState===4&&(xhr.status===200||xhr.status===0)){var fMno=JSON.parse(xhr.responseText);var version=new Potree.Version(fMno.version);// assume octreeDir is absolute if it starts with http
if(fMno.octreeDir.indexOf("http")===0){pco.octreeDir=fMno.octreeDir;}else{pco.octreeDir=url+"/../"+fMno.octreeDir;}pco.spacing=fMno.spacing;pco.hierarchyStepSize=fMno.hierarchyStepSize;pco.pointAttributes=fMno.pointAttributes;var min=new THREE.Vector3(fMno.boundingBox.lx,fMno.boundingBox.ly,fMno.boundingBox.lz);var max=new THREE.Vector3(fMno.boundingBox.ux,fMno.boundingBox.uy,fMno.boundingBox.uz);var boundingBox=new THREE.Box3(min,max);var tightBoundingBox=boundingBox.clone();if(fMno.tightBoundingBox){tightBoundingBox.min.copy(new THREE.Vector3(fMno.tightBoundingBox.lx,fMno.tightBoundingBox.ly,fMno.tightBoundingBox.lz));tightBoundingBox.max.copy(new THREE.Vector3(fMno.tightBoundingBox.ux,fMno.tightBoundingBox.uy,fMno.tightBoundingBox.uz));}var offset=min.clone();boundingBox.min.sub(offset);boundingBox.max.sub(offset);tightBoundingBox.min.sub(offset);tightBoundingBox.max.sub(offset);pco.projection=fMno.projection;pco.boundingBox=boundingBox;pco.tightBoundingBox=tightBoundingBox;pco.boundingSphere=boundingBox.getBoundingSphere();pco.tightBoundingSphere=tightBoundingBox.getBoundingSphere();pco.offset=offset;if(fMno.pointAttributes==="LAS"){pco.loader=new Potree.LasLazLoader(fMno.version);}else if(fMno.pointAttributes==="LAZ"){pco.loader=new Potree.LasLazLoader(fMno.version);}else{pco.loader=new Potree.BinaryLoader(fMno.version,boundingBox,fMno.scale);pco.pointAttributes=new Potree.PointAttributes(pco.pointAttributes);}var nodes={};{// load root
var _name2="r";var root=new Potree.PointCloudOctreeGeometryNode(_name2,pco,boundingBox);root.level=0;root.hasChildren=true;root.spacing=pco.spacing;if(version.upTo("1.5")){root.numPoints=fMno.hierarchy[0][1];}else{root.numPoints=0;}pco.root=root;pco.root.load();nodes[_name2]=root;}// load remaining hierarchy
if(version.upTo("1.4")){for(var _i13=1;_i13<fMno.hierarchy.length;_i13++){var _name3=fMno.hierarchy[_i13][0];var numPoints=fMno.hierarchy[_i13][1];var index=parseInt(_name3.charAt(_name3.length-1));var parentName=_name3.substring(0,_name3.length-1);var parentNode=nodes[parentName];var level=_name3.length-1;var _boundingBox2=Potree.POCLoader.createChildAABB(parentNode.boundingBox,index);var node=new Potree.PointCloudOctreeGeometryNode(_name3,pco,_boundingBox2);node.level=level;node.numPoints=numPoints;node.spacing=pco.spacing/Math.pow(2,level);parentNode.addChild(node);nodes[_name3]=node;}}pco.nodes=nodes;callback(pco);}};xhr.send(null);}catch(e){console.log("loading failed: '"+url+"'");console.log(e);callback();}};Potree.POCLoader.loadPointAttributes=function(mno){var fpa=mno.pointAttributes;var pa=new Potree.PointAttributes();for(var _i14=0;_i14<fpa.length;_i14++){var pointAttribute=Potree.PointAttribute[fpa[_i14]];pa.add(pointAttribute);}return pa;};Potree.POCLoader.createChildAABB=function(aabb,index){var min=aabb.min.clone();var max=aabb.max.clone();var size=new THREE.Vector3().subVectors(max,min);if((index&1)>0){min.z+=size.z/2;}else{max.z-=size.z/2;}if((index&2)>0){min.y+=size.y/2;}else{max.y-=size.y/2;}if((index&4)>0){min.x+=size.x/2;}else{max.x-=size.x/2;}return new THREE.Box3(min,max);};Potree.PointAttributeNames={};Potree.PointAttributeNames.POSITION_CARTESIAN=0;// float x, y, z;
Potree.PointAttributeNames.COLOR_PACKED=1;// byte r, g, b, a; 	I = [0,1]
Potree.PointAttributeNames.COLOR_FLOATS_1=2;// float r, g, b; 		I = [0,1]
Potree.PointAttributeNames.COLOR_FLOATS_255=3;// float r, g, b; 		I = [0,255]
Potree.PointAttributeNames.NORMAL_FLOATS=4;// float x, y, z;
Potree.PointAttributeNames.FILLER=5;Potree.PointAttributeNames.INTENSITY=6;Potree.PointAttributeNames.CLASSIFICATION=7;Potree.PointAttributeNames.NORMAL_SPHEREMAPPED=8;Potree.PointAttributeNames.NORMAL_OCT16=9;Potree.PointAttributeNames.NORMAL=10;/**
 * Some types of possible point attribute data formats
 *
 * @class
 */Potree.PointAttributeTypes={DATA_TYPE_DOUBLE:{ordinal:0,size:8},DATA_TYPE_FLOAT:{ordinal:1,size:4},DATA_TYPE_INT8:{ordinal:2,size:1},DATA_TYPE_UINT8:{ordinal:3,size:1},DATA_TYPE_INT16:{ordinal:4,size:2},DATA_TYPE_UINT16:{ordinal:5,size:2},DATA_TYPE_INT32:{ordinal:6,size:4},DATA_TYPE_UINT32:{ordinal:7,size:4},DATA_TYPE_INT64:{ordinal:8,size:8},DATA_TYPE_UINT64:{ordinal:9,size:8}};var i=0;for(var obj in Potree.PointAttributeTypes){Potree.PointAttributeTypes[i]=Potree.PointAttributeTypes[obj];i++;}/**
 * A single point attribute such as color/normal/.. and its data format/number of elements/...
 *
 * @class
 * @param name
 * @param type
 * @param size
 * @returns
 */Potree.PointAttribute=function(name,type,numElements){this.name=name;this.type=type;this.numElements=numElements;this.byteSize=this.numElements*this.type.size;};Potree.PointAttribute.POSITION_CARTESIAN=new Potree.PointAttribute(Potree.PointAttributeNames.POSITION_CARTESIAN,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3);Potree.PointAttribute.RGBA_PACKED=new Potree.PointAttribute(Potree.PointAttributeNames.COLOR_PACKED,Potree.PointAttributeTypes.DATA_TYPE_INT8,4);Potree.PointAttribute.COLOR_PACKED=Potree.PointAttribute.RGBA_PACKED;Potree.PointAttribute.RGB_PACKED=new Potree.PointAttribute(Potree.PointAttributeNames.COLOR_PACKED,Potree.PointAttributeTypes.DATA_TYPE_INT8,3);Potree.PointAttribute.NORMAL_FLOATS=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_FLOATS,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3);Potree.PointAttribute.FILLER_1B=new Potree.PointAttribute(Potree.PointAttributeNames.FILLER,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);Potree.PointAttribute.INTENSITY=new Potree.PointAttribute(Potree.PointAttributeNames.INTENSITY,Potree.PointAttributeTypes.DATA_TYPE_UINT16,1);Potree.PointAttribute.CLASSIFICATION=new Potree.PointAttribute(Potree.PointAttributeNames.CLASSIFICATION,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);Potree.PointAttribute.NORMAL_SPHEREMAPPED=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_SPHEREMAPPED,Potree.PointAttributeTypes.DATA_TYPE_UINT8,2);Potree.PointAttribute.NORMAL_OCT16=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_OCT16,Potree.PointAttributeTypes.DATA_TYPE_UINT8,2);Potree.PointAttribute.NORMAL=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3);/**
 * Ordered list of PointAttributes used to identify how points are aligned in a buffer.
 *
 * @class
 *
 */Potree.PointAttributes=function(pointAttributes){this.attributes=[];this.byteSize=0;this.size=0;if(pointAttributes!=null){for(var i=0;i<pointAttributes.length;i++){var pointAttributeName=pointAttributes[i];var pointAttribute=Potree.PointAttribute[pointAttributeName];this.attributes.push(pointAttribute);this.byteSize+=pointAttribute.byteSize;this.size++;}}};Potree.PointAttributes.prototype.add=function(pointAttribute){this.attributes.push(pointAttribute);this.byteSize+=pointAttribute.byteSize;this.size++;};Potree.PointAttributes.prototype.hasColors=function(){for(var name in this.attributes){var pointAttribute=this.attributes[name];if(pointAttribute.name===Potree.PointAttributeNames.COLOR_PACKED){return true;}}return false;};Potree.PointAttributes.prototype.hasNormals=function(){for(var name in this.attributes){var pointAttribute=this.attributes[name];if(pointAttribute===Potree.PointAttribute.NORMAL_SPHEREMAPPED||pointAttribute===Potree.PointAttribute.NORMAL_FLOATS||pointAttribute===Potree.PointAttribute.NORMAL||pointAttribute===Potree.PointAttribute.NORMAL_OCT16){return true;}}return false;};Potree.BinaryLoader=function(version,boundingBox,scale){if(typeof version==="string"){this.version=new Potree.Version(version);}else{this.version=version;}this.boundingBox=boundingBox;this.scale=scale;};Potree.BinaryLoader.prototype.load=function(node){if(node.loaded){return;}var scope=this;var url=node.getURL();if(this.version.equalOrHigher("1.4")){url+=".bin";}var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){var buffer=xhr.response;scope.parse(node,buffer);}else{console.log('Failed to load file! HTTP status: '+xhr.status+", file: "+url);}}};try{xhr.send(null);}catch(e){console.log("fehler beim laden der punktwolke: "+e);}};Potree.BinaryLoader.prototype.parse=function(node,buffer){var numPoints=buffer.byteLength/node.pcoGeometry.pointAttributes.byteSize;var pointAttributes=node.pcoGeometry.pointAttributes;if(this.version.upTo("1.5")){node.numPoints=numPoints;}var workerPath=Potree.scriptPath+"/workers/BinaryDecoderWorker.js";var worker=Potree.workerPool.getWorker(workerPath);worker.onmessage=function(e){var data=e.data;var buffers=data.attributeBuffers;var tightBoundingBox=new THREE.Box3(new THREE.Vector3().fromArray(data.tightBoundingBox.min),new THREE.Vector3().fromArray(data.tightBoundingBox.max));Potree.workerPool.returnWorker(workerPath,worker);var geometry=new THREE.BufferGeometry();for(var property in buffers){if(buffers.hasOwnProperty(property)){var _buffer=buffers[property].buffer;var attribute=buffers[property].attribute;var numElements=attribute.numElements;if(parseInt(property)===Potree.PointAttributeNames.POSITION_CARTESIAN){geometry.addAttribute("position",new THREE.BufferAttribute(new Float32Array(_buffer),3));}else if(parseInt(property)===Potree.PointAttributeNames.COLOR_PACKED){geometry.addAttribute("color",new THREE.BufferAttribute(new Uint8Array(_buffer),3,true));}else if(parseInt(property)===Potree.PointAttributeNames.INTENSITY){geometry.addAttribute("intensity",new THREE.BufferAttribute(new Float32Array(_buffer),1));}else if(parseInt(property)===Potree.PointAttributeNames.CLASSIFICATION){geometry.addAttribute("classification",new THREE.BufferAttribute(new Uint8Array(_buffer),1));}else if(parseInt(property)===Potree.PointAttributeNames.NORMAL_SPHEREMAPPED){geometry.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(_buffer),3));}else if(parseInt(property)===Potree.PointAttributeNames.NORMAL_OCT16){geometry.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(_buffer),3));}else if(parseInt(property)===Potree.PointAttributeNames.NORMAL){geometry.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(_buffer),3));}}}var indicesAttribute=new THREE.Uint8BufferAttribute(data.indices,4);indicesAttribute.normalized=true;geometry.addAttribute("indices",indicesAttribute);if(!geometry.attributes.normal){var _buffer2=new Float32Array(numPoints*3);geometry.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(_buffer2),3));}tightBoundingBox.max.sub(tightBoundingBox.min);tightBoundingBox.min.set(0,0,0);geometry.boundingBox=node.boundingBox;node.geometry=geometry;node.mean=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(data.mean))))();node.tightBoundingBox=tightBoundingBox;node.loaded=true;node.loading=false;node.pcoGeometry.numNodesLoading--;};var message={buffer:buffer,pointAttributes:pointAttributes,version:this.version.version,min:[node.boundingBox.min.x,node.boundingBox.min.y,node.boundingBox.min.z],offset:[node.pcoGeometry.offset.x,node.pcoGeometry.offset.y,node.pcoGeometry.offset.z],scale:this.scale};worker.postMessage(message,[message.buffer]);};function networkToNative(val){return(val&0x00FF)<<24|(val&0xFF00)<<8|val>>8&0xFF00|val>>24&0x00FF;}Potree.GreyhoundBinaryLoader=function(version,boundingBox,scale){if(typeof version==="string"){this.version=new Potree.Version(version);}else{this.version=version;}this.boundingBox=boundingBox;this.scale=scale;};Potree.GreyhoundBinaryLoader.prototype.load=function(node){if(node.loaded)return;var scope=this;var url=node.getURL();var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){var buffer=xhr.response;scope.parse(node,buffer);}else{console.log('Failed to load file! HTTP status:',xhr.status,'file:',url);}}};try{xhr.send(null);}catch(e){console.log("error loading point cloud: "+e);}};Potree.GreyhoundBinaryLoader.prototype.parse=function(node,buffer){var NUM_POINTS_BYTES=4;var view=new DataView(buffer,buffer.byteLength-NUM_POINTS_BYTES,NUM_POINTS_BYTES);var numPoints=networkToNative(view.getUint32(0));var pointAttributes=node.pcoGeometry.pointAttributes;node.numPoints=numPoints;var workerPath=Potree.scriptPath+"/workers/GreyhoundBinaryDecoderWorker.js";var worker=Potree.workerPool.getWorker(workerPath);worker.onmessage=function(e){var data=e.data;var buffers=data.attributeBuffers;var tightBoundingBox=new THREE.Box3(new THREE.Vector3().fromArray(data.tightBoundingBox.min),new THREE.Vector3().fromArray(data.tightBoundingBox.max));Potree.workerPool.returnWorker(workerPath,worker);var geometry=new THREE.BufferGeometry();var addAttribute=function addAttribute(name,buffer,size){geometry.addAttribute(name,new THREE.BufferAttribute(new Float32Array(buffer),size));};for(var property in buffers){if(buffers.hasOwnProperty(property)){var buffer=buffers[property].buffer;var attribute=buffers[property].attribute;var numElements=attribute.numElements;var pointAttributes=Potree.PointAttributeNames;switch(parseInt(property)){case pointAttributes.POSITION_CARTESIAN:addAttribute('position',buffer,3);//let fb = new Float32Array(buffer);
//console.log(fb);
break;case pointAttributes.COLOR_PACKED:geometry.addAttribute("color",new THREE.BufferAttribute(new Uint8Array(buffer),3,true));break;case pointAttributes.INTENSITY:addAttribute('intensity',buffer,1);break;case pointAttributes.CLASSIFICATION:addAttribute('classification',buffer,1);break;case pointAttributes.NORMAL_SPHEREMAPPED:case pointAttributes.NORMAL_OCT16:case pointAttributes.NORMAL:addAttribute('normal',buffer,3);break;default:break;}}}//addAttribute('indices', data.indices, 1);
var indicesAttribute=new THREE.Uint8BufferAttribute(data.indices,4);indicesAttribute.normalized=true;geometry.addAttribute("indices",indicesAttribute);if(!geometry.attributes.normal){addAttribute('normal',new Float32Array(numPoints*3),3);}geometry.boundingBox=node.boundingBox;node.geometry=geometry;node.tightBoundingBox=tightBoundingBox;node.loaded=true;node.loading=false;--node.pcoGeometry.numNodesLoading;};var bb=node.boundingBox;var pco=node.pcoGeometry;//let nodeOffset = node.boundingBox.getCenter();
//let nodeOffset = new THREE.Vector3(0, 0, 0);
var nodeOffset=node.pcoGeometry.boundingBox.getCenter().sub(node.boundingBox.min);//let nodeOffset = node.pcoGeometry.boundingBox.min;
var message={buffer:buffer,pointAttributes:pointAttributes,version:this.version.version,schema:node.pcoGeometry.schema,min:[bb.min.x,bb.min.y,bb.min.z],max:[bb.max.x,bb.max.y,bb.max.z],offset:nodeOffset.toArray(),scale:this.scale,normalize:node.pcoGeometry.normalize};worker.postMessage(message,[message.buffer]);};/**
 * @class Loads greyhound metadata and returns a PointcloudOctree
 *
 * @author Maarten van Meersbergen
 * @author Oscar Martinez Rubi
 * @author Connor Manning
 */var GreyhoundUtils=function(){function GreyhoundUtils(){_classCallCheck(this,GreyhoundUtils);}_createClass(GreyhoundUtils,null,[{key:"getQueryParam",value:function getQueryParam(name){name=name.replace(/[\[\]]/g,"\\$&");var regex=new RegExp("[?&]"+name+"(=([^&#]*)|&|#|$)"),results=regex.exec(window.location.href);if(!results)return null;if(!results[2])return'';return decodeURIComponent(results[2].replace(/\+/g," "));}},{key:"createSchema",value:function createSchema(attributes){var schema=[{"name":"X","size":4,"type":"signed"},{"name":"Y","size":4,"type":"signed"},{"name":"Z","size":4,"type":"signed"}];// Once we include options in the UI to load a dynamic list of available
// attributes for visualization (f.e. Classification, Intensity etc.)
// we will be able to ask for that specific attribute from the server,
// where we are now requesting all attributes for all points all the time.
// If we do that though, we also need to tell Potree to redraw the points
// that are already loaded (with different attributes).
// This is not default behaviour.
attributes.forEach(function(item){if(item==='COLOR_PACKED'){schema.push({"name":"Red","size":2,"type":"unsigned"});schema.push({"name":"Green","size":2,"type":"unsigned"});schema.push({"name":"Blue","size":2,"type":"unsigned"});}else if(item==='INTENSITY'){schema.push({"name":"Intensity","size":2,"type":"unsigned"});}else if(item==='CLASSIFICATION'){schema.push({"name":"Classification","size":1,"type":"unsigned"});}});return schema;}},{key:"fetch",value:function fetch(url,cb){var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){cb(null,xhr.responseText);}else{cb(xhr.responseText);}}};xhr.send(null);}},{key:"fetchBinary",value:function fetchBinary(url,cb){var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){cb(null,xhr.response);}else{cb(xhr.responseText);}}};xhr.send(null);}},{key:"pointSizeFrom",value:function pointSizeFrom(schema){return schema.reduce(function(p,c){return p+c.size;},0);}},{key:"getNormalization",value:function getNormalization(serverURL,baseDepth,cb){var s=[{"name":"X","size":4,"type":"floating"},{"name":"Y","size":4,"type":"floating"},{"name":"Z","size":4,"type":"floating"},{"name":"Red","size":2,"type":"unsigned"},{"name":"Green","size":2,"type":"unsigned"},{"name":"Blue","size":2,"type":"unsigned"},{"name":"Intensity","size":2,"type":"unsigned"}];var url=serverURL+'read?depth='+baseDepth+'&schema='+JSON.stringify(s);GreyhoundUtils.fetchBinary(url,function(err,buffer){if(err)throw new Error(err);var view=new DataView(buffer);var numBytes=buffer.byteLength-4;var numPoints=view.getUint32(numBytes,true);var pointSize=GreyhoundUtils.pointSizeFrom(s);var colorNorm=false,intensityNorm=false;var v;for(var offset=0;offset<numBytes;offset+=pointSize){if(view.getUint16(offset+12,true)>255||view.getUint16(offset+14,true)>255||view.getUint16(offset+16,true)>255){colorNorm=true;}if(view.getUint16(offset+18,true)>255){intensityNorm=true;}if(colorNorm&&intensityNorm)break;}if(colorNorm)console.log('Normalizing color');if(intensityNorm)console.log('Normalizing intensity');cb(null,{color:colorNorm,intensity:intensityNorm});});}}]);return GreyhoundUtils;}();;Potree.GreyhoundLoader=function(){};Potree.GreyhoundLoader.loadInfoJSON=function load(url,callback){};/**
 * @return a point cloud octree with the root node data loaded.
 * loading of descendants happens asynchronously when they're needed
 *
 * @param url
 * @param loadingFinishedListener executed after loading the binary has been
 * finished
 */Potree.GreyhoundLoader.load=function load(url,callback){var HIERARCHY_STEP_SIZE=5;try{// We assume everything ater the string 'greyhound://' is the server url
var serverURL=url.split('greyhound://')[1];if(serverURL.split('http://').length==1){serverURL='http://'+serverURL;}GreyhoundUtils.fetch(serverURL+'info',function(err,data){if(err)throw new Error(err);/* We parse the result of the info query, which should be a JSON
             * datastructure somewhat like:
            {
              "bounds": [635577, 848882, -1000, 639004, 853538, 2000],
              "numPoints": 10653336,
              "schema": [
                  { "name": "X", "size": 8, "type": "floating" },
                  { "name": "Y", "size": 8, "type": "floating" },
                  { "name": "Z", "size": 8, "type": "floating" },
                  { "name": "Intensity", "size": 2, "type": "unsigned" },
                  { "name": "OriginId", "size": 4, "type": "unsigned" },
                  { "name": "Red", "size": 2, "type": "unsigned" },
                  { "name": "Green", "size": 2, "type": "unsigned" },
                  { "name": "Blue", "size": 2, "type": "unsigned" }
              ],
              "srs": "<omitted for brevity>",
              "type": "octree"
            }
            */var greyhoundInfo=JSON.parse(data);var version=new Potree.Version('1.4');var bounds=greyhoundInfo.bounds;var boundsConforming=greyhoundInfo.boundsConforming;var width=bounds[3]-bounds[0];var depth=bounds[4]-bounds[1];var height=bounds[5]-bounds[2];var radius=width/2;var scale=greyhoundInfo.scale;var scale=greyhoundInfo.scale||.01;if(Array.isArray(scale)){scale=Math.min(scale[0],scale[1],scale[2]);}if(GreyhoundUtils.getQueryParam('scale')){scale=parseFloat(GreyhoundUtils.getQueryParam('scale'));}var baseDepth=Math.max(8,greyhoundInfo.baseDepth);// Ideally we want to change this bit completely, since
// greyhound's options are wider than the default options for
// visualizing pointclouds. If someone ever has time to build a
// custom ui element for greyhound, the schema options from
// this info request should be given to the UI, so the user can
// choose between them. The selected option can then be
// directly requested from the server in the
// PointCloudGreyhoundGeometryNode without asking for
// attributes that we are not currently visualizing.  We assume
// XYZ are always available.
var attributes=['POSITION_CARTESIAN'];// To be careful, we only add COLOR_PACKED as an option if all
// colors are actually found.
var red=false,green=false,blue=false;greyhoundInfo.schema.forEach(function(entry){// Intensity and Classification are optional.
if(entry.name==='Intensity'){attributes.push('INTENSITY');}if(entry.name==='Classification'){attributes.push('CLASSIFICATION');}if(entry.name==='Red')red=true;else if(entry.name==='Green')green=true;else if(entry.name==='Blue')blue=true;});if(red&&green&&blue)attributes.push('COLOR_PACKED');// Fill in geometry fields.
var pgg=new Potree.PointCloudGreyhoundGeometry();pgg.serverURL=serverURL;pgg.spacing=(bounds[3]-bounds[0])/Math.pow(2,baseDepth);pgg.baseDepth=baseDepth;pgg.hierarchyStepSize=HIERARCHY_STEP_SIZE;pgg.schema=GreyhoundUtils.createSchema(attributes);var pointSize=GreyhoundUtils.pointSizeFrom(pgg.schema);pgg.pointAttributes=new Potree.PointAttributes(attributes);pgg.pointAttributes.byteSize=pointSize;var boundingBox=new THREE.Box3(new THREE.Vector3().fromArray(bounds,0),new THREE.Vector3().fromArray(bounds,3));var offset=boundingBox.min.clone();boundingBox.max.sub(boundingBox.min);boundingBox.min.set(0,0,0);pgg.projection=greyhoundInfo.srs;pgg.boundingBox=boundingBox;pgg.boundingSphere=boundingBox.getBoundingSphere();pgg.scale=scale;pgg.offset=offset;console.log('Scale:',scale);console.log('Offset:',offset);console.log('Bounds:',boundingBox);pgg.loader=new Potree.GreyhoundBinaryLoader(version,boundingBox,pgg.scale);var nodes={};{// load root
var name="r";var root=new Potree.PointCloudGreyhoundGeometryNode(name,pgg,boundingBox,scale,offset);root.level=0;root.hasChildren=true;root.numPoints=greyhoundInfo.numPoints;root.spacing=pgg.spacing;pgg.root=root;pgg.root.load();nodes[name]=root;}pgg.nodes=nodes;GreyhoundUtils.getNormalization(serverURL,greyhoundInfo.baseDepth,function(err,normalize){if(normalize.color)pgg.normalize.color=true;if(normalize.intensity)pgg.normalize.intensity=true;callback(pgg);});});}catch(e){console.log("loading failed: '"+url+"'");console.log(e);callback();}};Potree.GreyhoundLoader.loadPointAttributes=function(mno){var fpa=mno.pointAttributes;var pa=new Potree.PointAttributes();for(var i=0;i<fpa.length;i++){var pointAttribute=Potree.PointAttribute[fpa[i]];pa.add(pointAttribute);}return pa;};Potree.GreyhoundLoader.createChildAABB=function(aabb,childIndex){var V3=THREE.Vector3;var min=aabb.min;var max=aabb.max;var dHalfLength=new THREE.Vector3().copy(max).sub(min).multiplyScalar(0.5);var xHalfLength=new THREE.Vector3(dHalfLength.x,0,0);var yHalfLength=new THREE.Vector3(0,dHalfLength.y,0);var zHalfLength=new THREE.Vector3(0,0,dHalfLength.z);var cmin=min;var cmax=new THREE.Vector3().add(min).add(dHalfLength);var min,max;if(childIndex===1){min=new THREE.Vector3().copy(cmin).add(zHalfLength);max=new THREE.Vector3().copy(cmax).add(zHalfLength);}else if(childIndex===3){min=new THREE.Vector3().copy(cmin).add(zHalfLength).add(yHalfLength);max=new THREE.Vector3().copy(cmax).add(zHalfLength).add(yHalfLength);}else if(childIndex===0){min=cmin;max=cmax;}else if(childIndex===2){min=new THREE.Vector3().copy(cmin).add(yHalfLength);max=new THREE.Vector3().copy(cmax).add(yHalfLength);}else if(childIndex===5){min=new THREE.Vector3().copy(cmin).add(zHalfLength).add(xHalfLength);max=new THREE.Vector3().copy(cmax).add(zHalfLength).add(xHalfLength);}else if(childIndex===7){min=new THREE.Vector3().copy(cmin).add(dHalfLength);max=new THREE.Vector3().copy(cmax).add(dHalfLength);}else if(childIndex===4){min=new THREE.Vector3().copy(cmin).add(xHalfLength);max=new THREE.Vector3().copy(cmax).add(xHalfLength);}else if(childIndex===6){min=new THREE.Vector3().copy(cmin).add(xHalfLength).add(yHalfLength);max=new THREE.Vector3().copy(cmax).add(xHalfLength).add(yHalfLength);}return new THREE.Box3(min,max);};/**
 * laslaz code taken and adapted from plas.io js-laslaz
 *	http://plas.io/
 *  https://github.com/verma/plasio
 *
 * Thanks to Uday Verma and Howard Butler
 *
 */Potree.LasLazLoader=function(){function LasLazLoader(version){_classCallCheck(this,LasLazLoader);if(typeof version==="string"){this.version=new Potree.Version(version);}else{this.version=version;}}_createClass(LasLazLoader,[{key:"load",value:function load(node){if(node.loaded){return;}var pointAttributes=node.pcoGeometry.pointAttributes;var url=node.getURL();if(this.version.equalOrHigher("1.4")){url+="."+pointAttributes.toLowerCase();}var scope=this;var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200){var buffer=xhr.response;scope.parse(node,buffer);}else{console.log('Failed to load file! HTTP status: '+xhr.status+", file: "+url);}}};xhr.send(null);}},{key:"parse",value:function parse(node,buffer){var lf=new LASFile(buffer);var handler=new Potree.LasLazBatcher(node);return Promise.resolve(lf).cancellable().then(function(lf){return lf.open().then(function(){lf.isOpen=true;return lf;}).catch(Promise.CancellationError,function(e){// open message was sent at this point, but then handler was not called
// because the operation was cancelled, explicitly close the file
return lf.close().then(function(){throw e;});});}).then(function(lf){return lf.getHeader().then(function(h){return[lf,h];});}).then(function(v){var lf=v[0];var header=v[1];var skip=1;var totalRead=0;var totalToRead=skip<=1?header.pointsCount:header.pointsCount/skip;var reader=function reader(){var p=lf.readData(1000000,0,skip);return p.then(function(data){handler.push(new LASDecoder(data.buffer,header.pointsFormatId,header.pointsStructSize,data.count,header.scale,header.offset,header.mins,header.maxs));totalRead+=data.count;Potree.LasLazLoader.progressCB(totalRead/totalToRead);if(data.hasMoreData)return reader();else{header.totalRead=totalRead;header.versionAsString=lf.versionAsString;header.isCompressed=lf.isCompressed;return[lf,header,handler];}});};return reader();}).then(function(v){var lf=v[0];// we're done loading this file
//
Potree.LasLazLoader.progressCB(1);// Close it
return lf.close().then(function(){lf.isOpen=false;// Delay this a bit so that the user sees 100% completion
//
return Promise.delay(200).cancellable();}).then(function(){// trim off the first element (our LASFile which we don't really want to pass to the user)
//
return v.slice(1);});}).catch(Promise.CancellationError,function(e){// If there was a cancellation, make sure the file is closed, if the file is open
// close and then fail
if(lf.isOpen)return lf.close().then(function(){lf.isOpen=false;throw e;});throw e;});}},{key:"handle",value:function handle(node,url){}}],[{key:"progressCB",value:function progressCB(){}}]);return LasLazLoader;}();Potree.LasLazBatcher=function(){function LasLazBatcher(node){_classCallCheck(this,LasLazBatcher);this.node=node;}_createClass(LasLazBatcher,[{key:"push",value:function push(lasBuffer){var _this4=this;var workerPath=Potree.scriptPath+"/workers/LASDecoderWorker.js";var worker=Potree.workerPool.getWorker(workerPath);worker.onmessage=function(e){var geometry=new THREE.BufferGeometry();var numPoints=lasBuffer.pointsCount;var endsWith=function endsWith(str,suffix){return str.indexOf(suffix,str.length-suffix.length)!==-1;};var positions=e.data.position;var colors=new Uint8Array(e.data.color);var intensities=e.data.intensity;var classifications=new Uint8Array(e.data.classification);var returnNumbers=new Uint8Array(e.data.returnNumber);var numberOfReturns=new Uint8Array(e.data.numberOfReturns);var pointSourceIDs=new Uint16Array(e.data.pointSourceID);//let indices = new ArrayBuffer(numPoints*4);
//let iIndices = new Uint32Array(indices);
//let box = new THREE.Box3();
//
//let fPositions = new Float32Array(positions);
//for(let i = 0; i < numPoints; i++){				
//	box.expandByPoint(new THREE.Vector3(fPositions[3*i+0], fPositions[3*i+1], fPositions[3*i+2]));
//}
geometry.addAttribute('position',new THREE.BufferAttribute(new Float32Array(positions),3));geometry.addAttribute('color',new THREE.BufferAttribute(colors,3,true));geometry.addAttribute('intensity',new THREE.BufferAttribute(new Float32Array(intensities),1));geometry.addAttribute('classification',new THREE.BufferAttribute(classifications,1));geometry.addAttribute('returnNumber',new THREE.BufferAttribute(returnNumbers,1));geometry.addAttribute('numberOfReturns',new THREE.BufferAttribute(numberOfReturns,1));geometry.addAttribute('pointSourceID',new THREE.BufferAttribute(pointSourceIDs,1));geometry.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(numPoints*3),3));var indicesAttribute=new THREE.Uint8BufferAttribute(e.data.indices,4);indicesAttribute.normalized=true;geometry.addAttribute("indices",indicesAttribute);var tightBoundingBox=new THREE.Box3(new THREE.Vector3().fromArray(e.data.tightBoundingBox.min),new THREE.Vector3().fromArray(e.data.tightBoundingBox.max));geometry.boundingBox=_this4.node.boundingBox;_this4.node.tightBoundingBox=tightBoundingBox;_this4.node.geometry=geometry;_this4.node.loaded=true;_this4.node.loading=false;_this4.node.pcoGeometry.numNodesLoading--;_this4.node.mean=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(e.data.mean))))();Potree.workerPool.returnWorker(workerPath,worker);};var message={buffer:lasBuffer.arrayb,numPoints:lasBuffer.pointsCount,pointSize:lasBuffer.pointSize,pointFormatID:2,scale:lasBuffer.scale,offset:lasBuffer.offset,mins:lasBuffer.mins,maxs:lasBuffer.maxs};worker.postMessage(message,[message.buffer]);}}]);return LasLazBatcher;}();//
//
//
// how to calculate the radius of a projected sphere in screen space
// http://stackoverflow.com/questions/21648630/radius-of-projected-sphere-in-screen-space
// http://stackoverflow.com/questions/3717226/radius-of-projected-sphere
//
//
// to get a ready to use gradient array from a chroma.js gradient:
// http://gka.github.io/chroma.js/
//
//var stops = [];
//for(let i = 0; i <= 10; i++){
//	let range = chroma.scale(['yellow', 'navy']).mode('lch').domain([10,0])(i)._rgb
//		.slice(0, 3)
//		.map(v => (v / 255).toFixed(4))
//		.join(", ");
//
//	let line = `[${i / 10}, new THREE.Color(${range})],`;
//
//	stops.push(line);
//}
//stops.join("\n");
// to get a ready to use gradient array from matplotlib:
//import matplotlib.pyplot as plt
//import matplotlib.colors as colors
//
//norm = colors.Normalize(vmin=0,vmax=1)
//cmap = plt.cm.viridis
//
//for i in range(0,11):
//    u = i / 10
//    rgb = cmap(norm(u))[0:3]
//    rgb = ["{0:.3f}".format(v) for v in rgb]
//    rgb = "[" + str(u) + ", new THREE.Color(" +  ", ".join(rgb) + ")],"
//    print(rgb)
Potree.Gradients={RAINBOW:[[0,new THREE.Color(0.278,0,0.714)],[1/6,new THREE.Color(0,0,1)],[2/6,new THREE.Color(0,1,1)],[3/6,new THREE.Color(0,1,0)],[4/6,new THREE.Color(1,1,0)],[5/6,new THREE.Color(1,0.64,0)],[1,new THREE.Color(1,0,0)]],// From chroma spectral http://gka.github.io/chroma.js/
SPECTRAL:[[0,new THREE.Color(0.3686,0.3098,0.6353)],[0.1,new THREE.Color(0.1961,0.5333,0.7412)],[0.2,new THREE.Color(0.4000,0.7608,0.6471)],[0.3,new THREE.Color(0.6706,0.8667,0.6431)],[0.4,new THREE.Color(0.9020,0.9608,0.5961)],[0.5,new THREE.Color(1.0000,1.0000,0.7490)],[0.6,new THREE.Color(0.9961,0.8784,0.5451)],[0.7,new THREE.Color(0.9922,0.6824,0.3804)],[0.8,new THREE.Color(0.9569,0.4275,0.2627)],[0.9,new THREE.Color(0.8353,0.2431,0.3098)],[1,new THREE.Color(0.6196,0.0039,0.2588)]],PLASMA:[[0.0,new THREE.Color(0.241,0.015,0.610)],[0.1,new THREE.Color(0.387,0.001,0.654)],[0.2,new THREE.Color(0.524,0.025,0.653)],[0.3,new THREE.Color(0.651,0.125,0.596)],[0.4,new THREE.Color(0.752,0.227,0.513)],[0.5,new THREE.Color(0.837,0.329,0.431)],[0.6,new THREE.Color(0.907,0.435,0.353)],[0.7,new THREE.Color(0.963,0.554,0.272)],[0.8,new THREE.Color(0.992,0.681,0.195)],[0.9,new THREE.Color(0.987,0.822,0.144)],[1.0,new THREE.Color(0.940,0.975,0.131)]],YELLOW_GREEN:[[0,new THREE.Color(0.1647,0.2824,0.3451)],[0.1,new THREE.Color(0.1338,0.3555,0.4227)],[0.2,new THREE.Color(0.0610,0.4319,0.4864)],[0.3,new THREE.Color(0.0000,0.5099,0.5319)],[0.4,new THREE.Color(0.0000,0.5881,0.5569)],[0.5,new THREE.Color(0.1370,0.6650,0.5614)],[0.6,new THREE.Color(0.2906,0.7395,0.5477)],[0.7,new THREE.Color(0.4453,0.8099,0.5201)],[0.8,new THREE.Color(0.6102,0.8748,0.4850)],[0.9,new THREE.Color(0.7883,0.9323,0.4514)],[1,new THREE.Color(0.9804,0.9804,0.4314)]],VIRIDIS:[[0.0,new THREE.Color(0.267,0.005,0.329)],[0.1,new THREE.Color(0.283,0.141,0.458)],[0.2,new THREE.Color(0.254,0.265,0.530)],[0.3,new THREE.Color(0.207,0.372,0.553)],[0.4,new THREE.Color(0.164,0.471,0.558)],[0.5,new THREE.Color(0.128,0.567,0.551)],[0.6,new THREE.Color(0.135,0.659,0.518)],[0.7,new THREE.Color(0.267,0.749,0.441)],[0.8,new THREE.Color(0.478,0.821,0.318)],[0.9,new THREE.Color(0.741,0.873,0.150)],[1.0,new THREE.Color(0.993,0.906,0.144)]],INFERNO:[[0.0,new THREE.Color(0.077,0.042,0.206)],[0.1,new THREE.Color(0.225,0.036,0.388)],[0.2,new THREE.Color(0.373,0.074,0.432)],[0.3,new THREE.Color(0.522,0.128,0.420)],[0.4,new THREE.Color(0.665,0.182,0.370)],[0.5,new THREE.Color(0.797,0.255,0.287)],[0.6,new THREE.Color(0.902,0.364,0.184)],[0.7,new THREE.Color(0.969,0.516,0.063)],[0.8,new THREE.Color(0.988,0.683,0.072)],[0.9,new THREE.Color(0.961,0.859,0.298)],[1.0,new THREE.Color(0.988,0.998,0.645)]],GRAYSCALE:[[0,new THREE.Color(0,0,0)],[1,new THREE.Color(1,1,1)]]};Potree.Classification={"DEFAULT":{0:new THREE.Vector4(0.5,0.5,0.5,1.0),1:new THREE.Vector4(0.5,0.5,0.5,1.0),2:new THREE.Vector4(0.63,0.32,0.18,1.0),3:new THREE.Vector4(0.0,1.0,0.0,1.0),4:new THREE.Vector4(0.0,0.8,0.0,1.0),5:new THREE.Vector4(0.0,0.6,0.0,1.0),6:new THREE.Vector4(1.0,0.66,0.0,1.0),7:new THREE.Vector4(1.0,0,1.0,1.0),8:new THREE.Vector4(1.0,0,0.0,1.0),9:new THREE.Vector4(0.0,0.0,1.0,1.0),12:new THREE.Vector4(1.0,1.0,0.0,1.0),"DEFAULT":new THREE.Vector4(0.3,0.6,0.6,0.5)}};Potree.PointSizeType={FIXED:0,ATTENUATED:1,ADAPTIVE:2};Potree.PointShape={SQUARE:0,CIRCLE:1,PARABOLOID:2};Potree.PointColorType={RGB:0,COLOR:1,DEPTH:2,HEIGHT:3,ELEVATION:3,INTENSITY:4,INTENSITY_GRADIENT:5,LOD:6,LEVEL_OF_DETAIL:6,POINT_INDEX:7,CLASSIFICATION:8,RETURN_NUMBER:9,SOURCE:10,NORMAL:11,PHONG:12,RGB_HEIGHT:13,COMPOSITE:50};Potree.ClipMode={DISABLED:0,CLIP_OUTSIDE:1,HIGHLIGHT_INSIDE:2};Potree.TreeType={OCTREE:0,KDTREE:1};Potree.PointCloudMaterial=function(_THREE$RawShaderMater){_inherits(PointCloudMaterial,_THREE$RawShaderMater);function PointCloudMaterial(){var parameters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,PointCloudMaterial);var _this5=_possibleConstructorReturn(this,(PointCloudMaterial.__proto__||Object.getPrototypeOf(PointCloudMaterial)).call(this));_this5.visibleNodesTexture=Potree.utils.generateDataTexture(2048,1,new THREE.Color(0xffffff));_this5.visibleNodesTexture.minFilter=THREE.NearestFilter;_this5.visibleNodesTexture.magFilter=THREE.NearestFilter;var pointSize=parameters.size||1.0;var minSize=parameters.minSize||1.0;var maxSize=parameters.maxSize||50.0;var treeType=parameters.treeType||Potree.TreeType.OCTREE;_this5._pointSizeType=Potree.PointSizeType.FIXED;_this5._shape=Potree.PointShape.SQUARE;_this5._pointColorType=Potree.PointColorType.RGB;_this5._useClipBox=false;_this5.numClipBoxes=0;_this5._clipMode=Potree.ClipMode.DISABLED;_this5._weighted=false;_this5._depthMap=null;_this5._gradient=Potree.Gradients.SPECTRAL;_this5._classification=Potree.Classification.DEFAULT;_this5.gradientTexture=Potree.PointCloudMaterial.generateGradientTexture(_this5._gradient);_this5.classificationTexture=Potree.PointCloudMaterial.generateClassificationTexture(_this5._classification);_this5.lights=false;_this5.fog=false;_this5._treeType=treeType;_this5._useEDL=false;_this5._defaultIntensityRangeChanged=false;_this5._defaultElevationRangeChanged=false;_this5.attributes={position:{type:"fv",value:[]},color:{type:"fv",value:[]},normal:{type:"fv",value:[]},intensity:{type:"f",value:[]},classification:{type:"f",value:[]},returnNumber:{type:"f",value:[]},numberOfReturns:{type:"f",value:[]},pointSourceID:{type:"f",value:[]},indices:{type:"fv",value:[]}};_this5.uniforms={level:{type:"f",value:0.0},vnStart:{type:"f",value:0.0},spacing:{type:"f",value:1.0},blendHardness:{type:"f",value:2.0},blendDepthSupplement:{type:"f",value:0.0},fov:{type:"f",value:1.0},screenWidth:{type:"f",value:1.0},screenHeight:{type:"f",value:1.0},near:{type:"f",value:0.1},far:{type:"f",value:1.0},uColor:{type:"c",value:new THREE.Color(0xffffff)},opacity:{type:"f",value:1.0},size:{type:"f",value:pointSize},minSize:{type:"f",value:minSize},maxSize:{type:"f",value:maxSize},octreeSize:{type:"f",value:0},bbSize:{type:"fv",value:[0,0,0]},heightMin:{type:"f",value:0.0},heightMax:{type:"f",value:1.0},clipBoxCount:{type:"f",value:0},visibleNodes:{type:"t",value:_this5.visibleNodesTexture},pcIndex:{type:"f",value:0},gradient:{type:"t",value:_this5.gradientTexture},classificationLUT:{type:"t",value:_this5.classificationTexture},clipBoxes:{type:"Matrix4fv",value:[]},toModel:{type:"Matrix4f",value:[]},depthMap:{type:"t",value:null},diffuse:{type:"fv",value:[1,1,1]},transition:{type:"f",value:0.5},intensityRange:{type:"fv",value:[0,65000]},intensityGamma:{type:"f",value:1},intensityContrast:{type:"f",value:0},intensityBrightness:{type:"f",value:0},rgbGamma:{type:"f",value:1},rgbContrast:{type:"f",value:0},rgbBrightness:{type:"f",value:0},wRGB:{type:"f",value:1},wIntensity:{type:"f",value:0},wElevation:{type:"f",value:0},wClassification:{type:"f",value:0},wReturnNumber:{type:"f",value:0},wSourceID:{type:"f",value:0}};_this5.defaultAttributeValues.normal=[0,0,0];_this5.defaultAttributeValues.classification=[0,0,0];_this5.defaultAttributeValues.indices=[0,0,0,0];_this5.vertexShader=_this5.getDefines()+Potree.Shaders["pointcloud.vs"];_this5.fragmentShader=_this5.getDefines()+Potree.Shaders["pointcloud.fs"];_this5.vertexColors=THREE.VertexColors;return _this5;}_createClass(PointCloudMaterial,[{key:"updateShaderSource",value:function updateShaderSource(){this.vertexShader=this.getDefines()+Potree.Shaders["pointcloud.vs"];this.fragmentShader=this.getDefines()+Potree.Shaders["pointcloud.fs"];if(this.depthMap){this.uniforms.depthMap.value=this.depthMap;//this.depthMap = depthMap;
//this.setValues({
//	depthMap: this.depthMap,
//});
}if(this.opacity===1.0){this.blending=THREE.NoBlending;this.transparent=false;this.depthTest=true;this.depthWrite=true;}else if(this.opacity<1.0&&!this.useEDL){this.blending=THREE.AdditiveBlending;this.transparent=true;this.depthTest=false;this.depthWrite=true;this.depthFunc=THREE.AlwaysDepth;}if(this.weighted){this.blending=THREE.AdditiveBlending;this.transparent=true;this.depthTest=true;this.depthWrite=false;}this.needsUpdate=true;}},{key:"getDefines",value:function getDefines(){var defines="";if(this.pointSizeType===Potree.PointSizeType.FIXED){defines+="#define fixed_point_size\n";}else if(this.pointSizeType===Potree.PointSizeType.ATTENUATED){defines+="#define attenuated_point_size\n";}else if(this.pointSizeType===Potree.PointSizeType.ADAPTIVE){defines+="#define adaptive_point_size\n";}if(this.shape===Potree.PointShape.SQUARE){defines+="#define square_point_shape\n";}else if(this.shape===Potree.PointShape.CIRCLE){defines+="#define circle_point_shape\n";}else if(this.shape===Potree.PointShape.PARABOLOID){defines+="#define paraboloid_point_shape\n";}if(this._useEDL){defines+="#define use_edl\n";}if(this._pointColorType===Potree.PointColorType.RGB){defines+="#define color_type_rgb\n";}else if(this._pointColorType===Potree.PointColorType.COLOR){defines+="#define color_type_color\n";}else if(this._pointColorType===Potree.PointColorType.DEPTH){defines+="#define color_type_depth\n";}else if(this._pointColorType===Potree.PointColorType.HEIGHT){defines+="#define color_type_height\n";}else if(this._pointColorType===Potree.PointColorType.INTENSITY){defines+="#define color_type_intensity\n";}else if(this._pointColorType===Potree.PointColorType.INTENSITY_GRADIENT){defines+="#define color_type_intensity_gradient\n";}else if(this._pointColorType===Potree.PointColorType.LOD){defines+="#define color_type_lod\n";}else if(this._pointColorType===Potree.PointColorType.POINT_INDEX){defines+="#define color_type_point_index\n";}else if(this._pointColorType===Potree.PointColorType.CLASSIFICATION){defines+="#define color_type_classification\n";}else if(this._pointColorType===Potree.PointColorType.RETURN_NUMBER){defines+="#define color_type_return_number\n";}else if(this._pointColorType===Potree.PointColorType.SOURCE){defines+="#define color_type_source\n";}else if(this._pointColorType===Potree.PointColorType.NORMAL){defines+="#define color_type_normal\n";}else if(this._pointColorType===Potree.PointColorType.PHONG){defines+="#define color_type_phong\n";}else if(this._pointColorType===Potree.PointColorType.RGB_HEIGHT){defines+="#define color_type_rgb_height\n";}else if(this._pointColorType===Potree.PointColorType.COMPOSITE){defines+="#define color_type_composite\n";}if(this.clipMode===Potree.ClipMode.DISABLED){defines+="#define clip_disabled\n";}else if(this.clipMode===Potree.ClipMode.CLIP_OUTSIDE){defines+="#define clip_outside\n";}else if(this.clipMode===Potree.ClipMode.HIGHLIGHT_INSIDE){defines+="#define clip_highlight_inside\n";}if(this._treeType===Potree.TreeType.OCTREE){defines+="#define tree_type_octree\n";}else if(this._treeType===Potree.TreeType.KDTREE){defines+="#define tree_type_kdtree\n";}if(this.weighted){defines+="#define weighted_splats\n";}if(this.numClipBoxes>0){defines+="#define use_clip_box\n";}return defines;}},{key:"setClipBoxes",value:function setClipBoxes(clipBoxes){if(!clipBoxes){return;}this.clipBoxes=clipBoxes;var doUpdate=this.numClipBoxes!==clipBoxes.length&&(clipBoxes.length===0||this.numClipBoxes===0);this.numClipBoxes=clipBoxes.length;this.uniforms.clipBoxCount.value=this.numClipBoxes;if(doUpdate){this.updateShaderSource();}this.uniforms.clipBoxes.value=new Float32Array(this.numClipBoxes*16);for(var _i15=0;_i15<this.numClipBoxes;_i15++){var box=clipBoxes[_i15];this.uniforms.clipBoxes.value.set(box.inverse.elements,16*_i15);}for(var _i16=0;_i16<this.uniforms.clipBoxes.value.length;_i16++){if(Number.isNaN(this.uniforms.clipBoxes.value[_i16])){this.uniforms.clipBoxes.value[_i16]=Infinity;}}}},{key:"recomputeClassification",value:function recomputeClassification(){this.classificationTexture=Potree.PointCloudMaterial.generateClassificationTexture(this._classification);this.uniforms.classificationLUT.value=this.classificationTexture;this.dispatchEvent({type:"material_property_changed",target:this});}},{key:"gradient",get:function get(){return this._gradient;},set:function set(value){if(this._gradient!==value){this._gradient=value;this.gradientTexture=Potree.PointCloudMaterial.generateGradientTexture(this._gradient);this.uniforms.gradient.value=this.gradientTexture;}}},{key:"classification",get:function get(){return this._classification;},set:function set(value){var isEqual=Object.keys(value).length===Object.keys(this._classification).length;var _iteratorNormalCompletion9=true;var _didIteratorError9=false;var _iteratorError9=undefined;try{for(var _iterator9=Object.keys(value)[Symbol.iterator](),_step9;!(_iteratorNormalCompletion9=(_step9=_iterator9.next()).done);_iteratorNormalCompletion9=true){var key=_step9.value;isEqual=isEqual&&this._classification[key]!==undefined;isEqual=isEqual&&value[key].equals(this._classification[key]);}}catch(err){_didIteratorError9=true;_iteratorError9=err;}finally{try{if(!_iteratorNormalCompletion9&&_iterator9.return){_iterator9.return();}}finally{if(_didIteratorError9){throw _iteratorError9;}}}if(!isEqual){recomputeClassification();}}},{key:"spacing",get:function get(){return this.uniforms.spacing.value;},set:function set(value){if(this.uniforms.spacing.value!==value){this.uniforms.spacing.value=value;}}},{key:"useClipBox",get:function get(){return this._useClipBox;},set:function set(value){if(this._useClipBox!==value){this._useClipBox=value;this.updateShaderSource();}}},{key:"weighted",get:function get(){return this._weighted;},set:function set(value){if(this._weighted!==value){this._weighted=value;this.updateShaderSource();}}},{key:"fov",get:function get(){return this.uniforms.fov.value;},set:function set(value){if(this.uniforms.fov.value!==value){this.uniforms.fov.value=value;//this.updateShaderSource();
}}},{key:"screenWidth",get:function get(){return this.uniforms.screenWidth.value;},set:function set(value){if(this.uniforms.screenWidth.value!==value){this.uniforms.screenWidth.value=value;//this.updateShaderSource();
}}},{key:"screenHeight",get:function get(){return this.uniforms.screenHeight.value;},set:function set(value){if(this.uniforms.screenHeight.value!==value){this.uniforms.screenHeight.value=value;//this.updateShaderSource();
}}},{key:"near",get:function get(){return this.uniforms.near.value;},set:function set(value){if(this.uniforms.near.value!==value){this.uniforms.near.value=value;}}},{key:"far",get:function get(){return this.uniforms.far.value;},set:function set(value){if(this.uniforms.far.value!==value){this.uniforms.far.value=value;}}},{key:"opacity",get:function get(){return this.uniforms.opacity.value;},set:function set(value){if(this.uniforms&&this.uniforms.opacity){if(this.uniforms.opacity.value!==value){this.uniforms.opacity.value=value;this.updateShaderSource();this.dispatchEvent({type:"opacity_changed",target:this});this.dispatchEvent({type:"material_property_changed",target:this});}}}},{key:"pointColorType",get:function get(){return this._pointColorType;},set:function set(value){if(this._pointColorType!==value){this._pointColorType=value;this.updateShaderSource();this.dispatchEvent({type:"point_color_type_changed",target:this});this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"depthMap",get:function get(){return this._depthMap;},set:function set(value){if(this._depthMap!==value){this._depthMap=value;this.updateShaderSource();}}},{key:"pointSizeType",get:function get(){return this._pointSizeType;},set:function set(value){if(this._pointSizeType!==value){this._pointSizeType=value;this.updateShaderSource();this.dispatchEvent({type:"point_size_type_changed",target:this});this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"clipMode",get:function get(){return this._clipMode;},set:function set(value){if(this._clipMode!==value){this._clipMode=value;this.updateShaderSource();}}},{key:"useEDL",get:function get(){return this._useEDL;},set:function set(value){if(this._useEDL!==value){this._useEDL=value;this.updateShaderSource();}}},{key:"color",get:function get(){return this.uniforms.uColor.value;},set:function set(value){if(!this.uniforms.uColor.value.equals(value)){this.uniforms.uColor.value.copy(value);this.dispatchEvent({type:"color_changed",target:this});this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"shape",get:function get(){return this._shape;},set:function set(value){if(this._shape!==value){this._shape=value;this.updateShaderSource();this.dispatchEvent({type:"point_shape_changed",target:this});this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"treeType",get:function get(){return this._treeType;},set:function set(value){if(this._treeType!==value){this._treeType=value;this.updateShaderSource();}}},{key:"bbSize",get:function get(){return this.uniforms.bbSize.value;},set:function set(value){this.uniforms.bbSize.value=value;}},{key:"size",get:function get(){return this.uniforms.size.value;},set:function set(value){if(this.uniforms.size.value!==value){this.uniforms.size.value=value;this.dispatchEvent({type:"point_size_changed",target:this});this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"elevationRange",get:function get(){return[this.heightMin,this.heightMax];},set:function set(value){this.heightMin=value[0];this.heightMax=value[1];}},{key:"heightMin",get:function get(){return this.uniforms.heightMin.value;},set:function set(value){if(this.uniforms.heightMin.value!==value){this.uniforms.heightMin.value=value;this._defaultElevationRangeChanged=true;this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"heightMax",get:function get(){return this.uniforms.heightMax.value;},set:function set(value){if(this.uniforms.heightMax.value!==value){this.uniforms.heightMax.value=value;this._defaultElevationRangeChanged=true;this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"transition",get:function get(){return this.uniforms.transition.value;},set:function set(value){this.uniforms.transition.value=value;}},{key:"intensityRange",get:function get(){return this.uniforms.intensityRange.value;},set:function set(value){if(!(value instanceof Array&&value.length===2)){return;}if(value[0]===this.uniforms.intensityRange.value[0]&&value[1]===this.uniforms.intensityRange.value[1]){return;}this.uniforms.intensityRange.value=value;this._defaultIntensityRangeChanged=true;this.dispatchEvent({type:"material_property_changed",target:this});}},{key:"intensityGamma",get:function get(){return this.uniforms.intensityGamma.value;},set:function set(value){if(this.uniforms.intensityGamma.value!==value){this.uniforms.intensityGamma.value=value;this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"intensityContrast",get:function get(){return this.uniforms.intensityContrast.value;},set:function set(value){if(this.uniforms.intensityContrast.value!==value){this.uniforms.intensityContrast.value=value;this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"intensityBrightness",get:function get(){return this.uniforms.intensityBrightness.value;},set:function set(value){if(this.uniforms.intensityBrightness.value!==value){this.uniforms.intensityBrightness.value=value;this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"rgbGamma",get:function get(){return this.uniforms.rgbGamma.value;},set:function set(value){if(this.uniforms.rgbGamma.value!==value){this.uniforms.rgbGamma.value=value;this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"rgbContrast",get:function get(){return this.uniforms.rgbContrast.value;},set:function set(value){if(this.uniforms.rgbContrast.value!==value){this.uniforms.rgbContrast.value=value;this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"rgbBrightness",get:function get(){return this.uniforms.rgbBrightness.value;},set:function set(value){if(this.uniforms.rgbBrightness.value!==value){this.uniforms.rgbBrightness.value=value;this.dispatchEvent({type:"material_property_changed",target:this});}}},{key:"weightRGB",get:function get(){return this.uniforms.wRGB.value;},set:function set(value){this.uniforms.wRGB.value=value;}},{key:"weightIntensity",get:function get(){return this.uniforms.wIntensity.value;},set:function set(value){this.uniforms.wIntensity.value=value;}},{key:"weightElevation",get:function get(){return this.uniforms.wElevation.value;},set:function set(value){this.uniforms.wElevation.value=value;}},{key:"weightClassification",get:function get(){return this.uniforms.wClassification.value;},set:function set(value){this.uniforms.wClassification.value=value;}},{key:"weightReturnNumber",get:function get(){return this.uniforms.wReturnNumber.value;},set:function set(value){this.uniforms.wReturnNumber.value=value;}},{key:"weightSourceID",get:function get(){return this.uniforms.wSourceID.value;},set:function set(value){this.uniforms.wSourceID.value=value;}}],[{key:"generateGradientTexture",value:function generateGradientTexture(gradient){var size=64;// create canvas
var canvas=document.createElement('canvas');canvas.width=size;canvas.height=size;// get context
var context=canvas.getContext('2d');// draw gradient
context.rect(0,0,size,size);var ctxGradient=context.createLinearGradient(0,0,size,size);for(var _i17=0;_i17<gradient.length;_i17++){var step=gradient[_i17];ctxGradient.addColorStop(step[0],"#"+step[1].getHexString());}context.fillStyle=ctxGradient;context.fill();var texture=new THREE.Texture(canvas);texture.needsUpdate=true;//textureImage = texture.image;
return texture;}},{key:"generateClassificationTexture",value:function generateClassificationTexture(classification){var width=256;var height=256;var size=width*height;var data=new Uint8Array(4*size);for(var x=0;x<width;x++){for(var y=0;y<height;y++){var _i18=x+width*y;var color=void 0;if(classification[x]){color=classification[x];}else if(classification[x%32]){color=classification[x%32];}else{color=classification.DEFAULT;}data[4*_i18+0]=255*color.x;data[4*_i18+1]=255*color.y;data[4*_i18+2]=255*color.z;data[4*_i18+3]=255*color.w;}}var texture=new THREE.DataTexture(data,width,height,THREE.RGBAFormat);texture.magFilter=THREE.NearestFilter;texture.needsUpdate=true;return texture;}}]);return PointCloudMaterial;}(THREE.RawShaderMaterial);//
// Algorithm by Christian Boucheny
// shader code taken and adapted from CloudCompare
//
// see
// https://github.com/cloudcompare/trunk/tree/master/plugins/qEDL/shaders/EDL
// http://www.kitware.com/source/home/post/9
// https://tel.archives-ouvertes.fr/tel-00438464/document p. 115+ (french)
Potree.EyeDomeLightingMaterial=function(parameters){THREE.Material.call(this);parameters=parameters||{};this._neighbourCount=4;this.neighbours=new Float32Array(this.neighbourCount*2);for(var c=0;c<this.neighbourCount;c++){this.neighbours[2*c+0]=Math.cos(2*c*Math.PI/this.neighbourCount);this.neighbours[2*c+1]=Math.sin(2*c*Math.PI/this.neighbourCount);}//var lightDir = new THREE.Vector3(0.0, 0.0, 1.0).normalize();
var uniforms={screenWidth:{type:"f",value:0},screenHeight:{type:"f",value:0},edlStrength:{type:"f",value:1.0},radius:{type:"f",value:1.0},neighbours:{type:"2fv",value:this.neighbours},depthMap:{type:"t",value:null},colorMap:{type:"t",value:null},opacity:{type:"f",value:1.0}};this.setValues({uniforms:uniforms,vertexShader:this.getDefines()+Potree.Shaders["edl.vs"],fragmentShader:this.getDefines()+Potree.Shaders["edl.fs"],lights:false});};Potree.EyeDomeLightingMaterial.prototype=new THREE.ShaderMaterial();Potree.EyeDomeLightingMaterial.prototype.getDefines=function(){var defines="";defines+="#define NEIGHBOUR_COUNT "+this.neighbourCount+"\n";return defines;};Potree.EyeDomeLightingMaterial.prototype.updateShaderSource=function(){var attributes={};var PC=Potree.PointColorType;if([PC.INTENSITY,PC.INTENSITY_GRADIENT].includes(this.pointColorType)){attributes.intensity={type:"f",value:[]};}else if(this.pointColorType===PC.CLASSIFICATION){//attributes.classification = { type: "f", value: [] };
}else if(this.pointColorType===PC.RETURN_NUMBER){attributes.returnNumber={type:"f",value:[]};attributes.numberOfReturns={type:"f",value:[]};}else if(this.pointColorType===PC.SOURCE){attributes.pointSourceID={type:"f",value:[]};}else if(this.pointColorType===PC.NORMAL||this.pointColorType===Potree.PointColorType.PHONG){attributes.normal={type:"f",value:[]};}attributes.classification={type:"f",value:0};var vs=this.getDefines()+Potree.Shaders["edl.vs"];var fs=this.getDefines()+Potree.Shaders["edl.fs"];this.setValues({vertexShader:vs,fragmentShader:fs});this.uniforms.neighbours.value=this.neighbours;this.needsUpdate=true;};Object.defineProperty(Potree.EyeDomeLightingMaterial.prototype,"neighbourCount",{get:function get(){return this._neighbourCount;},set:function set(value){if(this._neighbourCount!==value){this._neighbourCount=value;this.neighbours=new Float32Array(this._neighbourCount*2);for(var c=0;c<this._neighbourCount;c++){this.neighbours[2*c+0]=Math.cos(2*c*Math.PI/this._neighbourCount);this.neighbours[2*c+1]=Math.sin(2*c*Math.PI/this._neighbourCount);}this.updateShaderSource();}}});// see http://john-chapman-graphics.blogspot.co.at/2013/01/ssao-tutorial.html
Potree.BlurMaterial=function(parameters){THREE.Material.call(this);parameters=parameters||{};var uniforms={near:{type:"f",value:0},far:{type:"f",value:0},screenWidth:{type:"f",value:0},screenHeight:{type:"f",value:0},map:{type:"t",value:null}};this.setValues({uniforms:uniforms,vertexShader:Potree.Shaders["blur.vs"],fragmentShader:Potree.Shaders["blur.fs"]});};Potree.BlurMaterial.prototype=new THREE.ShaderMaterial();/**
 * @author mschuetz / http://mschuetz.at
 *
 *
 */Potree.InputHandler=function(_THREE$EventDispatche){_inherits(InputHandler,_THREE$EventDispatche);function InputHandler(viewer){_classCallCheck(this,InputHandler);var _this6=_possibleConstructorReturn(this,(InputHandler.__proto__||Object.getPrototypeOf(InputHandler)).call(this));_this6.viewer=viewer;_this6.renderer=viewer.renderer;_this6.domElement=_this6.renderer.domElement;_this6.scene=null;_this6.interactiveScenes=[];_this6.inputListeners=[];_this6.drag=null;_this6.mouse=new THREE.Vector2(0,0);_this6.selection=[];_this6.hoveredElements=[];_this6.pressedKeys={};_this6.wheelDelta=0;_this6.speed=1;_this6.logMessages=false;if(_this6.domElement.tabIndex===-1){_this6.domElement.tabIndex=2222;}_this6.domElement.addEventListener("contextmenu",function(event){event.preventDefault();},false);_this6.domElement.addEventListener("click",_this6.onMouseClick.bind(_this6),false);_this6.domElement.addEventListener("mousedown",_this6.onMouseDown.bind(_this6),false);_this6.domElement.addEventListener("mouseup",_this6.onMouseUp.bind(_this6),false);_this6.domElement.addEventListener("mousemove",_this6.onMouseMove.bind(_this6),false);_this6.domElement.addEventListener("mousewheel",_this6.onMouseWheel.bind(_this6),false);_this6.domElement.addEventListener("DOMMouseScroll",_this6.onMouseWheel.bind(_this6),false);// Firefox
_this6.domElement.addEventListener("dblclick",_this6.onDoubleClick.bind(_this6));_this6.domElement.addEventListener("keydown",_this6.onKeyDown.bind(_this6));_this6.domElement.addEventListener("keyup",_this6.onKeyUp.bind(_this6));_this6.domElement.addEventListener("touchstart",_this6.onTouchStart.bind(_this6));_this6.domElement.addEventListener("touchend",_this6.onTouchEnd.bind(_this6));_this6.domElement.addEventListener("touchmove",_this6.onTouchMove.bind(_this6));return _this6;}_createClass(InputHandler,[{key:"addInputListener",value:function addInputListener(listener){this.inputListeners.push(listener);}},{key:"removeInputListener",value:function removeInputListener(listener){this.inputListeners=this.inputListeners.filter(function(e){return e!==listener;});}},{key:"onTouchStart",value:function onTouchStart(e){if(this.logMessages)console.log(this.constructor.name+": onTouchStart");e.preventDefault();if(e.touches.length===1){var rect=this.domElement.getBoundingClientRect();var x=e.touches[0].pageX-rect.left;var y=e.touches[0].pageY-rect.top;this.mouse.set(x,y);this.startDragging(null);}var _iteratorNormalCompletion10=true;var _didIteratorError10=false;var _iteratorError10=undefined;try{for(var _iterator10=this.inputListeners[Symbol.iterator](),_step10;!(_iteratorNormalCompletion10=(_step10=_iterator10.next()).done);_iteratorNormalCompletion10=true){var inputListener=_step10.value;inputListener.dispatchEvent({type:e.type,touches:e.touches,changedTouches:e.changedTouches});}}catch(err){_didIteratorError10=true;_iteratorError10=err;}finally{try{if(!_iteratorNormalCompletion10&&_iterator10.return){_iterator10.return();}}finally{if(_didIteratorError10){throw _iteratorError10;}}}}},{key:"onTouchEnd",value:function onTouchEnd(e){if(this.logMessages)console.log(this.constructor.name+": onTouchEnd");e.preventDefault();var _iteratorNormalCompletion11=true;var _didIteratorError11=false;var _iteratorError11=undefined;try{for(var _iterator11=this.inputListeners[Symbol.iterator](),_step11;!(_iteratorNormalCompletion11=(_step11=_iterator11.next()).done);_iteratorNormalCompletion11=true){var inputListener=_step11.value;inputListener.dispatchEvent({type:"drop",drag:this.drag,viewer:this.viewer});}}catch(err){_didIteratorError11=true;_iteratorError11=err;}finally{try{if(!_iteratorNormalCompletion11&&_iterator11.return){_iterator11.return();}}finally{if(_didIteratorError11){throw _iteratorError11;}}}this.drag=null;var _iteratorNormalCompletion12=true;var _didIteratorError12=false;var _iteratorError12=undefined;try{for(var _iterator12=this.inputListeners[Symbol.iterator](),_step12;!(_iteratorNormalCompletion12=(_step12=_iterator12.next()).done);_iteratorNormalCompletion12=true){var _inputListener=_step12.value;_inputListener.dispatchEvent({type:e.type,touches:e.touches,changedTouches:e.changedTouches});}}catch(err){_didIteratorError12=true;_iteratorError12=err;}finally{try{if(!_iteratorNormalCompletion12&&_iterator12.return){_iterator12.return();}}finally{if(_didIteratorError12){throw _iteratorError12;}}}}},{key:"onTouchMove",value:function onTouchMove(e){if(this.logMessages)console.log(this.constructor.name+": onTouchMove");e.preventDefault();if(e.touches.length===1){var rect=this.domElement.getBoundingClientRect();var x=e.touches[0].pageX-rect.left;var y=e.touches[0].pageY-rect.top;this.mouse.set(x,y);if(this.drag){this.drag.mouse=1;this.drag.lastDrag.x=x-this.drag.end.x;this.drag.lastDrag.y=y-this.drag.end.y;this.drag.end.set(x,y);if(this.logMessages)console.log(this.constructor.name+": drag: ");var _iteratorNormalCompletion13=true;var _didIteratorError13=false;var _iteratorError13=undefined;try{for(var _iterator13=this.inputListeners[Symbol.iterator](),_step13;!(_iteratorNormalCompletion13=(_step13=_iterator13.next()).done);_iteratorNormalCompletion13=true){var inputListener=_step13.value;inputListener.dispatchEvent({type:"drag",drag:this.drag,viewer:this.viewer});}}catch(err){_didIteratorError13=true;_iteratorError13=err;}finally{try{if(!_iteratorNormalCompletion13&&_iterator13.return){_iterator13.return();}}finally{if(_didIteratorError13){throw _iteratorError13;}}}}}var _iteratorNormalCompletion14=true;var _didIteratorError14=false;var _iteratorError14=undefined;try{for(var _iterator14=this.inputListeners[Symbol.iterator](),_step14;!(_iteratorNormalCompletion14=(_step14=_iterator14.next()).done);_iteratorNormalCompletion14=true){var _inputListener2=_step14.value;_inputListener2.dispatchEvent({type:e.type,touches:e.touches,changedTouches:e.changedTouches});}// DEBUG CODE
//let debugTouches = [...e.touches, {
//	pageX: this.domElement.clientWidth / 2, 
//	pageY: this.domElement.clientHeight / 2}];
//for(let inputListener of this.inputListeners){
//	inputListener.dispatchEvent({
//		type: e.type,
//		touches: debugTouches,
//		changedTouches: e.changedTouches
//	});
//}
}catch(err){_didIteratorError14=true;_iteratorError14=err;}finally{try{if(!_iteratorNormalCompletion14&&_iterator14.return){_iterator14.return();}}finally{if(_didIteratorError14){throw _iteratorError14;}}}}},{key:"onKeyDown",value:function onKeyDown(e){if(this.logMessages)console.log(this.constructor.name+": onKeyDown");if(e.keyCode===46&&this.selection.length>0){// DELETE
this.dispatchEvent({type:"delete",selection:this.selection});this.deselectAll();}this.dispatchEvent({type:"keydown",keyCode:e.keyCode,event:e});//for(let l of this.inputListeners){
//	l.dispatchEvent({
//		type: "keydown",
//		keyCode: e.keyCode,
//		event: e
//	});
//}
this.pressedKeys[e.keyCode]=true;//e.preventDefault();
}},{key:"onKeyUp",value:function onKeyUp(e){if(this.logMessages)console.log(this.constructor.name+": onKeyUp");delete this.pressedKeys[e.keyCode];e.preventDefault();}},{key:"onDoubleClick",value:function onDoubleClick(e){if(this.logMessages)console.log(this.constructor.name+": onDoubleClick");var consumed=false;var _iteratorNormalCompletion15=true;var _didIteratorError15=false;var _iteratorError15=undefined;try{for(var _iterator15=this.hoveredElements[Symbol.iterator](),_step15;!(_iteratorNormalCompletion15=(_step15=_iterator15.next()).done);_iteratorNormalCompletion15=true){var hovered=_step15.value;if(hovered._listeners&&hovered._listeners["dblclick"]){hovered.object.dispatchEvent({type:"dblclick",mouse:this.mouse,object:hovered.object});consumed=true;break;}}}catch(err){_didIteratorError15=true;_iteratorError15=err;}finally{try{if(!_iteratorNormalCompletion15&&_iterator15.return){_iterator15.return();}}finally{if(_didIteratorError15){throw _iteratorError15;}}}if(!consumed){var _iteratorNormalCompletion16=true;var _didIteratorError16=false;var _iteratorError16=undefined;try{for(var _iterator16=this.inputListeners[Symbol.iterator](),_step16;!(_iteratorNormalCompletion16=(_step16=_iterator16.next()).done);_iteratorNormalCompletion16=true){var inputListener=_step16.value;inputListener.dispatchEvent({type:"dblclick",mouse:this.mouse,object:null});}}catch(err){_didIteratorError16=true;_iteratorError16=err;}finally{try{if(!_iteratorNormalCompletion16&&_iterator16.return){_iterator16.return();}}finally{if(_didIteratorError16){throw _iteratorError16;}}}}e.preventDefault();}},{key:"onMouseClick",value:function onMouseClick(e){if(this.logMessages)console.log(this.constructor.name+": onMouseClick");e.preventDefault();}},{key:"onMouseDown",value:function onMouseDown(e){if(this.logMessages)console.log(this.constructor.name+": onMouseDown");e.preventDefault();if(this.hoveredElements.length===0){var _iteratorNormalCompletion17=true;var _didIteratorError17=false;var _iteratorError17=undefined;try{for(var _iterator17=this.inputListeners[Symbol.iterator](),_step17;!(_iteratorNormalCompletion17=(_step17=_iterator17.next()).done);_iteratorNormalCompletion17=true){var inputListener=_step17.value;inputListener.dispatchEvent({type:"mousedown",viewer:this.viewer,mouse:this.mouse});}}catch(err){_didIteratorError17=true;_iteratorError17=err;}finally{try{if(!_iteratorNormalCompletion17&&_iterator17.return){_iterator17.return();}}finally{if(_didIteratorError17){throw _iteratorError17;}}}}if(!this.drag){var target=this.hoveredElements.find(function(el){return el.object._listeners&&el.object._listeners["drag"]&&el.object._listeners["drag"].length>0;});if(target){this.startDragging(target.object,{location:target.point});}else{this.startDragging(null);}}if(this.scene){this.viewStart=this.scene.view.clone();}}},{key:"onMouseUp",value:function onMouseUp(e){var _this7=this;if(this.logMessages)console.log(this.constructor.name+": onMouseUp");e.preventDefault();var noMovement=this.getNormalizedDrag().length()===0;if(e.button===THREE.MOUSE.LEFT){if(noMovement){var selectable=this.hoveredElements.find(function(el){return el.object._listeners&&el.object._listeners["select"];});if(selectable){selectable=selectable.object;if(this.isSelected(selectable)){this.selection.filter(function(e){return e!==selectable;}).forEach(function(e){return _this7.toggleSelection(e);});}else{this.deselectAll();this.toggleSelection(selectable);}}else{this.deselectAll();}}}else if(e.button===THREE.MOUSE.RIGHT&&noMovement){this.deselectAll();}if(this.hoveredElements.length===0){var _iteratorNormalCompletion18=true;var _didIteratorError18=false;var _iteratorError18=undefined;try{for(var _iterator18=this.inputListeners[Symbol.iterator](),_step18;!(_iteratorNormalCompletion18=(_step18=_iterator18.next()).done);_iteratorNormalCompletion18=true){var inputListener=_step18.value;inputListener.dispatchEvent({type:"mouseup",viewer:this.viewer,mouse:this.mouse});}}catch(err){_didIteratorError18=true;_iteratorError18=err;}finally{try{if(!_iteratorNormalCompletion18&&_iterator18.return){_iterator18.return();}}finally{if(_didIteratorError18){throw _iteratorError18;}}}}if(this.drag){if(this.drag.object){this.drag.object.dispatchEvent({type:"drop",drag:this.drag,viewer:this.viewer});}else{if(this.logMessages)console.log(this.constructor.name+": drop: ");var _iteratorNormalCompletion19=true;var _didIteratorError19=false;var _iteratorError19=undefined;try{for(var _iterator19=this.inputListeners[Symbol.iterator](),_step19;!(_iteratorNormalCompletion19=(_step19=_iterator19.next()).done);_iteratorNormalCompletion19=true){var _inputListener3=_step19.value;_inputListener3.dispatchEvent({type:"drop",drag:this.drag,viewer:this.viewer});}}catch(err){_didIteratorError19=true;_iteratorError19=err;}finally{try{if(!_iteratorNormalCompletion19&&_iterator19.return){_iterator19.return();}}finally{if(_didIteratorError19){throw _iteratorError19;}}}}this.drag=null;}}},{key:"onMouseMove",value:function onMouseMove(e){if(this.logMessages)console.log(this.constructor.name+": onMouseMove");e.preventDefault();var rect=this.domElement.getBoundingClientRect();var x=e.clientX-rect.left;var y=e.clientY-rect.top;this.mouse.set(x,y);if(this.drag){this.drag.mouse=e.buttons;this.drag.lastDrag.x=x-this.drag.end.x;this.drag.lastDrag.y=y-this.drag.end.y;this.drag.end.set(x,y);if(this.drag.object){if(this.logMessages)console.log(this.constructor.name+": drag: "+this.drag.object.name);this.drag.object.dispatchEvent({type:"drag",drag:this.drag,viewer:this.viewer});}else{if(this.logMessages)console.log(this.constructor.name+": drag: ");var _iteratorNormalCompletion20=true;var _didIteratorError20=false;var _iteratorError20=undefined;try{for(var _iterator20=this.inputListeners[Symbol.iterator](),_step20;!(_iteratorNormalCompletion20=(_step20=_iterator20.next()).done);_iteratorNormalCompletion20=true){var inputListener=_step20.value;inputListener.dispatchEvent({type:"drag",drag:this.drag,viewer:this.viewer});}}catch(err){_didIteratorError20=true;_iteratorError20=err;}finally{try{if(!_iteratorNormalCompletion20&&_iterator20.return){_iterator20.return();}}finally{if(_didIteratorError20){throw _iteratorError20;}}}}}var hoveredElements=this.getHoveredElements();var currentlyHoveredObjects=hoveredElements.map(function(e){return e.object;});var previouslyHoveredObjects=this.hoveredElements.map(function(e){return e.object;});var now=currentlyHoveredObjects.find(function(e){return e._listeners&&e._listeners["mouseover"];});var prev=previouslyHoveredObjects.find(function(e){return e._listeners&&e._listeners["mouseover"];});if(now!==prev){if(now){now.dispatchEvent({type:"mouseover",object:now});}if(prev){prev.dispatchEvent({type:"mouseleave",object:prev});}}//let justHovered = currentlyHoveredObjects
//	.filter(e => previouslyHoveredObjects.indexOf(e) === -1);
//let justUnhovered = previouslyHoveredObjects
//	.filter(e => currentlyHoveredObjects.indexOf(e) === -1);
//	
//justHovered = justHovered.find(e => (e._listeners && e._listeners["mouseover"]));
//justUnhovered = justUnhovered.find(e => (e._listeners && e._listeners["mouseover"]));
//let over = justHovered.find(e => (e._listeners && e._listeners["mouseover"]));
//if(over){
//	over.dispatchEvent({
//		type: "mouseover",
//		object: over
//	});
//}
//
//let leave = justUnhovered.find(e => (e._listeners && e._listeners["mouseleave"]));
//if(leave){
//	leave.dispatchEvent({
//		type: "mouseleave",
//		object: leave
//	});
//}
this.hoveredElements=hoveredElements;}},{key:"onMouseWheel",value:function onMouseWheel(e){if(this.logMessages)console.log(this.constructor.name+": onMouseWheel");e.preventDefault();var delta=0;if(e.wheelDelta!==undefined){// WebKit / Opera / Explorer 9
delta=e.wheelDelta;}else if(e.detail!==undefined){// Firefox
delta=-e.detail;}var ndelta=Math.sign(delta);//this.wheelDelta += Math.sign(delta);
if(this.hoveredElement){this.hoveredElement.object.dispatchEvent({type:"mousewheel",delta:ndelta,object:this.hoveredElement.object});}else{var _iteratorNormalCompletion21=true;var _didIteratorError21=false;var _iteratorError21=undefined;try{for(var _iterator21=this.inputListeners[Symbol.iterator](),_step21;!(_iteratorNormalCompletion21=(_step21=_iterator21.next()).done);_iteratorNormalCompletion21=true){var inputListener=_step21.value;inputListener.dispatchEvent({type:"mousewheel",delta:ndelta,object:null});}}catch(err){_didIteratorError21=true;_iteratorError21=err;}finally{try{if(!_iteratorNormalCompletion21&&_iterator21.return){_iterator21.return();}}finally{if(_didIteratorError21){throw _iteratorError21;}}}}}},{key:"startDragging",value:function startDragging(object){var args=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;this.drag={start:this.mouse.clone(),end:this.mouse.clone(),lastDrag:new THREE.Vector2(0,0),startView:this.scene.view.clone(),object:object};if(args){var _iteratorNormalCompletion22=true;var _didIteratorError22=false;var _iteratorError22=undefined;try{for(var _iterator22=Object.keys(args)[Symbol.iterator](),_step22;!(_iteratorNormalCompletion22=(_step22=_iterator22.next()).done);_iteratorNormalCompletion22=true){var key=_step22.value;this.drag[key]=args[key];}}catch(err){_didIteratorError22=true;_iteratorError22=err;}finally{try{if(!_iteratorNormalCompletion22&&_iterator22.return){_iterator22.return();}}finally{if(_didIteratorError22){throw _iteratorError22;}}}}}},{key:"getMousePointCloudIntersection",value:function getMousePointCloudIntersection(mouse){return Potree.utils.getMousePointCloudIntersection(this.mouse,this.scene.camera,this.renderer,this.scene.pointclouds);}},{key:"toggleSelection",value:function toggleSelection(object){var oldSelection=this.selection;var index=this.selection.indexOf(object);if(index===-1){this.selection.push(object);object.dispatchEvent({type:"select"});}else{this.selection.splice(index,1);object.dispatchEvent({type:"deselect"});}this.dispatchEvent({type:"selection_changed",oldSelection:oldSelection,selection:this.selection});}},{key:"deselectAll",value:function deselectAll(){var _iteratorNormalCompletion23=true;var _didIteratorError23=false;var _iteratorError23=undefined;try{for(var _iterator23=this.selection[Symbol.iterator](),_step23;!(_iteratorNormalCompletion23=(_step23=_iterator23.next()).done);_iteratorNormalCompletion23=true){var object=_step23.value;object.dispatchEvent({type:"deselect"});}}catch(err){_didIteratorError23=true;_iteratorError23=err;}finally{try{if(!_iteratorNormalCompletion23&&_iterator23.return){_iterator23.return();}}finally{if(_didIteratorError23){throw _iteratorError23;}}}var oldSelection=this.selection;if(this.selection.length>0){this.selection=[];this.dispatchEvent({type:"selection_changed",oldSelection:oldSelection,selection:this.selection});}}},{key:"isSelected",value:function isSelected(object){var index=this.selection.indexOf(object);return index!==-1;}},{key:"registerInteractiveScene",value:function registerInteractiveScene(scene){var index=this.interactiveScenes.indexOf(scene);if(index===-1){this.interactiveScenes.push(scene);}}},{key:"unregisterInteractiveScene",value:function unregisterInteractiveScene(scene){var index=this.interactiveScenes.indexOf(scene);if(index>-1){this.interactiveScenes.splice(index,1);}}},{key:"getHoveredElement",value:function getHoveredElement(){var hoveredElements=this.getHoveredElements();if(hoveredElements.length>0){return hoveredElements[0];}else{return null;}}},{key:"getHoveredElements",value:function getHoveredElements(){var scenes=this.interactiveScenes.concat(this.scene.scene);var interactableListeners=["mouseover","mouseleave","drag","drop","click","select","deselect"];var interactables=[];var _iteratorNormalCompletion24=true;var _didIteratorError24=false;var _iteratorError24=undefined;try{for(var _iterator24=scenes[Symbol.iterator](),_step24;!(_iteratorNormalCompletion24=(_step24=_iterator24.next()).done);_iteratorNormalCompletion24=true){var scene=_step24.value;scene.traverseVisible(function(node){if(node._listeners&&node.visible){var hasInteractableListener=interactableListeners.filter(function(e){return node._listeners[e]!==undefined;}).length>0;if(hasInteractableListener){interactables.push(node);}}});}}catch(err){_didIteratorError24=true;_iteratorError24=err;}finally{try{if(!_iteratorNormalCompletion24&&_iterator24.return){_iterator24.return();}}finally{if(_didIteratorError24){throw _iteratorError24;}}}var nmouse={x:this.mouse.x/this.domElement.clientWidth*2-1,y:-(this.mouse.y/this.domElement.clientHeight)*2+1};var vector=new THREE.Vector3(nmouse.x,nmouse.y,0.5);vector.unproject(this.scene.camera);var raycaster=new THREE.Raycaster();raycaster.ray.set(this.scene.camera.position,vector.sub(this.scene.camera.position).normalize());raycaster.linePrecision=0.2;var intersections=raycaster.intersectObjects(interactables,false);return intersections;//if(intersections.length > 0){
//	return intersections[0];
//}else{
//	return null;
//}
}},{key:"setScene",value:function setScene(scene){this.deselectAll();this.scene=scene;}},{key:"update",value:function update(delta){}},{key:"getNormalizedDrag",value:function getNormalizedDrag(){if(!this.drag){return new THREE.Vector2(0,0);}var diff=new THREE.Vector2().subVectors(this.drag.end,this.drag.start);diff.x=diff.x/this.domElement.clientWidth;diff.y=diff.y/this.domElement.clientHeight;return diff;}},{key:"getNormalizedLastDrag",value:function getNormalizedLastDrag(){if(!this.drag){return new THREE.Vector2(0,0);}var lastDrag=this.drag.lastDrag.clone();lastDrag.x=lastDrag.x/this.domElement.clientWidth;lastDrag.y=lastDrag.y/this.domElement.clientHeight;return lastDrag;}}]);return InputHandler;}(THREE.EventDispatcher);/**
 * @author mschuetz / http://mschuetz.at
 *
 * adapted from THREE.OrbitControls by 
 *
 * @author qiao / https://github.com/qiao
 * @author mrdoob / http://mrdoob.com
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author erich666 / http://erichaines.com
 *
 *
 *
 */Potree.FirstPersonControls=function(_THREE$EventDispatche2){_inherits(FirstPersonControls,_THREE$EventDispatche2);function FirstPersonControls(viewer){_classCallCheck(this,FirstPersonControls);var _this8=_possibleConstructorReturn(this,(FirstPersonControls.__proto__||Object.getPrototypeOf(FirstPersonControls)).call(this));_this8.viewer=viewer;_this8.renderer=viewer.renderer;_this8.scene=null;_this8.sceneControls=new THREE.Scene();_this8.rotationSpeed=200;_this8.moveSpeed=10;_this8.keys={FORWARD:['W'.charCodeAt(0),38],BACKWARD:['S'.charCodeAt(0),40],LEFT:['A'.charCodeAt(0),37],RIGHT:['D'.charCodeAt(0),39],UP:['R'.charCodeAt(0),33],DOWN:['F'.charCodeAt(0),34]};_this8.fadeFactor=50;_this8.yawDelta=0;_this8.pitchDelta=0;_this8.translationDelta=new THREE.Vector3(0,0,0);_this8.translationWorldDelta=new THREE.Vector3(0,0,0);_this8.tweens=[];var drag=function drag(e){if(e.drag.object!==null){return;}if(e.drag.startHandled===undefined){e.drag.startHandled=true;_this8.dispatchEvent({type:"start"});}var moveSpeed=_this8.viewer.getMoveSpeed();var ndrag={x:e.drag.lastDrag.x/_this8.renderer.domElement.clientWidth,y:e.drag.lastDrag.y/_this8.renderer.domElement.clientHeight};if(e.drag.mouse===Potree.MOUSE.LEFT){_this8.yawDelta+=ndrag.x*_this8.rotationSpeed;_this8.pitchDelta+=ndrag.y*_this8.rotationSpeed;}else if(e.drag.mouse===Potree.MOUSE.RIGHT){_this8.translationDelta.x-=ndrag.x*moveSpeed*100;_this8.translationDelta.z+=ndrag.y*moveSpeed*100;}};var drop=function drop(e){_this8.dispatchEvent({type:"end"});};var scroll=function scroll(e){var speed=_this8.viewer.getMoveSpeed();if(e.delta<0){speed=speed*0.9;}else if(e.delta>0){speed=speed/0.9;}speed=Math.max(speed,0.1);_this8.viewer.setMoveSpeed(speed);};var dblclick=function dblclick(e){_this8.zoomToLocation(e.mouse);};_this8.addEventListener("drag",drag);_this8.addEventListener("drop",drop);_this8.addEventListener("mousewheel",scroll);_this8.addEventListener("dblclick",dblclick);return _this8;}_createClass(FirstPersonControls,[{key:"setScene",value:function setScene(scene){this.scene=scene;}},{key:"zoomToLocation",value:function zoomToLocation(mouse){var _this9=this;var camera=this.scene.camera;var I=Potree.utils.getMousePointCloudIntersection(mouse,camera,this.renderer,this.scene.pointclouds);if(I===null){return;}var nmouse={x:+(mouse.x/this.renderer.domElement.clientWidth)*2-1,y:-(mouse.y/this.renderer.domElement.clientHeight)*2+1};var targetRadius=0;{var minimumJumpDistance=0.2;var vector=new THREE.Vector3(nmouse.x,nmouse.y,0.5);vector.unproject(camera);var direction=vector.sub(camera.position).normalize();var ray=new THREE.Ray(camera.position,direction);var nodes=I.pointcloud.nodesOnRay(I.pointcloud.visibleNodes,ray);var lastNode=nodes[nodes.length-1];var radius=lastNode.getBoundingSphere().radius;targetRadius=Math.min(this.scene.view.radius,radius);targetRadius=Math.max(minimumJumpDistance,targetRadius);}var d=this.scene.view.direction.multiplyScalar(-1);var cameraTargetPosition=new THREE.Vector3().addVectors(I.location,d.multiplyScalar(targetRadius));var controlsTargetPosition=I.location;var animationDuration=600;var easing=TWEEN.Easing.Quartic.Out;{// animate 
var value={x:0};var tween=new TWEEN.Tween(value).to({x:1},animationDuration);tween.easing(easing);this.tweens.push(tween);var startPos=this.scene.view.position.clone();var targetPos=cameraTargetPosition.clone();var startRadius=this.scene.view.radius;var _targetRadius=cameraTargetPosition.distanceTo(I.location);tween.onUpdate(function(){var t=value.x;_this9.scene.view.position.x=(1-t)*startPos.x+t*targetPos.x;_this9.scene.view.position.y=(1-t)*startPos.y+t*targetPos.y;_this9.scene.view.position.z=(1-t)*startPos.z+t*targetPos.z;_this9.scene.view.radius=(1-t)*startRadius+t*_targetRadius;_this9.viewer.setMoveSpeed(_this9.scene.view.radius/2.5);});tween.onComplete(function(){_this9.tweens=_this9.tweens.filter(function(e){return e!==tween;});});tween.start();}}},{key:"update",value:function update(delta){var view=this.scene.view;{// cancel move animations on user input
var changes=[this.yawDelta,this.pitchDelta,this.translationDelta.length(),this.translationWorldDelta.length()];var changeHappens=changes.some(function(e){return Math.abs(e)>0.001;});if(changeHappens&&this.tweens.length>0){this.tweens.forEach(function(e){return e.stop();});this.tweens=[];}}{// accelerate while input is given
var ih=this.viewer.inputHandler;var moveForward=this.keys.FORWARD.some(function(e){return ih.pressedKeys[e];});var moveBackward=this.keys.BACKWARD.some(function(e){return ih.pressedKeys[e];});var moveLeft=this.keys.LEFT.some(function(e){return ih.pressedKeys[e];});var moveRight=this.keys.RIGHT.some(function(e){return ih.pressedKeys[e];});var moveUp=this.keys.UP.some(function(e){return ih.pressedKeys[e];});var moveDown=this.keys.DOWN.some(function(e){return ih.pressedKeys[e];});if(moveForward&&moveBackward){this.translationDelta.y=0;}else if(moveForward){this.translationDelta.y=this.viewer.getMoveSpeed();}else if(moveBackward){this.translationDelta.y=-this.viewer.getMoveSpeed();}if(moveLeft&&moveRight){this.translationDelta.x=0;}else if(moveLeft){this.translationDelta.x=-this.viewer.getMoveSpeed();}else if(moveRight){this.translationDelta.x=this.viewer.getMoveSpeed();}if(moveUp&&moveDown){this.translationWorldDelta.z=0;}else if(moveUp){this.translationWorldDelta.z=this.viewer.getMoveSpeed();}else if(moveDown){this.translationWorldDelta.z=-this.viewer.getMoveSpeed();}}{// apply rotation
var yaw=view.yaw;var pitch=view.pitch;yaw-=this.yawDelta*delta;pitch-=this.pitchDelta*delta;view.yaw=yaw;view.pitch=pitch;}{// apply translation
view.translate(this.translationDelta.x*delta,this.translationDelta.y*delta,this.translationDelta.z*delta);view.translateWorld(this.translationWorldDelta.x*delta,this.translationWorldDelta.y*delta,this.translationWorldDelta.z*delta);}{// set view target according to speed
view.radius=3*this.viewer.getMoveSpeed();}{// decelerate over time
var attenuation=Math.max(0,1-this.fadeFactor*delta);this.yawDelta*=attenuation;this.pitchDelta*=attenuation;this.translationDelta.multiplyScalar(attenuation);this.translationWorldDelta.multiplyScalar(attenuation);}}}]);return FirstPersonControls;}(THREE.EventDispatcher);/**
 * @author mschuetz / http://mschuetz.at
 *
 * adapted from THREE.OrbitControls by 
 *
 * @author qiao / https://github.com/qiao
 * @author mrdoob / http://mrdoob.com
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author erich666 / http://erichaines.com
 *
 * This set of controls performs first person navigation without mouse lock.
 * Instead, rotating the camera is done by dragging with the left mouse button.
 *
 * move: a/s/d/w or up/down/left/right
 * rotate: left mouse
 * pan: right mouse
 * change speed: mouse wheel
 *
 *
 */Potree.GeoControls=function(object,domElement){this.object=object;this.domElement=domElement!==undefined?domElement:document;// Set to false to disable this control
this.enabled=true;// Set this to a THREE.SplineCurve3 instance
this.track=null;// position on track in intervall [0,1]
this.trackPos=0;this.rotateSpeed=1.0;this.moveSpeed=10.0;this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40,A:'A'.charCodeAt(0),S:'S'.charCodeAt(0),D:'D'.charCodeAt(0),W:'W'.charCodeAt(0),Q:'Q'.charCodeAt(0),E:'E'.charCodeAt(0),R:'R'.charCodeAt(0),F:'F'.charCodeAt(0)};var scope=this;var rotateStart=new THREE.Vector2();var rotateEnd=new THREE.Vector2();var rotateDelta=new THREE.Vector2();var panStart=new THREE.Vector2();var panEnd=new THREE.Vector2();var panDelta=new THREE.Vector2();var panOffset=new THREE.Vector3();var offset=new THREE.Vector3();var phiDelta=0;var thetaDelta=0;var scale=1;var pan=new THREE.Vector3();this.shiftDown=false;var lastPosition=new THREE.Vector3();var STATE={NONE:-1,ROTATE:0,SPEEDCHANGE:1,PAN:2};var state=STATE.NONE;// for reset
this.position0=this.object.position.clone();// events
var changeEvent={type:'change'};var startEvent={type:'start'};var endEvent={type:'end'};this.setTrack=function(track){if(this.track!==track){this.track=track;this.trackPos=null;}};this.setTrackPos=function(trackPos,_preserveRelativeRotation){var preserveRelativeRotation=_preserveRelativeRotation||false;var newTrackPos=Math.max(0,Math.min(1,trackPos));var oldTrackPos=this.trackPos||newTrackPos;var newTangent=this.track.getTangentAt(newTrackPos);var oldTangent=this.track.getTangentAt(oldTrackPos);if(newTangent.equals(oldTangent)){// no change in direction
}else{var tangentDiffNormal=new THREE.Vector3().crossVectors(oldTangent,newTangent).normalize();var angle=oldTangent.angleTo(newTangent);var rot=new THREE.Matrix4().makeRotationAxis(tangentDiffNormal,angle);var dir=this.object.getWorldDirection().clone();dir=dir.applyMatrix4(rot);var target=new THREE.Vector3().addVectors(this.object.position,dir);this.object.lookAt(target);this.object.updateMatrixWorld();var event={type:'path_relative_rotation',angle:angle,axis:tangentDiffNormal,controls:scope};this.dispatchEvent(event);}if(this.trackPos===null){var target=new THREE.Vector3().addVectors(this.object.position,newTangent);this.object.lookAt(target);}this.trackPos=newTrackPos;//var pStart = this.track.getPointAt(oldTrackPos);
//var pEnd = this.track.getPointAt(newTrackPos);
//var pDiff = pEnd.sub(pStart);
if(newTrackPos!==oldTrackPos){var event={type:'move',translation:pan.clone()};this.dispatchEvent(event);}};this.getTrackPos=function(){return this.trackPos;};this.rotateLeft=function(angle){thetaDelta-=angle;};this.rotateUp=function(angle){phiDelta-=angle;};// pass in distance in world space to move left
this.panLeft=function(distance){var te=this.object.matrix.elements;// get X column of matrix
panOffset.set(te[0],te[1],te[2]);panOffset.multiplyScalar(-distance);pan.add(panOffset);};// pass in distance in world space to move up
this.panUp=function(distance){var te=this.object.matrix.elements;// get Y column of matrix
panOffset.set(te[4],te[5],te[6]);panOffset.multiplyScalar(distance);pan.add(panOffset);};// pass in distance in world space to move forward
this.panForward=function(distance){if(this.track){this.setTrackPos(this.getTrackPos()-distance/this.track.getLength());}else{var te=this.object.matrix.elements;// get Y column of matrix
panOffset.set(te[8],te[9],te[10]);//panOffset.set( te[ 8 ], 0, te[ 10 ] );
panOffset.multiplyScalar(distance);pan.add(panOffset);}};this.pan=function(deltaX,deltaY){var element=scope.domElement===document?scope.domElement.body:scope.domElement;if(scope.object.fov!==undefined){// perspective
var position=scope.object.position;var offset=position.clone();var targetDistance=offset.length();// half of the fov is center to top of screen
targetDistance*=Math.tan(scope.object.fov/2*Math.PI/180.0);// we actually don't use screenWidth, since perspective camera is fixed to screen height
scope.panLeft(2*deltaX*targetDistance/element.clientHeight);scope.panUp(2*deltaY*targetDistance/element.clientHeight);}else if(scope.object.top!==undefined){// orthographic
scope.panLeft(deltaX*(scope.object.right-scope.object.left)/element.clientWidth);scope.panUp(deltaY*(scope.object.top-scope.object.bottom)/element.clientHeight);}else{// camera neither orthographic or perspective
console.warn('WARNING: GeoControls.js encountered an unknown camera type - pan disabled.');}};this.update=function(delta){this.object.rotation.order='ZYX';var object=this.object;this.object=new THREE.Object3D();this.object.position.copy(object.position);this.object.rotation.copy(object.rotation);this.object.updateMatrix();this.object.updateMatrixWorld();var position=this.object.position;if(delta!==undefined){var multiplier=scope.shiftDown?4:1;if(this.moveRight){this.panLeft(-delta*this.moveSpeed*multiplier);}if(this.moveLeft){this.panLeft(delta*this.moveSpeed*multiplier);}if(this.moveForward||this.moveForwardMouse){this.panForward(-delta*this.moveSpeed*multiplier);}if(this.moveBackward){this.panForward(delta*this.moveSpeed*multiplier);}if(this.rotLeft){scope.rotateLeft(-0.5*Math.PI*delta/scope.rotateSpeed);}if(this.rotRight){scope.rotateLeft(0.5*Math.PI*delta/scope.rotateSpeed);}if(this.raiseCamera){//scope.rotateUp( -0.5 * Math.PI * delta / scope.rotateSpeed );
scope.panUp(delta*this.moveSpeed*multiplier);}if(this.lowerCamera){//scope.rotateUp( 0.5 * Math.PI * delta / scope.rotateSpeed );
scope.panUp(-delta*this.moveSpeed*multiplier);}}if(!pan.equals(new THREE.Vector3(0,0,0))){var event={type:'move',translation:pan.clone()};this.dispatchEvent(event);}position.add(pan);if(!(thetaDelta===0.0&&phiDelta===0.0)){var event={type:'rotate',thetaDelta:thetaDelta,phiDelta:phiDelta};this.dispatchEvent(event);}this.object.updateMatrix();var rot=new THREE.Matrix4().makeRotationY(thetaDelta);var res=new THREE.Matrix4().multiplyMatrices(rot,this.object.matrix);this.object.quaternion.setFromRotationMatrix(res);this.object.rotation.x+=phiDelta;this.object.updateMatrixWorld();// send transformation proposal to listeners
var proposeTransformEvent={type:"proposeTransform",oldPosition:object.position,newPosition:this.object.position,objections:0,counterProposals:[]};this.dispatchEvent(proposeTransformEvent);// check some counter proposals if transformation wasn't accepted
if(proposeTransformEvent.objections>0){if(proposeTransformEvent.counterProposals.length>0){var cp=proposeTransformEvent.counterProposals;this.object.position.copy(cp[0]);proposeTransformEvent.objections=0;proposeTransformEvent.counterProposals=[];}}// apply transformation, if accepted
if(proposeTransformEvent.objections>0){}else{object.position.copy(this.object.position);}object.rotation.copy(this.object.rotation);this.object=object;thetaDelta=0;phiDelta=0;scale=1;pan.set(0,0,0);if(lastPosition.distanceTo(this.object.position)>0){this.dispatchEvent(changeEvent);lastPosition.copy(this.object.position);}if(this.track){var pos=this.track.getPointAt(this.trackPos);object.position.copy(pos);}};this.reset=function(){state=STATE.NONE;this.object.position.copy(this.position0);};function onMouseDown(event){if(scope.enabled===false)return;event.preventDefault();if(event.button===0){state=STATE.ROTATE;rotateStart.set(event.clientX,event.clientY);}else if(event.button===1){state=STATE.PAN;panStart.set(event.clientX,event.clientY);}else if(event.button===2){//state = STATE.PAN;
//
//panStart.set( event.clientX, event.clientY );
scope.moveForwardMouse=true;}//scope.domElement.addEventListener( 'mousemove', onMouseMove, false );
//scope.domElement.addEventListener( 'mouseup', onMouseUp, false );
scope.dispatchEvent(startEvent);}function onMouseMove(event){if(scope.enabled===false)return;event.preventDefault();var element=scope.domElement===document?scope.domElement.body:scope.domElement;if(state===STATE.ROTATE){rotateEnd.set(event.clientX,event.clientY);rotateDelta.subVectors(rotateEnd,rotateStart);// rotating across whole screen goes 360 degrees around
scope.rotateLeft(2*Math.PI*rotateDelta.x/element.clientWidth*scope.rotateSpeed);// rotating up and down along whole screen attempts to go 360, but limited to 180
scope.rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight*scope.rotateSpeed);rotateStart.copy(rotateEnd);}else if(state===STATE.PAN){panEnd.set(event.clientX,event.clientY);panDelta.subVectors(panEnd,panStart);//panDelta.multiplyScalar(this.moveSpeed).multiplyScalar(0.0001);
panDelta.multiplyScalar(0.002).multiplyScalar(scope.moveSpeed);scope.pan(panDelta.x,panDelta.y);panStart.copy(panEnd);}}function onMouseUp(event){if(scope.enabled===false)return;//console.log(event.which);
if(event.button===2){scope.moveForwardMouse=false;}else{//scope.domElement.removeEventListener( 'mousemove', onMouseMove, false );
//scope.domElement.removeEventListener( 'mouseup', onMouseUp, false );
scope.dispatchEvent(endEvent);state=STATE.NONE;}}function onMouseWheel(event){if(scope.enabled===false||scope.noZoom===true)return;event.preventDefault();var direction=event.detail<0||event.wheelDelta>0?1:-1;var moveSpeed=scope.moveSpeed+scope.moveSpeed*0.1*direction;moveSpeed=Math.max(0.1,moveSpeed);scope.setMoveSpeed(moveSpeed);scope.dispatchEvent(startEvent);scope.dispatchEvent(endEvent);}this.setMoveSpeed=function(value){if(scope.moveSpeed!==value){scope.moveSpeed=value;scope.dispatchEvent({type:"move_speed_changed",controls:scope});}};function onKeyDown(event){if(scope.enabled===false)return;scope.shiftDown=event.shiftKey;switch(event.keyCode){case scope.keys.UP:scope.moveForward=true;break;case scope.keys.BOTTOM:scope.moveBackward=true;break;case scope.keys.LEFT:scope.moveLeft=true;break;case scope.keys.RIGHT:scope.moveRight=true;break;case scope.keys.W:scope.moveForward=true;break;case scope.keys.S:scope.moveBackward=true;break;case scope.keys.A:scope.moveLeft=true;break;case scope.keys.D:scope.moveRight=true;break;case scope.keys.Q:scope.rotLeft=true;break;case scope.keys.E:scope.rotRight=true;break;case scope.keys.R:scope.raiseCamera=true;break;case scope.keys.F:scope.lowerCamera=true;break;}}function onKeyUp(event){scope.shiftDown=event.shiftKey;switch(event.keyCode){case scope.keys.W:scope.moveForward=false;break;case scope.keys.S:scope.moveBackward=false;break;case scope.keys.A:scope.moveLeft=false;break;case scope.keys.D:scope.moveRight=false;break;case scope.keys.UP:scope.moveForward=false;break;case scope.keys.BOTTOM:scope.moveBackward=false;break;case scope.keys.LEFT:scope.moveLeft=false;break;case scope.keys.RIGHT:scope.moveRight=false;break;case scope.keys.Q:scope.rotLeft=false;break;case scope.keys.E:scope.rotRight=false;break;case scope.keys.R:scope.raiseCamera=false;break;case scope.keys.F:scope.lowerCamera=false;break;}}this.domElement.addEventListener('contextmenu',function(event){event.preventDefault();},false);this.domElement.addEventListener('mousedown',onMouseDown,false);this.domElement.addEventListener('mousewheel',onMouseWheel,false);this.domElement.addEventListener('DOMMouseScroll',onMouseWheel,false);// firefox
scope.domElement.addEventListener('mousemove',onMouseMove,false);scope.domElement.addEventListener('mouseup',onMouseUp,false);if(this.domElement.tabIndex===-1){this.domElement.tabIndex=2222;}scope.domElement.addEventListener('keydown',onKeyDown,false);scope.domElement.addEventListener('keyup',onKeyUp,false);};Potree.GeoControls.prototype=Object.create(THREE.EventDispatcher.prototype);/**
 * @author mschuetz / http://mschuetz.at
 *
 * adapted from THREE.OrbitControls by 
 *
 * @author qiao / https://github.com/qiao
 * @author mrdoob / http://mrdoob.com
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author erich666 / http://erichaines.com
 *
 *
 *
 */Potree.OrbitControls=function(_THREE$EventDispatche3){_inherits(OrbitControls,_THREE$EventDispatche3);function OrbitControls(viewer){_classCallCheck(this,OrbitControls);var _this10=_possibleConstructorReturn(this,(OrbitControls.__proto__||Object.getPrototypeOf(OrbitControls)).call(this));_this10.viewer=viewer;_this10.renderer=viewer.renderer;_this10.scene=null;_this10.sceneControls=new THREE.Scene();_this10.rotationSpeed=5;_this10.fadeFactor=10;_this10.yawDelta=0;_this10.pitchDelta=0;_this10.panDelta=new THREE.Vector2(0,0);_this10.radiusDelta=0;_this10.tweens=[];var drag=function drag(e){if(e.drag.object!==null){return;}if(e.drag.startHandled===undefined){e.drag.startHandled=true;_this10.dispatchEvent({type:"start"});}var ndrag={x:e.drag.lastDrag.x/_this10.renderer.domElement.clientWidth,y:e.drag.lastDrag.y/_this10.renderer.domElement.clientHeight};if(e.drag.mouse===Potree.MOUSE.LEFT){_this10.yawDelta+=ndrag.x*_this10.rotationSpeed;_this10.pitchDelta+=ndrag.y*_this10.rotationSpeed;_this10.stopTweens();}else if(e.drag.mouse===Potree.MOUSE.RIGHT){_this10.panDelta.x+=ndrag.x;_this10.panDelta.y+=ndrag.y;_this10.stopTweens();}};var drop=function drop(e){_this10.dispatchEvent({type:"end"});};var scroll=function scroll(e){var resolvedRadius=_this10.scene.view.radius+_this10.radiusDelta;_this10.radiusDelta+=-e.delta*resolvedRadius*0.1;_this10.stopTweens();};var dblclick=function dblclick(e){_this10.zoomToLocation(e.mouse);};var previousTouch=null;var touchStart=function touchStart(e){previousTouch=e;};var touchEnd=function touchEnd(e){previousTouch=e;};var touchMove=function touchMove(e){if(e.touches.length===2&&previousTouch.touches.length===2){var prev=previousTouch;var curr=e;var prevDX=prev.touches[0].pageX-prev.touches[1].pageX;var prevDY=prev.touches[0].pageY-prev.touches[1].pageY;var prevDist=Math.sqrt(prevDX*prevDX+prevDY*prevDY);var currDX=curr.touches[0].pageX-curr.touches[1].pageX;var currDY=curr.touches[0].pageY-curr.touches[1].pageY;var currDist=Math.sqrt(currDX*currDX+currDY*currDY);var delta=currDist/prevDist;var resolvedRadius=_this10.scene.view.radius+_this10.radiusDelta;var newRadius=resolvedRadius/delta;_this10.radiusDelta=newRadius-resolvedRadius;_this10.stopTweens();}previousTouch=e;};_this10.addEventListener("touchstart",touchStart);_this10.addEventListener("touchend",touchEnd);_this10.addEventListener("touchmove",touchMove);_this10.addEventListener("drag",drag);_this10.addEventListener("drop",drop);_this10.addEventListener("mousewheel",scroll);_this10.addEventListener("dblclick",dblclick);return _this10;}_createClass(OrbitControls,[{key:"setScene",value:function setScene(scene){this.scene=scene;}},{key:"zoomToLocation",value:function zoomToLocation(mouse){var _this11=this;var camera=this.scene.camera;var I=Potree.utils.getMousePointCloudIntersection(mouse,camera,this.renderer,this.scene.pointclouds);if(I===null){return;}var nmouse={x:+(mouse.x/this.renderer.domElement.clientWidth)*2-1,y:-(mouse.y/this.renderer.domElement.clientHeight)*2+1};var targetRadius=0;{var minimumJumpDistance=0.2;var vector=new THREE.Vector3(nmouse.x,nmouse.y,0.5);vector.unproject(camera);var direction=vector.sub(camera.position).normalize();var ray=new THREE.Ray(camera.position,direction);var nodes=I.pointcloud.nodesOnRay(I.pointcloud.visibleNodes,ray);var lastNode=nodes[nodes.length-1];var radius=lastNode.getBoundingSphere().radius;targetRadius=Math.min(this.scene.view.radius,radius);targetRadius=Math.max(minimumJumpDistance,targetRadius);}var d=this.scene.view.direction.multiplyScalar(-1);var cameraTargetPosition=new THREE.Vector3().addVectors(I.location,d.multiplyScalar(targetRadius));var controlsTargetPosition=I.location;var animationDuration=600;var easing=TWEEN.Easing.Quartic.Out;{// animate 
var value={x:0};var tween=new TWEEN.Tween(value).to({x:1},animationDuration);tween.easing(easing);this.tweens.push(tween);var startPos=this.scene.view.position.clone();var targetPos=cameraTargetPosition.clone();var startRadius=this.scene.view.radius;var _targetRadius2=cameraTargetPosition.distanceTo(I.location);tween.onUpdate(function(){var t=value.x;_this11.scene.view.position.x=(1-t)*startPos.x+t*targetPos.x;_this11.scene.view.position.y=(1-t)*startPos.y+t*targetPos.y;_this11.scene.view.position.z=(1-t)*startPos.z+t*targetPos.z;_this11.scene.view.radius=(1-t)*startRadius+t*_targetRadius2;_this11.viewer.setMoveSpeed(_this11.scene.view.radius/2.5);});tween.onComplete(function(){_this11.tweens=_this11.tweens.filter(function(e){return e!==tween;});});tween.start();}}},{key:"stopTweens",value:function stopTweens(){this.tweens.forEach(function(e){return e.stop();});this.tweens=[];}},{key:"update",value:function update(delta){var view=this.scene.view;{// apply rotation
var progression=Math.min(1,this.fadeFactor*delta);var yaw=view.yaw;var pitch=view.pitch;var pivot=view.getPivot();yaw-=progression*this.yawDelta;pitch-=progression*this.pitchDelta;view.yaw=yaw;view.pitch=pitch;var V=this.scene.view.direction.multiplyScalar(-view.radius);var position=new THREE.Vector3().addVectors(pivot,V);view.position.copy(position);}{// apply pan
var _progression=Math.min(1,this.fadeFactor*delta);var panDistance=_progression*view.radius*3;var px=-this.panDelta.x*panDistance;var py=this.panDelta.y*panDistance;view.pan(px,py);}{// apply zoom
var _progression2=Math.min(1,this.fadeFactor*delta);//let radius = view.radius + progression * this.radiusDelta * view.radius * 0.1;
var radius=view.radius+_progression2*this.radiusDelta;var _V=view.direction.multiplyScalar(-radius);var _position=new THREE.Vector3().addVectors(view.getPivot(),_V);view.radius=radius;view.position.copy(_position);}{var speed=view.radius/2.5;this.viewer.setMoveSpeed(speed);}{// decelerate over time
var _progression3=Math.min(1,this.fadeFactor*delta);var attenuation=Math.max(0,1-this.fadeFactor*delta);this.yawDelta*=attenuation;this.pitchDelta*=attenuation;this.panDelta.multiplyScalar(attenuation);//this.radiusDelta *= attenuation;
this.radiusDelta-=_progression3*this.radiusDelta;}}}]);return OrbitControls;}(THREE.EventDispatcher);Potree.EarthControls=function(_THREE$EventDispatche4){_inherits(EarthControls,_THREE$EventDispatche4);function EarthControls(viewer){_classCallCheck(this,EarthControls);var _this12=_possibleConstructorReturn(this,(EarthControls.__proto__||Object.getPrototypeOf(EarthControls)).call(this,viewer));_this12.viewer=viewer;_this12.renderer=viewer.renderer;_this12.scene=null;_this12.sceneControls=new THREE.Scene();_this12.rotationSpeed=10;_this12.fadeFactor=20;_this12.wheelDelta=0;_this12.zoomDelta=new THREE.Vector3();_this12.camStart=null;_this12.tweens=[];_this12.pivotIndicator;{var sg=new THREE.SphereGeometry(1,16,16);var sm=new THREE.MeshNormalMaterial();_this12.pivotIndicator=new THREE.Mesh(sg,sm);_this12.pivotIndicator.visible=false;_this12.sceneControls.add(_this12.pivotIndicator);}var drag=function drag(e){if(e.drag.object!==null){return;}if(!_this12.pivot){return;}if(e.drag.startHandled===undefined){e.drag.startHandled=true;_this12.dispatchEvent({type:"start"});}var camStart=_this12.camStart;var view=_this12.viewer.scene.view;//let camera = this.viewer.scene.camera;
var mouse=e.drag.end;var domElement=_this12.viewer.renderer.domElement;if(e.drag.mouse===Potree.MOUSE.LEFT){var nmouse={x:mouse.x/domElement.clientWidth*2-1,y:-(mouse.y/domElement.clientHeight)*2+1};var vector=new THREE.Vector3(nmouse.x,nmouse.y,0.5);vector.unproject(camStart);var dir=vector.sub(camStart.position).normalize();var ray=new THREE.Ray(camStart.position,dir);var plane=new THREE.Plane().setFromNormalAndCoplanarPoint(new THREE.Vector3(0,0,1),_this12.pivot);var distanceToPlane=ray.distanceToPlane(plane);if(distanceToPlane>0){var I=new THREE.Vector3().addVectors(camStart.position,dir.clone().multiplyScalar(distanceToPlane));var movedBy=new THREE.Vector3().subVectors(I,_this12.pivot);var newCamPos=camStart.position.clone().sub(movedBy);view.position.copy(newCamPos);{var distance=newCamPos.distanceTo(_this12.pivot);view.radius=distance;var speed=view.radius/2.5;_this12.viewer.setMoveSpeed(speed);}}}else if(e.drag.mouse===Potree.MOUSE.RIGHT){var ndrag={x:e.drag.lastDrag.x/_this12.renderer.domElement.clientWidth,y:e.drag.lastDrag.y/_this12.renderer.domElement.clientHeight};var yawDelta=-ndrag.x*_this12.rotationSpeed*0.5;var pitchDelta=-ndrag.y*_this12.rotationSpeed*0.2;var originalPitch=view.pitch;var tmpView=view.clone();tmpView.pitch=tmpView.pitch+pitchDelta;pitchDelta=tmpView.pitch-originalPitch;var pivotToCam=new THREE.Vector3().subVectors(view.position,_this12.pivot);var pivotToCamTarget=new THREE.Vector3().subVectors(view.getPivot(),_this12.pivot);var side=view.getSide();pivotToCam.applyAxisAngle(side,pitchDelta);pivotToCamTarget.applyAxisAngle(side,pitchDelta);pivotToCam.applyAxisAngle(new THREE.Vector3(0,0,1),yawDelta);pivotToCamTarget.applyAxisAngle(new THREE.Vector3(0,0,1),yawDelta);var newCam=new THREE.Vector3().addVectors(_this12.pivot,pivotToCam);var newCamTarget=new THREE.Vector3().addVectors(_this12.pivot,pivotToCamTarget);view.position.copy(newCam);view.yaw+=yawDelta;view.pitch+=pitchDelta;}};var onMouseDown=function onMouseDown(e){var I=Potree.utils.getMousePointCloudIntersection(e.mouse,_this12.scene.camera,_this12.renderer,_this12.scene.pointclouds);if(I){_this12.pivot=I.location;_this12.camStart=_this12.scene.camera.clone();_this12.pivotIndicator.visible=true;_this12.pivotIndicator.position.copy(I.location);}};var drop=function drop(e){_this12.dispatchEvent({type:"end"});};var onMouseUp=function onMouseUp(e){_this12.camStart=null;_this12.pivot=null;_this12.pivotIndicator.visible=false;};var scroll=function scroll(e){_this12.wheelDelta+=e.delta;};var dblclick=function dblclick(e){_this12.zoomToLocation(e.mouse);};_this12.addEventListener("drag",drag);_this12.addEventListener("drop",drop);_this12.addEventListener("mousewheel",scroll);_this12.addEventListener("mousedown",onMouseDown);_this12.addEventListener("mouseup",onMouseUp);_this12.addEventListener("dblclick",dblclick);return _this12;}_createClass(EarthControls,[{key:"setScene",value:function setScene(scene){this.scene=scene;}},{key:"zoomToLocation",value:function zoomToLocation(mouse){var _this13=this;var camera=this.scene.camera;var I=Potree.utils.getMousePointCloudIntersection(mouse,camera,this.renderer,this.scene.pointclouds);if(I===null){return;}var nmouse={x:+(mouse.x/this.renderer.domElement.clientWidth)*2-1,y:-(mouse.y/this.renderer.domElement.clientHeight)*2+1};var targetRadius=0;{var minimumJumpDistance=0.2;var vector=new THREE.Vector3(nmouse.x,nmouse.y,0.5);vector.unproject(camera);var direction=vector.sub(camera.position).normalize();var ray=new THREE.Ray(camera.position,direction);var nodes=I.pointcloud.nodesOnRay(I.pointcloud.visibleNodes,ray);var lastNode=nodes[nodes.length-1];var radius=lastNode.getBoundingSphere().radius;targetRadius=Math.min(this.scene.view.radius,radius);targetRadius=Math.max(minimumJumpDistance,targetRadius);}var d=this.scene.view.direction.multiplyScalar(-1);var cameraTargetPosition=new THREE.Vector3().addVectors(I.location,d.multiplyScalar(targetRadius));var controlsTargetPosition=I.location;var animationDuration=600;var easing=TWEEN.Easing.Quartic.Out;{// animate 
var value={x:0};var tween=new TWEEN.Tween(value).to({x:1},animationDuration);tween.easing(easing);this.tweens.push(tween);var startPos=this.scene.view.position.clone();var targetPos=cameraTargetPosition.clone();var startRadius=this.scene.view.radius;var _targetRadius3=cameraTargetPosition.distanceTo(I.location);tween.onUpdate(function(){var t=value.x;_this13.scene.view.position.x=(1-t)*startPos.x+t*targetPos.x;_this13.scene.view.position.y=(1-t)*startPos.y+t*targetPos.y;_this13.scene.view.position.z=(1-t)*startPos.z+t*targetPos.z;_this13.scene.view.radius=(1-t)*startRadius+t*_targetRadius3;_this13.viewer.setMoveSpeed(_this13.scene.view.radius/2.5);});tween.onComplete(function(){_this13.tweens=_this13.tweens.filter(function(e){return e!==tween;});});tween.start();}}},{key:"update",value:function update(delta){var view=this.scene.view;var fade=Math.pow(0.5,this.fadeFactor*delta);var progression=1-fade;var camera=this.scene.camera;// compute zoom
if(this.wheelDelta!==0){var I=Potree.utils.getMousePointCloudIntersection(this.viewer.inputHandler.mouse,this.scene.camera,this.renderer,this.scene.pointclouds);if(I){var resolvedPos=new THREE.Vector3().addVectors(view.position,this.zoomDelta);var distance=I.location.distanceTo(resolvedPos);var jumpDistance=distance*0.2*this.wheelDelta;var targetDir=new THREE.Vector3().subVectors(I.location,view.position);targetDir.normalize();resolvedPos.add(targetDir.multiplyScalar(jumpDistance));this.zoomDelta.subVectors(resolvedPos,view.position);{var _distance=resolvedPos.distanceTo(I.location);view.radius=_distance;var speed=view.radius/2.5;this.viewer.setMoveSpeed(speed);}}}// apply zoom
if(this.zoomDelta.length()!==0){var p=this.zoomDelta.clone().multiplyScalar(progression);var newPos=new THREE.Vector3().addVectors(view.position,p);view.position.copy(newPos);}if(this.pivotIndicator.visible){var _distance2=this.pivotIndicator.position.distanceTo(view.position);var pixelHeight=this.renderer.domElement.clientHeight;var pr=Potree.utils.projectedRadius(1,camera.fov*Math.PI/180,_distance2,pixelHeight);var scale=10/pr;this.pivotIndicator.scale.set(scale,scale,scale);}// decelerate over time
{this.zoomDelta.multiplyScalar(fade);this.wheelDelta=0;}}}]);return EarthControls;}(THREE.EventDispatcher);/**
 * 
 * @param node
 * @class an item in the lru list. 
 */function LRUItem(node){this.previous=null;this.next=null;this.node=node;}/**
 * 
 * @class A doubly-linked-list of the least recently used elements.
 */function LRU(){// the least recently used item
this.first=null;// the most recently used item
this.last=null;// a list of all items in the lru list
this.items={};this.elements=0;this.numPoints=0;}/**
 * number of elements in the list
 * 
 * @returns {Number}
 */LRU.prototype.size=function(){return this.elements;};LRU.prototype.contains=function(node){return this.items[node.id]==null;};/**
 * makes node the most recently used item. if the list does not contain node, it will be added.
 * 
 * @param node
 */LRU.prototype.touch=function(node){if(!node.loaded){return;}var item;if(this.items[node.id]==null){// add to list
item=new LRUItem(node);item.previous=this.last;this.last=item;if(item.previous!==null){item.previous.next=item;}this.items[node.id]=item;this.elements++;if(this.first===null){this.first=item;}this.numPoints+=node.numPoints;}else{// update in list
item=this.items[node.id];if(item.previous===null){// handle touch on first element
if(item.next!==null){this.first=item.next;this.first.previous=null;item.previous=this.last;item.next=null;this.last=item;item.previous.next=item;}}else if(item.next===null){// handle touch on last element
}else{// handle touch on any other element
item.previous.next=item.next;item.next.previous=item.previous;item.previous=this.last;item.next=null;this.last=item;item.previous.next=item;}}};///**
// * removes the least recently used item from the list and returns it. 
// * if the list was empty, null will be returned.
// */
//LRU.prototype.remove = function remove(){
//	if(this.first === null){
//		return null;
//	}
//	var lru = this.first;
//
//	// if the lru list contains at least 2 items, the item after the least recently used elemnt will be the new lru item. 
//	if(lru.next !== null){
//		this.first = lru.next;
//		this.first.previous = null;
//	}else{
//		this.first = null;
//		this.last = null;
//	}
//	
//	delete this.items[lru.node.id];
//	this.elements--;
//	this.numPoints -= lru.node.numPoints;
//	
////	Logger.info("removed node: " + lru.node.id);
//	return lru.node;
//};
LRU.prototype.remove=function remove(node){var lruItem=this.items[node.id];if(lruItem){if(this.elements===1){this.first=null;this.last=null;}else{if(!lruItem.previous){this.first=lruItem.next;this.first.previous=null;}if(!lruItem.next){this.last=lruItem.previous;this.last.next=null;}if(lruItem.previous&&lruItem.next){lruItem.previous.next=lruItem.next;lruItem.next.previous=lruItem.previous;}}delete this.items[node.id];this.elements--;this.numPoints-=node.numPoints;}};LRU.prototype.getLRUItem=function(){if(this.first===null){return null;}var lru=this.first;return lru.node;};LRU.prototype.toString=function(){var string="{ ";var curr=this.first;while(curr!==null){string+=curr.node.id;if(curr.next!==null){string+=", ";}curr=curr.next;}string+="}";string+="("+this.size()+")";return string;};LRU.prototype.freeMemory=function(){if(this.elements<=1){return;}while(this.numPoints>Potree.pointLoadLimit){var element=this.first;var node=element.node;this.disposeDescendants(node);}};LRU.prototype.disposeDescendants=function(node){var stack=[];stack.push(node);while(stack.length>0){var current=stack.pop();//console.log(current);
current.dispose();this.remove(current);for(var key in current.children){if(current.children.hasOwnProperty(key)){var child=current.children[key];if(child.loaded){stack.push(current.children[key]);}}}}};Potree.Annotation=function(_THREE$EventDispatche5){_inherits(_class2,_THREE$EventDispatche5);function _class2(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,_class2);var _this14=_possibleConstructorReturn(this,(_class2.__proto__||Object.getPrototypeOf(_class2)).call(this));_this14.scene=null;_this14.title=args.title||"No Title";_this14.description=args.description||"";if(!args.position){//this.position = new THREE.Vector3(0, 0, 0);
_this14.position=null;}else if(args.position instanceof THREE.Vector3){_this14.position=args.position;}else{_this14.position=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(args.position))))();}_this14.cameraPosition=args.cameraPosition instanceof Array?new THREE.Vector3().fromArray(args.cameraPosition):args.cameraPosition;_this14.cameraTarget=args.cameraTarget instanceof Array?new THREE.Vector3().fromArray(args.cameraTarget):args.cameraTarget;_this14.radius=args.radius;_this14.view=args.view||null;_this14.keepOpen=false;_this14.descriptionVisible=false;_this14.showDescription=true;_this14.actions=args.actions||[];_this14.isHighlighted=false;_this14._visible=true;_this14.__visible=true;_this14._display=true;_this14._expand=false;_this14.collapseThreshold=[args.collapseThreshold,100].find(function(e){return e!==undefined;});_this14.children=[];_this14.parent=null;_this14.boundingBox=new THREE.Box3();var iconClose=Potree.resourcePath+"/icons/close.svg";_this14.domElement=$("\n\t\t\t<div class=\"annotation\" oncontextmenu=\"return false;\">\n\t\t\t\t<div class=\"annotation-titlebar\">\n\t\t\t\t\t<span class=\"annotation-label\">"+_this14.title+"</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"annotation-description\">\n\t\t\t\t\t<span class=\"annotation-description-close\">\n\t\t\t\t\t\t<img src=\""+iconClose+"\" width=\"16px\">\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"annotation-description-content\">"+_this14.description+"</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t");_this14.elTitlebar=_this14.domElement.find(".annotation-titlebar");_this14.elTitle=_this14.elTitlebar.find(".annotation-label");_this14.elDescription=_this14.domElement.find(".annotation-description");_this14.elDescriptionClose=_this14.elDescription.find(".annotation-description-close");//this.elDescriptionContent = this.elDescription.find(".annotation-description-content");
_this14.clickTitle=function(){if(_this14.hasView()){_this14.moveHere(_this14.scene.camera);}_this14.dispatchEvent({type:"click",target:_this14});};_this14.elTitle.click(_this14.clickTitle);_this14.actions=_this14.actions.map(function(a){if(a instanceof Potree.Action){return a;}else{return new Potree.Action(a);}});var _iteratorNormalCompletion25=true;var _didIteratorError25=false;var _iteratorError25=undefined;try{for(var _iterator25=_this14.actions[Symbol.iterator](),_step25;!(_iteratorNormalCompletion25=(_step25=_iterator25.next()).done);_iteratorNormalCompletion25=true){var action=_step25.value;action.pairWith(_this14);}}catch(err){_didIteratorError25=true;_iteratorError25=err;}finally{try{if(!_iteratorNormalCompletion25&&_iterator25.return){_iterator25.return();}}finally{if(_didIteratorError25){throw _iteratorError25;}}}var actions=_this14.actions.filter(function(a){return a.showIn===undefined||a.showIn.includes("scene");});var _loop=function _loop(_action){_this14.elTitle.css("padding","1px 3px 0px 8px");var elButton=$("<img src=\""+_action.icon+"\" class=\"annotation-action-icon\">");_this14.elTitlebar.append(elButton);elButton.click(function(){return _action.onclick({annotation:_this14});});};var _iteratorNormalCompletion26=true;var _didIteratorError26=false;var _iteratorError26=undefined;try{for(var _iterator26=actions[Symbol.iterator](),_step26;!(_iteratorNormalCompletion26=(_step26=_iterator26.next()).done);_iteratorNormalCompletion26=true){var _action=_step26.value;_loop(_action);}}catch(err){_didIteratorError26=true;_iteratorError26=err;}finally{try{if(!_iteratorNormalCompletion26&&_iterator26.return){_iterator26.return();}}finally{if(_didIteratorError26){throw _iteratorError26;}}}_this14.elDescriptionClose.hover(function(e){return _this14.elDescriptionClose.css("opacity","1");},function(e){return _this14.elDescriptionClose.css("opacity","0.5");});_this14.elDescriptionClose.click(function(e){return _this14.setHighlighted(false);});//this.elDescriptionContent.html(this.description);
_this14.domElement.mouseenter(function(e){return _this14.setHighlighted(true);});_this14.domElement.mouseleave(function(e){return _this14.setHighlighted(false);});_this14.domElement.on("touchstart",function(e){_this14.setHighlighted(!_this14.isHighlighted);});_this14.display=false;return _this14;}_createClass(_class2,[{key:"add",value:function add(annotation){if(!this.children.includes(annotation)){this.children.push(annotation);annotation.parent=this;var descendants=[];annotation.traverse(function(a){descendants.push(a);});var _iteratorNormalCompletion27=true;var _didIteratorError27=false;var _iteratorError27=undefined;try{for(var _iterator27=descendants[Symbol.iterator](),_step27;!(_iteratorNormalCompletion27=(_step27=_iterator27.next()).done);_iteratorNormalCompletion27=true){var descendant=_step27.value;var c=this;while(c!==null){c.dispatchEvent({"type":"annotation_added","annotation":descendant});c=c.parent;}}}catch(err){_didIteratorError27=true;_iteratorError27=err;}finally{try{if(!_iteratorNormalCompletion27&&_iterator27.return){_iterator27.return();}}finally{if(_didIteratorError27){throw _iteratorError27;}}}}}},{key:"level",value:function level(){if(this.parent===null){return 0;}else{return this.parent.level()+1;}}},{key:"remove",value:function remove(annotation){this.children=this.children.filter(function(e){return e!==annotation;});annotation.parent=null;}},{key:"updateBounds",value:function updateBounds(){var box=new THREE.Box3();if(this.position){box.expandByPoint(this.position);}var _iteratorNormalCompletion28=true;var _didIteratorError28=false;var _iteratorError28=undefined;try{for(var _iterator28=this.children[Symbol.iterator](),_step28;!(_iteratorNormalCompletion28=(_step28=_iterator28.next()).done);_iteratorNormalCompletion28=true){var child=_step28.value;child.updateBounds();box.union(child.boundingBox);}}catch(err){_didIteratorError28=true;_iteratorError28=err;}finally{try{if(!_iteratorNormalCompletion28&&_iterator28.return){_iterator28.return();}}finally{if(_didIteratorError28){throw _iteratorError28;}}}this.boundingBox.copy(box);}},{key:"traverse",value:function traverse(callback){var expand=callback(this);if(expand===undefined||expand===true){var _iteratorNormalCompletion29=true;var _didIteratorError29=false;var _iteratorError29=undefined;try{for(var _iterator29=this.children[Symbol.iterator](),_step29;!(_iteratorNormalCompletion29=(_step29=_iterator29.next()).done);_iteratorNormalCompletion29=true){var child=_step29.value;child.traverse(callback);}}catch(err){_didIteratorError29=true;_iteratorError29=err;}finally{try{if(!_iteratorNormalCompletion29&&_iterator29.return){_iterator29.return();}}finally{if(_didIteratorError29){throw _iteratorError29;}}}}}},{key:"traverseDescendants",value:function traverseDescendants(callback){var _iteratorNormalCompletion30=true;var _didIteratorError30=false;var _iteratorError30=undefined;try{for(var _iterator30=this.children[Symbol.iterator](),_step30;!(_iteratorNormalCompletion30=(_step30=_iterator30.next()).done);_iteratorNormalCompletion30=true){var child=_step30.value;child.traverse(callback);}}catch(err){_didIteratorError30=true;_iteratorError30=err;}finally{try{if(!_iteratorNormalCompletion30&&_iterator30.return){_iterator30.return();}}finally{if(_didIteratorError30){throw _iteratorError30;}}}}},{key:"flatten",value:function flatten(){var annotations=[];this.traverse(function(annotation){annotations.push(annotation);});return annotations;}},{key:"descendants",value:function descendants(){var _this15=this;var annotations=[];this.traverse(function(annotation){if(annotation!==_this15){annotations.push(annotation);}});return annotations;}},{key:"setHighlighted",value:function setHighlighted(highlighted){if(highlighted){this.domElement.css("opacity","0.8");this.elTitlebar.css("box-shadow","0 0 5px #fff");this.domElement.css("z-index","1000");if(this.description){this.descriptionVisible=true;//this.elDescription.css("display", "block");
this.elDescription.fadeIn(200);this.elDescription.css("position","relative");}}else{this.domElement.css("opacity","0.5");this.elTitlebar.css("box-shadow","");this.domElement.css("z-index","100");this.descriptionVisible=false;this.elDescription.css("display","none");//this.elDescription.fadeOut(200);
}this.isHighlighted=highlighted;}},{key:"hasView",value:function hasView(){var hasPosTargetView=this.cameraTarget instanceof THREE.Vector3;hasPosTargetView=hasPosTargetView&&this.cameraPosition instanceof THREE.Vector3;var hasRadiusView=this.radius!==undefined;var hasView=hasPosTargetView||hasRadiusView;return hasView;}},{key:"moveHere",value:function moveHere(camera){var _this16=this;if(!this.hasView()){return;}var view=this.scene.view;var animationDuration=300;var easing=TWEEN.Easing.Quartic.Out;var endTarget=void 0;if(this.cameraTarget){endTarget=this.cameraTarget;}else if(this.position){endTarget=this.position;}else{endTarget=this.boundingBox.getCenter();}if(this.cameraPosition){var endPosition=this.cameraPosition;{// animate camera position
var _tween=new TWEEN.Tween(view.position).to(endPosition,animationDuration);_tween.easing(easing);_tween.start();}{// animate camera target
var camTargetDistance=camera.position.distanceTo(endTarget);var target=new THREE.Vector3().addVectors(camera.position,camera.getWorldDirection().clone().multiplyScalar(camTargetDistance));var tween=new TWEEN.Tween(target).to(endTarget,animationDuration);tween.easing(easing);tween.onUpdate(function(){view.lookAt(target);});tween.onComplete(function(){view.lookAt(target);_this16.dispatchEvent({type:"focusing_finished",target:_this16});});this.dispatchEvent({type:"focusing_started",target:this});tween.start();}}else if(this.radius){var direction=view.direction;var _endPosition=endTarget.clone().add(direction.multiplyScalar(-this.radius));var startRadius=view.radius;var endRadius=this.radius;{// animate camera position
var _tween2=new TWEEN.Tween(view.position).to(_endPosition,animationDuration);_tween2.easing(easing);_tween2.start();}{// animate radius
var t={x:0};var _tween3=new TWEEN.Tween(t).to({x:1},animationDuration).onUpdate(function(){view.radius=this.x*endRadius+(1-this.x)*startRadius;});_tween3.easing(easing);_tween3.start();}}}},{key:"dispose",value:function dispose(){if(this.domElement.parentElement){this.domElement.parentElement.removeChild(this.domElement);}}},{key:"toString",value:function toString(){return"Annotation: "+this.title;}},{key:"visible",get:function get(){return this._visible;},set:function set(value){if(this._visible===value){return;}this._visible=value;this.traverse(function(node){node.display=value;});this.dispatchEvent({type:"visibility_changed",annotation:this});}},{key:"display",get:function get(){return this._display;},set:function set(display){if(this._display===display){return;}this._display=display;if(display){//this.domElement.fadeIn(200);
this.domElement.show();}else{//this.domElement.fadeOut(200);
this.domElement.hide();}}},{key:"expand",get:function get(){return this._expand;},set:function set(expand){if(this._expand===expand){return;}if(expand){this.display=false;}else{this.display=true;this.traverseDescendants(function(node){node.display=false;});}this._expand=expand;}}]);return _class2;}(THREE.EventDispatcher);Potree.Action=function(_THREE$EventDispatche6){_inherits(Action,_THREE$EventDispatche6);function Action(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,Action);var _this17=_possibleConstructorReturn(this,(Action.__proto__||Object.getPrototypeOf(Action)).call(this));_this17.icon=args.icon||"";_this17.tooltip=args.tooltip;if(args.onclick!==undefined){_this17.onclick=args.onclick;}return _this17;}_createClass(Action,[{key:"onclick",value:function onclick(event){}},{key:"pairWith",value:function pairWith(object){}},{key:"setIcon",value:function setIcon(newIcon){var oldIcon=this.icon;if(newIcon===oldIcon){return;}this.icon=newIcon;this.dispatchEvent({type:"icon_changed",action:this,icon:newIcon,oldIcon:oldIcon});}}]);return Action;}(THREE.EventDispatcher);Potree.Actions={};Potree.Actions.ToggleAnnotationVisibility=function(_Potree$Action){_inherits(ToggleAnnotationVisibility,_Potree$Action);function ToggleAnnotationVisibility(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,ToggleAnnotationVisibility);var _this18=_possibleConstructorReturn(this,(ToggleAnnotationVisibility.__proto__||Object.getPrototypeOf(ToggleAnnotationVisibility)).call(this,args));_this18.icon=Potree.resourcePath+"/icons/eye.svg";_this18.showIn="sidebar";_this18.tooltip="toggle visibility";return _this18;}_createClass(ToggleAnnotationVisibility,[{key:"pairWith",value:function pairWith(annotation){var _this19=this;if(annotation.visible){this.setIcon(Potree.resourcePath+"/icons/eye.svg");}else{this.setIcon(Potree.resourcePath+"/icons/eye_crossed.svg");}annotation.addEventListener("visibility_changed",function(e){var annotation=e.annotation;if(annotation.visible){_this19.setIcon(Potree.resourcePath+"/icons/eye.svg");}else{_this19.setIcon(Potree.resourcePath+"/icons/eye_crossed.svg");}});}},{key:"onclick",value:function onclick(event){var annotation=event.annotation;annotation.visible=!annotation.visible;if(annotation.visible){this.setIcon(Potree.resourcePath+"/icons/eye.svg");}else{this.setIcon(Potree.resourcePath+"/icons/eye_crossed.svg");}}}]);return ToggleAnnotationVisibility;}(Potree.Action);Potree.ProfileData=function(){function ProfileData(profile){_classCallCheck(this,ProfileData);this.profile=profile;this.segments=[];this.boundingBox=new THREE.Box3();for(var _i19=0;_i19<profile.points.length-1;_i19++){var start=profile.points[_i19];var end=profile.points[_i19+1];var startGround=new THREE.Vector3(start.x,start.y,0);var endGround=new THREE.Vector3(end.x,end.y,0);var center=new THREE.Vector3().addVectors(endGround,startGround).multiplyScalar(0.5);var length=startGround.distanceTo(endGround);var side=new THREE.Vector3().subVectors(endGround,startGround).normalize();var up=new THREE.Vector3(0,0,1);var forward=new THREE.Vector3().crossVectors(side,up).normalize();var N=forward;var cutPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(N,startGround);var halfPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(side,center);var segment={start:start,end:end,cutPlane:cutPlane,halfPlane:halfPlane,length:length,points:new Potree.Points()};this.segments.push(segment);}}_createClass(ProfileData,[{key:"size",value:function size(){var size=0;var _iteratorNormalCompletion31=true;var _didIteratorError31=false;var _iteratorError31=undefined;try{for(var _iterator31=this.segments[Symbol.iterator](),_step31;!(_iteratorNormalCompletion31=(_step31=_iterator31.next()).done);_iteratorNormalCompletion31=true){var segment=_step31.value;size+=segment.points.numPoints;}}catch(err){_didIteratorError31=true;_iteratorError31=err;}finally{try{if(!_iteratorNormalCompletion31&&_iterator31.return){_iterator31.return();}}finally{if(_didIteratorError31){throw _iteratorError31;}}}return size;}}]);return ProfileData;}();Potree.ProfileRequest=function(){function ProfileRequest(pointcloud,profile,maxDepth,callback){_classCallCheck(this,ProfileRequest);this.pointcloud=pointcloud;this.profile=profile;this.maxDepth=maxDepth||Number.MAX_VALUE;this.callback=callback;this.temporaryResult=new Potree.ProfileData(this.profile);this.pointsServed=0;this.highestLevelServed=0;this.priorityQueue=new BinaryHeap(function(x){return 1/x.weight;});this.initialize();}_createClass(ProfileRequest,[{key:"initialize",value:function initialize(){this.priorityQueue.push({node:this.pointcloud.pcoGeometry.root,weight:1});this.traverse(this.pointcloud.pcoGeometry.root);}},{key:"traverse",// traverse the node and add intersecting descendants to queue
value:function traverse(node){var stack=[];for(var _i20=0;_i20<8;_i20++){var child=node.children[_i20];if(child&&this.pointcloud.nodeIntersectsProfile(child,this.profile)){stack.push(child);}}while(stack.length>0){var _node=stack.pop();var weight=_node.boundingSphere.radius;this.priorityQueue.push({node:_node,weight:weight});// add children that intersect the cutting plane
if(_node.level<this.maxDepth){for(var _i21=0;_i21<8;_i21++){var _child2=_node.children[_i21];if(_child2&&this.pointcloud.nodeIntersectsProfile(_child2,this.profile)){stack.push(_child2);}}}}}},{key:"update",value:function update(){// load nodes in queue
// if hierarchy expands, also load nodes from expanded hierarchy
// once loaded, add data to this.points and remove node from queue
// only evaluate 1-50 nodes per frame to maintain responsiveness
var maxNodesPerUpdate=1;var intersectedNodes=[];for(var _i22=0;_i22<Math.min(maxNodesPerUpdate,this.priorityQueue.size());_i22++){var element=this.priorityQueue.pop();var node=element.node;if(node.loaded){// add points to result
intersectedNodes.push(node);Potree.getLRU().touch(node);this.highestLevelServed=node.getLevel();if(node.level%node.pcoGeometry.hierarchyStepSize===0&&node.hasChildren){this.traverse(node);}}else{node.load();this.priorityQueue.push(element);}}if(intersectedNodes.length>0){this.getPointsInsideProfile(intersectedNodes,this.temporaryResult);if(this.temporaryResult.size()>100){this.pointsServed+=this.temporaryResult.size();this.callback.onProgress({request:this,points:this.temporaryResult});this.temporaryResult=new Potree.ProfileData(this.profile);}}if(this.priorityQueue.size()===0){// we're done! inform callback and remove from pending requests
if(this.temporaryResult.size()>0){this.pointsServed+=this.temporaryResult.size();this.callback.onProgress({request:this,points:this.temporaryResult});this.temporaryResult=new Potree.ProfileData(this.profile);}this.callback.onFinish({request:this});var index=this.pointcloud.profileRequests.indexOf(this);if(index>=0){this.pointcloud.profileRequests.splice(index,1);}}}},{key:"getPointsInsideProfile",value:function getPointsInsideProfile(nodes,target){var totalMileage=0;var _iteratorNormalCompletion32=true;var _didIteratorError32=false;var _iteratorError32=undefined;try{for(var _iterator32=target.segments[Symbol.iterator](),_step32;!(_iteratorNormalCompletion32=(_step32=_iterator32.next()).done);_iteratorNormalCompletion32=true){var segment=_step32.value;var _iteratorNormalCompletion34=true;var _didIteratorError34=false;var _iteratorError34=undefined;try{for(var _iterator34=nodes[Symbol.iterator](),_step34;!(_iteratorNormalCompletion34=(_step34=_iterator34.next()).done);_iteratorNormalCompletion34=true){var _ref3;var node=_step34.value;var geometry=node.geometry;var positions=geometry.attributes.position;var p=positions.array;var numPoints=node.numPoints;var sv=new THREE.Vector3().subVectors(segment.end,segment.start).setZ(0);var segmentDir=sv.clone().normalize();var accepted=[];var mileage=[];var acceptedPositions=[];var points=new Potree.Points();var nodeMatrix=(_ref3=new THREE.Matrix4()).makeTranslation.apply(_ref3,_toConsumableArray(node.boundingBox.min.toArray()));var matrix=new THREE.Matrix4().multiplyMatrices(this.pointcloud.matrixWorld,nodeMatrix);for(var _i23=0;_i23<numPoints;_i23++){var pos=new THREE.Vector3(p[3*_i23],p[3*_i23+1],p[3*_i23+2]);pos.applyMatrix4(matrix);var distance=Math.abs(segment.cutPlane.distanceToPoint(pos));var centerDistance=Math.abs(segment.halfPlane.distanceToPoint(pos));if(distance<this.profile.width/2&&centerDistance<segment.length/2){var svp=new THREE.Vector3().subVectors(pos,segment.start);var localMileage=segmentDir.dot(svp);accepted.push(_i23);mileage.push(localMileage+totalMileage);points.boundingBox.expandByPoint(pos);acceptedPositions.push(pos.x);acceptedPositions.push(pos.y);acceptedPositions.push(pos.z);}}var _iteratorNormalCompletion35=true;var _didIteratorError35=false;var _iteratorError35=undefined;try{for(var _iterator35=Object.keys(geometry.attributes).filter(function(a){return a!=="indices";})[Symbol.iterator](),_step35;!(_iteratorNormalCompletion35=(_step35=_iterator35.next()).done);_iteratorNormalCompletion35=true){var attribute=_step35.value;var bufferedAttribute=geometry.attributes[attribute];var type=bufferedAttribute.array.constructor;var filteredBuffer=null;if(attribute==="position"){filteredBuffer=new type(acceptedPositions);}else{filteredBuffer=new type(accepted.length*bufferedAttribute.itemSize);for(var _i24=0;_i24<accepted.length;_i24++){var index=accepted[_i24];filteredBuffer.set(bufferedAttribute.array.subarray(bufferedAttribute.itemSize*index,bufferedAttribute.itemSize*index+bufferedAttribute.itemSize),bufferedAttribute.itemSize*_i24);}}points.data[attribute]=filteredBuffer;}}catch(err){_didIteratorError35=true;_iteratorError35=err;}finally{try{if(!_iteratorNormalCompletion35&&_iterator35.return){_iterator35.return();}}finally{if(_didIteratorError35){throw _iteratorError35;}}}points.data["mileage"]=new Float64Array(mileage);points.numPoints=accepted.length;segment.points.add(points);}}catch(err){_didIteratorError34=true;_iteratorError34=err;}finally{try{if(!_iteratorNormalCompletion34&&_iterator34.return){_iterator34.return();}}finally{if(_didIteratorError34){throw _iteratorError34;}}}totalMileage+=segment.length;}}catch(err){_didIteratorError32=true;_iteratorError32=err;}finally{try{if(!_iteratorNormalCompletion32&&_iterator32.return){_iterator32.return();}}finally{if(_didIteratorError32){throw _iteratorError32;}}}var _iteratorNormalCompletion33=true;var _didIteratorError33=false;var _iteratorError33=undefined;try{for(var _iterator33=target.segments[Symbol.iterator](),_step33;!(_iteratorNormalCompletion33=(_step33=_iterator33.next()).done);_iteratorNormalCompletion33=true){var _segment=_step33.value;target.boundingBox.union(_segment.points.boundingBox);}}catch(err){_didIteratorError33=true;_iteratorError33=err;}finally{try{if(!_iteratorNormalCompletion33&&_iterator33.return){_iterator33.return();}}finally{if(_didIteratorError33){throw _iteratorError33;}}}}},{key:"finishLevelThenCancel",value:function finishLevelThenCancel(){if(this.cancelRequested){return;}this.maxDepth=this.highestLevelServed+1;this.cancelRequested=true;console.log("maxDepth: "+this.maxDepth);}},{key:"cancel",value:function cancel(){this.callback.onCancel();this.priorityQueue=new BinaryHeap(function(x){return 1/x.weight;});var index=this.pointcloud.profileRequests.indexOf(this);if(index>=0){this.pointcloud.profileRequests.splice(index,1);}}}]);return ProfileRequest;}();Potree.PointCloudOctreeNode=function(_Potree$PointCloudTre){_inherits(PointCloudOctreeNode,_Potree$PointCloudTre);function PointCloudOctreeNode(){_classCallCheck(this,PointCloudOctreeNode);var _this20=_possibleConstructorReturn(this,(PointCloudOctreeNode.__proto__||Object.getPrototypeOf(PointCloudOctreeNode)).call(this));_this20.children={};_this20.sceneNode=null;_this20.octree=null;return _this20;}_createClass(PointCloudOctreeNode,[{key:"getNumPoints",value:function getNumPoints(){return this.geometryNode.numPoints;}},{key:"isLoaded",value:function isLoaded(){return true;}},{key:"isTreeNode",value:function isTreeNode(){return true;}},{key:"isGeometryNode",value:function isGeometryNode(){return false;}},{key:"getLevel",value:function getLevel(){return this.geometryNode.level;}},{key:"getBoundingSphere",value:function getBoundingSphere(){return this.geometryNode.boundingSphere;}},{key:"getBoundingBox",value:function getBoundingBox(){return this.geometryNode.boundingBox;}},{key:"getChildren",value:function getChildren(){var children=[];for(var _i25=0;_i25<8;_i25++){if(this.children[_i25]){children.push(this.children[_i25]);}}return children;}},{key:"name",get:function get(){return this.geometryNode.name;}}]);return PointCloudOctreeNode;}(Potree.PointCloudTreeNode);Potree.PointCloudOctree=function(_Potree$PointCloudTre2){_inherits(_class3,_Potree$PointCloudTre2);function _class3(geometry,material){_classCallCheck(this,_class3);var _this21=_possibleConstructorReturn(this,(_class3.__proto__||Object.getPrototypeOf(_class3)).call(this));_this21.pcoGeometry=geometry;_this21.boundingBox=_this21.pcoGeometry.boundingBox;_this21.boundingSphere=_this21.boundingBox.getBoundingSphere();_this21.material=material||new Potree.PointCloudMaterial();_this21.visiblePointsTarget=2*1000*1000;_this21.minimumNodePixelSize=150;_this21.level=0;_this21.position.copy(geometry.offset);_this21.updateMatrix();_this21.showBoundingBox=false;_this21.boundingBoxNodes=[];_this21.loadQueue=[];_this21.visibleBounds=new THREE.Box3();_this21.visibleNodes=[];_this21.visibleGeometry=[];_this21.generateDEM=false;_this21.profileRequests=[];_this21.name="";{var box=[_this21.pcoGeometry.tightBoundingBox,_this21.getBoundingBoxWorld()].find(function(v){return v!==undefined;});_this21.updateMatrixWorld(true);box=Potree.utils.computeTransformedBoundingBox(box,_this21.matrixWorld);var bWidth=box.max.z-box.min.z;var _bMin=box.min.z-0.2*bWidth;var _bMax=box.max.z+0.2*bWidth;_this21.material.heightMin=_bMin;_this21.material.heightMax=_bMax;}// TODO read projection from file instead
_this21.projection=geometry.projection;_this21.root=_this21.pcoGeometry.root;return _this21;}_createClass(_class3,[{key:"setName",value:function setName(name){if(this.name!==name){this.name=name;this.dispatchEvent({type:"name_changed",name:name,pointcloud:this});}}},{key:"getName",value:function getName(){return name;}},{key:"toTreeNode",value:function toTreeNode(geometryNode,parent){var _this22=this;var node=new Potree.PointCloudOctreeNode();//if(geometryNode.name === "r40206"){
//	console.log("creating node for r40206");
//}
var sceneNode=new THREE.Points(geometryNode.geometry,this.material);sceneNode.name=geometryNode.name;sceneNode.position.copy(geometryNode.boundingBox.min);sceneNode.frustumCulled=false;sceneNode.onBeforeRender=function(_this,scene,camera,geometry,material,group){if(material.program){_this.getContext().useProgram(material.program.program);if(material.program.getUniforms().map.level){var level=geometryNode.getLevel();material.uniforms.level.value=level;material.program.getUniforms().map.level.setValue(_this.getContext(),level);}if(_this22.visibleNodeTextureOffsets&&material.program.getUniforms().map.vnStart){var vnStart=_this22.visibleNodeTextureOffsets.get(node);material.uniforms.vnStart.value=vnStart;material.program.getUniforms().map.vnStart.setValue(_this.getContext(),vnStart);}if(material.program.getUniforms().map.pcIndex){var _i26=node.pcIndex?node.pcIndex:_this22.visibleNodes.indexOf(node);material.uniforms.pcIndex.value=_i26;material.program.getUniforms().map.pcIndex.setValue(_this.getContext(),_i26);}}};//{ // DEBUG
//	let sg = new THREE.SphereGeometry(1, 16, 16);
//	let sm = new THREE.MeshNormalMaterial();
//	let s = new THREE.Mesh(sg, sm);
//	s.scale.set(5, 5, 5);
//	s.position.copy(geometryNode.mean)
//		.add(this.position)
//		.add(geometryNode.boundingBox.min);
//	
//	viewer.scene.scene.add(s);
//}
node.geometryNode=geometryNode;node.sceneNode=sceneNode;node.pointcloud=this;node.children={};for(var key in geometryNode.children){node.children[key]=geometryNode.children[key];}if(!parent){this.root=node;this.add(sceneNode);}else{var childIndex=parseInt(geometryNode.name[geometryNode.name.length-1]);parent.sceneNode.add(sceneNode);parent.children[childIndex]=node;}var disposeListener=function disposeListener(){var childIndex=parseInt(geometryNode.name[geometryNode.name.length-1]);parent.sceneNode.remove(node.sceneNode);parent.children[childIndex]=geometryNode;};geometryNode.oneTimeDisposeHandlers.push(disposeListener);return node;}},{key:"updateVisibleBounds",value:function updateVisibleBounds(){var leafNodes=[];for(var _i27=0;_i27<this.visibleNodes.length;_i27++){var node=this.visibleNodes[_i27];var isLeaf=true;for(var _j8=0;_j8<node.children.length;_j8++){var child=node.children[_j8];if(child instanceof Potree.PointCloudOctreeNode){isLeaf=isLeaf&&!child.sceneNode.visible;}else if(child instanceof Potree.PointCloudOctreeGeometryNode){isLeaf=true;}}if(isLeaf){leafNodes.push(node);}}this.visibleBounds.min=new THREE.Vector3(Infinity,Infinity,Infinity);this.visibleBounds.max=new THREE.Vector3(-Infinity,-Infinity,-Infinity);for(var _i28=0;_i28<leafNodes.length;_i28++){var _node2=leafNodes[_i28];this.visibleBounds.expandByPoint(_node2.getBoundingBox().min);this.visibleBounds.expandByPoint(_node2.getBoundingBox().max);}}},{key:"updateMaterial",value:function updateMaterial(material,visibleNodes,camera,renderer){material.fov=camera.fov*(Math.PI/180);material.screenWidth=renderer.domElement.clientWidth;material.screenHeight=renderer.domElement.clientHeight;material.spacing=this.pcoGeometry.spacing*Math.max(this.scale.x,this.scale.y,this.scale.z);material.near=camera.near;material.far=camera.far;material.uniforms.octreeSize.value=this.pcoGeometry.boundingBox.getSize().x;// update visibility texture
if(material.pointSizeType>=0){if(material.pointSizeType===Potree.PointSizeType.ADAPTIVE||material.pointColorType===Potree.PointColorType.LOD){this.updateVisibilityTexture(material,visibleNodes);}}}},{key:"updateVisibilityTexture",value:function updateVisibilityTexture(material,visibleNodes){if(!material){return;}var texture=material.visibleNodesTexture;var data=texture.image.data;data.fill(0);this.visibleNodeTextureOffsets=new Map();// copy array
visibleNodes=visibleNodes.slice();// sort by level and index, e.g. r, r0, r3, r4, r01, r07, r30, ...
var sort=function sort(a,b){var na=a.geometryNode.name;var nb=b.geometryNode.name;if(na.length!=nb.length)return na.length-nb.length;if(na<nb)return-1;if(na>nb)return 1;return 0;};visibleNodes.sort(sort);for(var _i29=0;_i29<visibleNodes.length;_i29++){var node=visibleNodes[_i29];this.visibleNodeTextureOffsets.set(node,_i29);var children=[];for(var _j9=0;_j9<8;_j9++){var child=node.children[_j9];if(child instanceof Potree.PointCloudOctreeNode&&child.sceneNode.visible&&visibleNodes.indexOf(child)>=0){children.push(child);}}children.sort(function(a,b){if(a.geometryNode.name<b.geometryNode.name)return-1;if(a.geometryNode.name>b.geometryNode.name)return 1;return 0;});data[_i29*3+0]=0;data[_i29*3+1]=0;data[_i29*3+2]=0;for(var _j10=0;_j10<children.length;_j10++){var _child3=children[_j10];var index=parseInt(_child3.geometryNode.name.substr(-1));data[_i29*3+0]+=Math.pow(2,index);if(_j10===0){var vArrayIndex=visibleNodes.indexOf(_child3);data[_i29*3+1]=vArrayIndex-_i29>>8;data[_i29*3+2]=(vArrayIndex-_i29)%256;}}}texture.needsUpdate=true;}},{key:"nodeIntersectsProfile",value:function nodeIntersectsProfile(node,profile){var bbWorld=node.boundingBox.clone().applyMatrix4(this.matrixWorld);var bsWorld=bbWorld.getBoundingSphere();for(var _i30=0;_i30<profile.points.length-1;_i30++){var start=new THREE.Vector3(profile.points[_i30].x,bsWorld.center.y,profile.points[_i30].z);var end=new THREE.Vector3(profile.points[_i30+1].x,bsWorld.center.y,profile.points[_i30+1].z);var ray1=new THREE.Ray(start,new THREE.Vector3().subVectors(end,start).normalize());var ray2=new THREE.Ray(end,new THREE.Vector3().subVectors(start,end).normalize());if(ray1.intersectsSphere(bsWorld)&&ray2.intersectsSphere(bsWorld)){return true;}}return false;}},{key:"nodesOnRay",value:function nodesOnRay(nodes,ray){var nodesOnRay=[];var _ray=ray.clone();for(var _i31=0;_i31<nodes.length;_i31++){var node=nodes[_i31];//var inverseWorld = new THREE.Matrix4().getInverse(node.matrixWorld);
//let sphere = node.getBoundingSphere().clone().applyMatrix4(node.sceneNode.matrixWorld);
var sphere=node.getBoundingSphere().clone().applyMatrix4(this.matrixWorld);if(_ray.intersectsSphere(sphere)){nodesOnRay.push(node);}}return nodesOnRay;}},{key:"updateMatrixWorld",value:function updateMatrixWorld(force){if(this.matrixAutoUpdate===true)this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||force===true){if(!this.parent){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}}},{key:"hideDescendants",value:function hideDescendants(object){var stack=[];for(var _i32=0;_i32<object.children.length;_i32++){var child=object.children[_i32];if(child.visible){stack.push(child);}}while(stack.length>0){var _object=stack.shift();_object.visible=false;for(var _i33=0;_i33<_object.children.length;_i33++){var _child4=_object.children[_i33];if(_child4.visible){stack.push(_child4);}}}}},{key:"moveToOrigin",value:function moveToOrigin(){this.position.set(0,0,0);this.updateMatrixWorld(true);var box=this.boundingBox;var transform=this.matrixWorld;var tBox=Potree.utils.computeTransformedBoundingBox(box,transform);this.position.set(0,0,0).sub(tBox.getCenter());}},{key:"moveToGroundPlane",value:function moveToGroundPlane(){this.updateMatrixWorld(true);var box=this.boundingBox;var transform=this.matrixWorld;var tBox=Potree.utils.computeTransformedBoundingBox(box,transform);this.position.y+=-tBox.min.y;}},{key:"getBoundingBoxWorld",value:function getBoundingBoxWorld(){this.updateMatrixWorld(true);var box=this.boundingBox;var transform=this.matrixWorld;var tBox=Potree.utils.computeTransformedBoundingBox(box,transform);return tBox;}},{key:"getPointsInProfile",/**
	 * returns points inside the profile points
	 *
	 * maxDepth:		search points up to the given octree depth
	 *
	 *
	 * The return value is an array with all segments of the profile path
	 *  var segment = {
	 * 		start: 	THREE.Vector3,
	 * 		end: 	THREE.Vector3,
	 * 		points: {}
	 * 		project: function()
	 *  };
	 *
	 * The project() function inside each segment can be used to transform
	 * that segments point coordinates to line up along the x-axis.
	 *
	 *
	 */value:function getPointsInProfile(profile,maxDepth,callback){if(callback){var request=new Potree.ProfileRequest(this,profile,maxDepth,callback);this.profileRequests.push(request);return request;}var points={segments:[],boundingBox:new THREE.Box3(),projectedBoundingBox:new THREE.Box2()};// evaluate segments
for(var _i34=0;_i34<profile.points.length-1;_i34++){var start=profile.points[_i34];var end=profile.points[_i34+1];var ps=this.getProfile(start,end,profile.width,maxDepth);var segment={start:start,end:end,points:ps,project:null};points.segments.push(segment);points.boundingBox.expandByPoint(ps.boundingBox.min);points.boundingBox.expandByPoint(ps.boundingBox.max);}// add projection functions to the segments
var mileage=new THREE.Vector3();for(var _i35=0;_i35<points.segments.length;_i35++){var _segment2=points.segments[_i35];var _start2=_segment2.start;var _end2=_segment2.end;var project=function(_start,_end,_mileage,_boundingBox){var start=_start;var end=_end;var mileage=_mileage;var boundingBox=_boundingBox;var xAxis=new THREE.Vector3(1,0,0);var dir=new THREE.Vector3().subVectors(end,start);dir.y=0;dir.normalize();var alpha=Math.acos(xAxis.dot(dir));if(dir.z>0){alpha=-alpha;}return function(position){var toOrigin=new THREE.Matrix4().makeTranslation(-start.x,-boundingBox.min.y,-start.z);var alignWithX=new THREE.Matrix4().makeRotationY(-alpha);var applyMileage=new THREE.Matrix4().makeTranslation(mileage.x,0,0);var pos=position.clone();pos.applyMatrix4(toOrigin);pos.applyMatrix4(alignWithX);pos.applyMatrix4(applyMileage);return pos;};}(_start2,_end2,mileage.clone(),points.boundingBox.clone());_segment2.project=project;mileage.x+=new THREE.Vector3(_start2.x,0,_start2.z).distanceTo(new THREE.Vector3(_end2.x,0,_end2.z));mileage.y+=_end2.y-_start2.y;}points.projectedBoundingBox.min.x=0;points.projectedBoundingBox.min.y=points.boundingBox.min.y;points.projectedBoundingBox.max.x=mileage.x;points.projectedBoundingBox.max.y=points.boundingBox.max.y;return points;}/**
	 * returns points inside the given profile bounds.
	 *
	 * start: 	
	 * end: 	
	 * width:	
	 * depth:		search points up to the given octree depth
	 * callback:	if specified, points are loaded before searching
	 *				
	 *
	 */},{key:"getProfile",value:function getProfile(start,end,width,depth,callback){if(callback!==undefined){var request=new Potree.ProfileRequest(start,end,width,depth,callback);this.profileRequests.push(request);}else{var stack=[];stack.push(this);var center=new THREE.Vector3().addVectors(end,start).multiplyScalar(0.5);var length=new THREE.Vector3().subVectors(end,start).length();var side=new THREE.Vector3().subVectors(end,start).normalize();var up=new THREE.Vector3(0,1,0);var forward=new THREE.Vector3().crossVectors(side,up).normalize();var N=forward;var cutPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(N,start);var halfPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(side,center);var inside=null;var boundingBox=new THREE.Box3();while(stack.length>0){var object=stack.shift();var pointsFound=0;if(object instanceof THREE.Points){var geometry=object.geometry;var positions=geometry.attributes.position;var p=positions.array;var numPoints=object.numPoints;if(!inside){inside={};for(var property in geometry.attributes){if(geometry.attributes.hasOwnProperty(property)){if(property==="indices"){}else{inside[property]=[];}}}}for(var _i36=0;_i36<numPoints;_i36++){var pos=new THREE.Vector3(p[3*_i36],p[3*_i36+1],p[3*_i36+2]);pos.applyMatrix4(this.matrixWorld);var distance=Math.abs(cutPlane.distanceToPoint(pos));var centerDistance=Math.abs(halfPlane.distanceToPoint(pos));if(distance<width/2&&centerDistance<length/2){boundingBox.expandByPoint(pos);for(var _property in geometry.attributes){if(geometry.attributes.hasOwnProperty(_property)){if(_property==="position"){inside[_property].push(pos);}else if(_property==="indices"){// skip indices
}else{var values=geometry.attributes[_property];if(values.itemSize===1){inside[_property].push(values.array[_i36+j]);}else{var value=[];for(var _j11=0;_j11<values.itemSize;_j11++){value.push(values.array[_i36*values.itemSize+_j11]);}inside[_property].push(value);}}}}pointsFound++;}}}//console.log("traversing: " + object.name + ", #points found: " + pointsFound);
if(object==this||object.level<depth){for(var _i37=0;_i37<object.children.length;_i37++){var child=object.children[_i37];if(child instanceof THREE.Points){var sphere=child.boundingSphere.clone().applyMatrix4(child.matrixWorld);if(cutPlane.distanceToSphere(sphere)<sphere.radius){stack.push(child);}}}}}inside.numPoints=inside.position.length;var project=function(_start,_end){var start=_start;var end=_end;var xAxis=new THREE.Vector3(1,0,0);var dir=new THREE.Vector3().subVectors(end,start);dir.y=0;dir.normalize();var alpha=Math.acos(xAxis.dot(dir));if(dir.z>0){alpha=-alpha;}return function(position){var toOrigin=new THREE.Matrix4().makeTranslation(-start.x,-start.y,-start.z);var alignWithX=new THREE.Matrix4().makeRotationY(-alpha);var pos=position.clone();pos.applyMatrix4(toOrigin);pos.applyMatrix4(alignWithX);return pos;};}(start,end);inside.project=project;inside.boundingBox=boundingBox;return inside;}}},{key:"getVisibleExtent",value:function getVisibleExtent(){return this.visibleBounds.applyMatrix4(this.matrixWorld);}},{key:"pick",/**
	 *
	 *
	 *
	 * params.pickWindowSize:	Look for points inside a pixel window of this size.
	 * 							Use odd values: 1, 3, 5, ...
	 * 
	 * 
	 * TODO: only draw pixels that are actually read with readPixels(). 
	 * 
	 */value:function pick(renderer,camera,ray){var _this23=this;var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};//let start = new Date().getTime();
var pickWindowSize=params.pickWindowSize||17;var pickOutsideClipRegion=params.pickOutsideClipRegion||false;var width=Math.ceil(renderer.domElement.clientWidth);var height=Math.ceil(renderer.domElement.clientHeight);var nodes=this.nodesOnRay(this.visibleNodes,ray);if(nodes.length===0){return null;}if(!this.pickState){var scene=new THREE.Scene();var material=new Potree.PointCloudMaterial();material.pointColorType=Potree.PointColorType.POINT_INDEX;var renderTarget=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat});this.pickState={renderTarget:renderTarget,material:material,scene:scene};};var pickState=this.pickState;var pickMaterial=pickState.material;{// update pick material
pickMaterial.pointSizeType=this.material.pointSizeType;pickMaterial.shape=this.material.shape;pickMaterial.size=this.material.size;pickMaterial.minSize=this.material.minSize;pickMaterial.maxSize=this.material.maxSize;pickMaterial.classification=this.material.classification;if(pickOutsideClipRegion){pickMaterial.clipMode=Potree.ClipMode.DISABLED;}else{pickMaterial.clipMode=this.material.clipMode;if(this.material.clipMode===Potree.ClipMode.CLIP_OUTSIDE){pickMaterial.setClipBoxes(this.material.clipBoxes);}else{pickMaterial.setClipBoxes([]);}}this.updateMaterial(pickMaterial,nodes,camera,renderer);}if(pickState.renderTarget.width!=width||pickState.renderTarget.height!=height){pickState.renderTarget.dispose();pickState.renderTarget=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat});}pickState.renderTarget.setSize(width,height);renderer.setRenderTarget(pickState.renderTarget);var pixelPos=new THREE.Vector3().addVectors(camera.position,ray.direction).project(camera).addScalar(1).multiplyScalar(0.5);pixelPos.x*=width;pixelPos.y*=height;renderer.setScissor(parseInt(pixelPos.x-(pickWindowSize-1)/2),parseInt(pixelPos.y-(pickWindowSize-1)/2),parseInt(pickWindowSize),parseInt(pickWindowSize));renderer.setScissorTest(true);renderer.state.buffers.depth.setTest(pickMaterial.depthTest);renderer.state.buffers.depth.setMask(pickMaterial.depthWrite);renderer.state.setBlending(THREE.NoBlending);renderer.clearTarget(pickState.renderTarget,true,true,true);//pickState.scene.children = nodes.map(n => n.sceneNode);
//let childStates = [];
var tempNodes=[];var _loop2=function _loop2(_i38){var node=nodes[_i38];node.pcIndex=_i38+1;var sceneNode=node.sceneNode;var tempNode=new THREE.Points(sceneNode.geometry,pickMaterial);tempNode.matrix=sceneNode.matrix;tempNode.matrixWorld=sceneNode.matrixWorld;tempNode.matrixAutoUpdate=false;tempNode.frustumCulled=false;tempNode.pcIndex=_i38+1;var geometryNode=node.geometryNode;var material=pickMaterial;tempNode.onBeforeRender=function(_this,scene,camera,geometry,material,group){if(material.program){_this.getContext().useProgram(material.program.program);if(material.program.getUniforms().map.level){var level=geometryNode.getLevel();material.uniforms.level.value=level;material.program.getUniforms().map.level.setValue(_this.getContext(),level);}if(_this23.visibleNodeTextureOffsets&&material.program.getUniforms().map.vnStart){var vnStart=_this23.visibleNodeTextureOffsets.get(node);material.uniforms.vnStart.value=vnStart;material.program.getUniforms().map.vnStart.setValue(_this.getContext(),vnStart);}if(material.program.getUniforms().map.pcIndex){material.uniforms.pcIndex.value=node.pcIndex;material.program.getUniforms().map.pcIndex.setValue(_this.getContext(),node.pcIndex);}}};tempNodes.push(tempNode);//for(let child of nodes[i].sceneNode.children){
//	childStates.push({child: child, visible: child.visible});
//	child.visible = false;
//}
};for(var _i38=0;_i38<nodes.length;_i38++){_loop2(_i38);}pickState.scene.autoUpdate=false;pickState.scene.children=tempNodes;//pickState.scene.overrideMaterial = pickMaterial;
renderer.state.setBlending(THREE.NoBlending);// RENDER
renderer.render(pickState.scene,camera,pickState.renderTarget);//for(let childState of childStates){
//	childState.child = childState.visible;
//}
//pickState.scene.overrideMaterial = null;
//renderer.context.readPixels(
//	pixelPos.x - (pickWindowSize-1) / 2, pixelPos.y - (pickWindowSize-1) / 2, 
//	pickWindowSize, pickWindowSize, 
//	renderer.context.RGBA, renderer.context.UNSIGNED_BYTE, pixels);
var clamp=function clamp(number,min,max){return Math.min(Math.max(min,number),max);};var x=parseInt(clamp(pixelPos.x-(pickWindowSize-1)/2,0,width));var y=parseInt(clamp(pixelPos.y-(pickWindowSize-1)/2,0,height));var w=parseInt(Math.min(x+pickWindowSize,width)-x);var h=parseInt(Math.min(y+pickWindowSize,height)-y);var pixelCount=w*h;var buffer=new Uint8Array(4*pixelCount);renderer.readRenderTargetPixels(pickState.renderTarget,x,y,w,h,buffer);renderer.setScissorTest(false);renderer.setRenderTarget(null);var pixels=buffer;var ibuffer=new Uint32Array(buffer.buffer);// find closest hit inside pixelWindow boundaries
var min=Number.MAX_VALUE;var hit=null;for(var u=0;u<pickWindowSize;u++){for(var v=0;v<pickWindowSize;v++){var offset=u+v*pickWindowSize;var distance=Math.pow(u-(pickWindowSize-1)/2,2)+Math.pow(v-(pickWindowSize-1)/2,2);var pcIndex=pixels[4*offset+3];pixels[4*offset+3]=0;var pIndex=ibuffer[offset];//if((pIndex !== 0 || pcIndex !== 0) && distance < min){
if(pcIndex>0&&distance<min){hit={pIndex:pIndex,pcIndex:pcIndex-1};min=distance;//console.log(hit);
}}}//console.log(pixels);
//{ // open window with image
//	let img = Potree.utils.pixelsArrayToImage(buffer, w, h);
//	let screenshot = img.src;
//	
//	if(!this.debugDIV){
//		this.debugDIV = $(`
//			<div id="pickDebug" 
//			style="position: absolute; 
//			right: 400px; width: 300px;
//			bottom: 44px; width: 300px;
//			z-index: 1000;
//			"></div>`);
//		$(document.body).append(this.debugDIV);
//	}
//	
//	this.debugDIV.empty();
//	this.debugDIV.append($(`<img src="${screenshot}"
//		style="transform: scaleY(-1);"/>`));
//	//$(this.debugWindow.document).append($(`<img src="${screenshot}"/>`));
//	//this.debugWindow.document.write('<img src="'+screenshot+'"/>');
//}
//return;
var point=null;if(hit){point={};if(!nodes[hit.pcIndex]){return null;}var pc=nodes[hit.pcIndex].sceneNode;var attributes=pc.geometry.attributes;for(var property in attributes){if(attributes.hasOwnProperty(property)){var values=pc.geometry.attributes[property];if(property==="position"){var positionArray=values.array;var _x8=positionArray[3*hit.pIndex+0];var _y=positionArray[3*hit.pIndex+1];var z=positionArray[3*hit.pIndex+2];var position=new THREE.Vector3(_x8,_y,z);position.applyMatrix4(pc.matrixWorld);point[property]=position;}else if(property==="indices"){}else{if(values.itemSize===1){point[property]=values.array[hit.pIndex];}else{var value=[];for(var _j12=0;_j12<values.itemSize;_j12++){value.push(values.array[values.itemSize*hit.pIndex+_j12]);}point[property]=value;}}}}}//let end = new Date().getTime();
//let duration = end - start;
//console.log(`pick duration: ${duration}ms`);
return point;}},{key:"progress",get:function get(){return this.visibleNodes.length/this.visibleGeometry.length;}}]);return _class3;}(Potree.PointCloudTree);var nodesLoadTimes={};Potree.PointCloudOctreeGeometry=function(){this.url=null;this.octreeDir=null;this.spacing=0;this.boundingBox=null;this.root=null;this.numNodesLoading=0;this.nodes=null;this.pointAttributes=null;this.hierarchyStepSize=-1;this.loader=null;};Potree.PointCloudOctreeGeometryNode=function(name,pcoGeometry,boundingBox){this.id=Potree.PointCloudOctreeGeometryNode.IDCount++;this.name=name;this.index=parseInt(name.charAt(name.length-1));this.pcoGeometry=pcoGeometry;this.geometry=null;this.boundingBox=boundingBox;this.boundingSphere=boundingBox.getBoundingSphere();this.children={};this.numPoints=0;this.level=null;this.loaded=false;this.oneTimeDisposeHandlers=[];};Potree.PointCloudOctreeGeometryNode.IDCount=0;Potree.PointCloudOctreeGeometryNode.prototype=Object.create(Potree.PointCloudTreeNode.prototype);Potree.PointCloudOctreeGeometryNode.prototype.isGeometryNode=function(){return true;};Potree.PointCloudOctreeGeometryNode.prototype.getLevel=function(){return this.level;};Potree.PointCloudOctreeGeometryNode.prototype.isTreeNode=function(){return false;};Potree.PointCloudOctreeGeometryNode.prototype.isLoaded=function(){return this.loaded;};Potree.PointCloudOctreeGeometryNode.prototype.getBoundingSphere=function(){return this.boundingSphere;};Potree.PointCloudOctreeGeometryNode.prototype.getBoundingBox=function(){return this.boundingBox;};Potree.PointCloudOctreeGeometryNode.prototype.getChildren=function(){var children=[];for(var i=0;i<8;i++){if(this.children[i]){children.push(this.children[i]);}}return children;};Potree.PointCloudOctreeGeometryNode.prototype.getBoundingBox=function(){return this.boundingBox;};Potree.PointCloudOctreeGeometryNode.prototype.getURL=function(){var url="";var version=this.pcoGeometry.loader.version;if(version.equalOrHigher("1.5")){url=this.pcoGeometry.octreeDir+"/"+this.getHierarchyPath()+"/"+this.name;}else if(version.equalOrHigher("1.4")){url=this.pcoGeometry.octreeDir+"/"+this.name;}else if(version.upTo("1.3")){url=this.pcoGeometry.octreeDir+"/"+this.name;}return url;};Potree.PointCloudOctreeGeometryNode.prototype.getHierarchyPath=function(){var path="r/";var hierarchyStepSize=this.pcoGeometry.hierarchyStepSize;var indices=this.name.substr(1);var numParts=Math.floor(indices.length/hierarchyStepSize);for(var i=0;i<numParts;i++){path+=indices.substr(i*hierarchyStepSize,hierarchyStepSize)+"/";}path=path.slice(0,-1);return path;};Potree.PointCloudOctreeGeometryNode.prototype.addChild=function(child){this.children[child.index]=child;child.parent=this;};Potree.PointCloudOctreeGeometryNode.prototype.load=function(){if(this.loading===true||this.loaded===true||this.pcoGeometry.numNodesLoading>3){return;}this.loading=true;this.pcoGeometry.numNodesLoading++;if(this.pcoGeometry.loader.version.equalOrHigher("1.5")){if(this.level%this.pcoGeometry.hierarchyStepSize===0&&this.hasChildren){this.loadHierachyThenPoints();}else{this.loadPoints();}}else{this.loadPoints();}};Potree.PointCloudOctreeGeometryNode.prototype.loadPoints=function(){this.pcoGeometry.loader.load(this);};Potree.PointCloudOctreeGeometryNode.prototype.loadHierachyThenPoints=function(){var node=this;// load hierarchy
var callback=function callback(node,hbuffer){var count=hbuffer.byteLength/5;var view=new DataView(hbuffer);var stack=[];var children=view.getUint8(0);var numPoints=view.getUint32(1,true);node.numPoints=numPoints;stack.push({children:children,numPoints:numPoints,name:node.name});var decoded=[];var offset=5;while(stack.length>0){var snode=stack.shift();var mask=1;for(var i=0;i<8;i++){if((snode.children&mask)!==0){var childIndex=i;var childName=snode.name+i;var childChildren=view.getUint8(offset);var childNumPoints=view.getUint32(offset+1,true);stack.push({children:childChildren,numPoints:childNumPoints,name:childName});decoded.push({children:childChildren,numPoints:childNumPoints,name:childName});offset+=5;}mask=mask*2;}if(offset===hbuffer.byteLength){break;}}//console.log(decoded);
var nodes={};nodes[node.name]=node;var pco=node.pcoGeometry;for(var i=0;i<decoded.length;i++){var name=decoded[i].name;var numPoints=decoded[i].numPoints;var index=parseInt(name.charAt(name.length-1));var parentName=name.substring(0,name.length-1);var parentNode=nodes[parentName];var level=name.length-1;var boundingBox=Potree.POCLoader.createChildAABB(parentNode.boundingBox,index);var currentNode=new Potree.PointCloudOctreeGeometryNode(name,pco,boundingBox);currentNode.level=level;currentNode.numPoints=numPoints;currentNode.hasChildren=decoded[i].children>0;currentNode.spacing=pco.spacing/Math.pow(2,level);parentNode.addChild(currentNode);nodes[name]=currentNode;}node.loadPoints();};if(node.level%node.pcoGeometry.hierarchyStepSize===0){//var hurl = node.pcoGeometry.octreeDir + "/../hierarchy/" + node.name + ".hrc";
var hurl=node.pcoGeometry.octreeDir+"/"+node.getHierarchyPath()+"/"+node.name+".hrc";var xhr=new XMLHttpRequest();xhr.open('GET',hurl,true);xhr.responseType='arraybuffer';xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){var hbuffer=xhr.response;callback(node,hbuffer);}else{console.log('Failed to load file! HTTP status: '+xhr.status+", file: "+url);}}};try{xhr.send(null);}catch(e){console.log("fehler beim laden der punktwolke: "+e);}}};Potree.PointCloudOctreeGeometryNode.prototype.getNumPoints=function(){return this.numPoints;};Potree.PointCloudOctreeGeometryNode.prototype.dispose=function(){if(this.geometry&&this.parent!=null){this.geometry.dispose();this.geometry=null;this.loaded=false;//this.dispatchEvent( { type: 'dispose' } );
for(var i=0;i<this.oneTimeDisposeHandlers.length;i++){var handler=this.oneTimeDisposeHandlers[i];handler();}this.oneTimeDisposeHandlers=[];}};//THREE.EventDispatcher.prototype.apply( Potree.PointCloudOctreeGeometryNode.prototype );
Object.assign(Potree.PointCloudOctreeGeometryNode.prototype,THREE.EventDispatcher.prototype);Potree.PointCloudGreyhoundGeometry=function(){this.spacing=0;this.boundingBox=null;this.root=null;this.numNodesLoading=0;this.nodes=null;this.pointAttributes={};this.hierarchyStepSize=-1;this.loader=null;this.schema=null;this.baseDepth=null;this.offset=null;this.projection=null;this.boundingSphere=null;//the serverURL will contain the base URL of the greyhound server. f.e. http://dev.greyhound.io/resource/autzen/
this.serverURL=null;this.normalize={color:false,intensity:false};};var nodesLoadTimes={};var baseLoaded=false;Potree.PointCloudGreyhoundGeometryNode=function(name,pcoGeometry,boundingBox,scale,offset){this.id=Potree.PointCloudGreyhoundGeometryNode.IDCount++;this.name=name;this.index=parseInt(name.charAt(name.length-1));this.pcoGeometry=pcoGeometry;this.geometry=null;this.boundingBox=boundingBox;this.boundingSphere=boundingBox.getBoundingSphere();this.scale=scale;this.offset=offset;this.children={};this.numPoints=0;this.level=null;this.loaded=false;this.oneTimeDisposeHandlers=[];var bounds=this.boundingBox.clone();bounds.min.sub(this.pcoGeometry.boundingBox.getCenter());bounds.max.sub(this.pcoGeometry.boundingBox.getCenter());if(this.scale){bounds.min.multiplyScalar(1/this.scale);bounds.max.multiplyScalar(1/this.scale);}// This represents the bounds for this node in the reference frame of the
// global bounds from `info`, centered around the origin, and then scaled
// by our selected scale.
this.greyhoundBounds=bounds;// This represents the offset between the coordinate system described above
// and our pcoGeometry bounds.
this.greyhoundOffset=this.pcoGeometry.offset.clone().add(this.pcoGeometry.boundingBox.getSize().multiplyScalar(0.5));};Potree.PointCloudGreyhoundGeometryNode.IDCount=0;Potree.PointCloudGreyhoundGeometryNode.prototype=Object.create(Potree.PointCloudTreeNode.prototype);Potree.PointCloudGreyhoundGeometryNode.prototype.isGeometryNode=function(){return true;};Potree.PointCloudGreyhoundGeometryNode.prototype.isTreeNode=function(){return false;};Potree.PointCloudGreyhoundGeometryNode.prototype.isLoaded=function(){return this.loaded;};Potree.PointCloudGreyhoundGeometryNode.prototype.getBoundingSphere=function(){return this.boundingSphere;};Potree.PointCloudGreyhoundGeometryNode.prototype.getBoundingBox=function(){return this.boundingBox;};Potree.PointCloudGreyhoundGeometryNode.prototype.getLevel=function(){return this.level;};Potree.PointCloudGreyhoundGeometryNode.prototype.getChildren=function(){var children=[];for(var i=0;i<8;++i){if(this.children[i]){children.push(this.children[i]);}}return children;};Potree.PointCloudGreyhoundGeometryNode.prototype.getURL=function(){var schema=this.pcoGeometry.schema;var bounds=this.greyhoundBounds;var boundsString=bounds.min.x+','+bounds.min.y+','+bounds.min.z+','+bounds.max.x+','+bounds.max.y+','+bounds.max.z;var url=''+this.pcoGeometry.serverURL+'read?depthBegin='+(baseLoaded?this.level+this.pcoGeometry.baseDepth:0)+'&depthEnd='+(this.level+this.pcoGeometry.baseDepth+1)+'&bounds=['+boundsString+']'+'&schema='+JSON.stringify(schema)+'&compress=true';if(this.scale){url+='&scale='+this.scale;}if(this.greyhoundOffset){var offset=this.greyhoundOffset;url+='&offset=['+offset.x+','+offset.y+','+offset.z+']';}if(this.level===1){var a=1;}if(!baseLoaded)baseLoaded=true;return url;};Potree.PointCloudGreyhoundGeometryNode.prototype.addChild=function(child){this.children[child.index]=child;child.parent=this;};Potree.PointCloudGreyhoundGeometryNode.prototype.load=function(){if(this.loading===true||this.loaded===true||this.pcoGeometry.numNodesLoading>3){return;}this.loading=true;this.pcoGeometry.numNodesLoading++;if(this.level%this.pcoGeometry.hierarchyStepSize===0&&this.hasChildren){this.loadHierarchyThenPoints();}else{this.loadPoints();}};Potree.PointCloudGreyhoundGeometryNode.prototype.loadPoints=function(){this.pcoGeometry.loader.load(this);};Potree.PointCloudGreyhoundGeometryNode.prototype.loadHierarchyThenPoints=function(){// From Greyhound (Cartesian) ordering for the octree to Potree-default
var transform=[0,2,1,3,4,6,5,7];var makeBitMask=function makeBitMask(node){var mask=0;Object.keys(node).forEach(function(key){if(key==='swd')mask+=1<<transform[0];else if(key==='nwd')mask+=1<<transform[1];else if(key==='swu')mask+=1<<transform[2];else if(key==='nwu')mask+=1<<transform[3];else if(key==='sed')mask+=1<<transform[4];else if(key==='ned')mask+=1<<transform[5];else if(key==='seu')mask+=1<<transform[6];else if(key==='neu')mask+=1<<transform[7];});return mask;};var parseChildrenCounts=function parseChildrenCounts(base,parentName,stack){var keys=Object.keys(base);var child;var childName;keys.forEach(function(key){if(key==='n')return;switch(key){case'swd':child=base.swd;childName=parentName+transform[0];break;case'nwd':child=base.nwd;childName=parentName+transform[1];break;case'swu':child=base.swu;childName=parentName+transform[2];break;case'nwu':child=base.nwu;childName=parentName+transform[3];break;case'sed':child=base.sed;childName=parentName+transform[4];break;case'ned':child=base.ned;childName=parentName+transform[5];break;case'seu':child=base.seu;childName=parentName+transform[6];break;case'neu':child=base.neu;childName=parentName+transform[7];break;default:break;}stack.push({children:makeBitMask(child),numPoints:child.n,name:childName});parseChildrenCounts(child,childName,stack);});};// Load hierarchy.
var callback=function callback(node,greyhoundHierarchy){var decoded=[];node.numPoints=greyhoundHierarchy.n;parseChildrenCounts(greyhoundHierarchy,node.name,decoded);var nodes={};nodes[node.name]=node;var pgg=node.pcoGeometry;for(var i=0;i<decoded.length;i++){var name=decoded[i].name;var numPoints=decoded[i].numPoints;var index=parseInt(name.charAt(name.length-1));var parentName=name.substring(0,name.length-1);var parentNode=nodes[parentName];var level=name.length-1;var boundingBox=Potree.GreyhoundLoader.createChildAABB(parentNode.boundingBox,index);var currentNode=new Potree.PointCloudGreyhoundGeometryNode(name,pgg,boundingBox,node.scale,node.offset);currentNode.level=level;currentNode.numPoints=numPoints;currentNode.hasChildren=decoded[i].children>0;currentNode.spacing=pgg.spacing/Math.pow(2,level);parentNode.addChild(currentNode);nodes[name]=currentNode;}node.loadPoints();};if(this.level%this.pcoGeometry.hierarchyStepSize===0){var depthBegin=this.level+this.pcoGeometry.baseDepth;var depthEnd=depthBegin+this.pcoGeometry.hierarchyStepSize+2;var bounds=this.greyhoundBounds;var boundsString=bounds.min.x+','+bounds.min.y+','+bounds.min.z+','+bounds.max.x+','+bounds.max.y+','+bounds.max.z;var hurl=''+this.pcoGeometry.serverURL+'hierarchy?bounds=['+boundsString+']'+'&depthBegin='+depthBegin+'&depthEnd='+depthEnd;if(this.scale){hurl+='&scale='+this.scale;}if(this.greyhoundOffset){var offset=this.greyhoundOffset;hurl+='&offset=['+offset.x+','+offset.y+','+offset.z+']';}var xhr=new XMLHttpRequest();xhr.open('GET',hurl,true);var that=this;xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){var greyhoundHierarchy=JSON.parse(xhr.responseText)||{};callback(that,greyhoundHierarchy);}else{console.log('Failed to load file! HTTP status:',xhr.status,'file:',hurl);}}};try{xhr.send(null);}catch(e){console.log("fehler beim laden der punktwolke: "+e);}}};Potree.PointCloudGreyhoundGeometryNode.prototype.getNumPoints=function(){return this.numPoints;};Potree.PointCloudGreyhoundGeometryNode.prototype.dispose=function(){if(this.geometry&&this.parent!=null){this.geometry.dispose();this.geometry=null;this.loaded=false;//this.dispatchEvent( { type: 'dispose' } );
for(var i=0;i<this.oneTimeDisposeHandlers.length;i++){var handler=this.oneTimeDisposeHandlers[i];handler();}this.oneTimeDisposeHandlers=[];}};//THREE.EventDispatcher.prototype.apply(
//        Potree.PointCloudGreyhoundGeometryNode.prototype);
Object.assign(Potree.PointCloudGreyhoundGeometryNode.prototype,THREE.EventDispatcher.prototype);Potree.utils=function(){function _class4(){_classCallCheck(this,_class4);}_createClass(_class4,null,[{key:"loadShapefileFeatures",value:function loadShapefileFeatures(file,callback){var features=[];var handleFinish=function handleFinish(){callback(features);};shapefile.open(file).then(function(source){source.read().then(function log(result){if(result.done){handleFinish();return;}//console.log(result.value);
if(result.value&&result.value.type==="Feature"&&result.value.geometry!==undefined){features.push(result.value);}return source.read().then(log);});});}},{key:"toString",value:function toString(value){if(value instanceof THREE.Vector3){return value.x.toFixed(2)+", "+value.y.toFixed(2)+", "+value.z.toFixed(2);}else{return""+value+"";}}},{key:"normalizeURL",value:function normalizeURL(url){var u=new URL(url);return u.protocol+"//"+u.hostname+u.pathname.replace(/\/+/g,"/");}},{key:"pathExists",value:function pathExists(url){var req=new XMLHttpRequest();req.open('GET',url,false);req.send(null);if(req.status!==200){return false;}return true;}},{key:"computeTransformedBoundingBox",/**
	 * adapted from mhluska at https://github.com/mrdoob/three.js/issues/1561
	 */value:function computeTransformedBoundingBox(box,transform){var vertices=[new THREE.Vector3(box.min.x,box.min.y,box.min.z).applyMatrix4(transform),new THREE.Vector3(box.min.x,box.min.y,box.min.z).applyMatrix4(transform),new THREE.Vector3(box.max.x,box.min.y,box.min.z).applyMatrix4(transform),new THREE.Vector3(box.min.x,box.max.y,box.min.z).applyMatrix4(transform),new THREE.Vector3(box.min.x,box.min.y,box.max.z).applyMatrix4(transform),new THREE.Vector3(box.min.x,box.max.y,box.max.z).applyMatrix4(transform),new THREE.Vector3(box.max.x,box.max.y,box.min.z).applyMatrix4(transform),new THREE.Vector3(box.max.x,box.min.y,box.max.z).applyMatrix4(transform),new THREE.Vector3(box.max.x,box.max.y,box.max.z).applyMatrix4(transform)];var boundingBox=new THREE.Box3();boundingBox.setFromPoints(vertices);return boundingBox;}},{key:"addCommas",/**
	 * add separators to large numbers
	 * 
	 * @param nStr
	 * @returns
	 */value:function addCommas(nStr){nStr+='';var x=nStr.split('.');var x1=x[0];var x2=x.length>1?'.'+x[1]:'';var rgx=/(\d+)(\d{3})/;while(rgx.test(x1)){x1=x1.replace(rgx,'$1'+','+'$2');}return x1+x2;}},{key:"removeCommas",value:function removeCommas(str){return str.replace(/,/g,"");}/**
	 * create worker from a string
	 *
	 * code from http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string
	 */},{key:"createWorker",value:function createWorker(code){var blob=new Blob([code],{type:'application/javascript'});var worker=new Worker(URL.createObjectURL(blob));return worker;}},{key:"loadSkybox",value:function loadSkybox(path){var camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,100000);camera.up.set(0,0,1);var scene=new THREE.Scene();var format=".jpg";var urls=[path+'px'+format,path+'nx'+format,path+'py'+format,path+'ny'+format,path+'pz'+format,path+'nz'+format];//var materialArray = [];
//for (var i = 0; i < 6; i++){
//	materialArray.push( new THREE.MeshBasicMaterial({
//		map: THREE.ImageUtils.loadTexture( urls[i] ),
//		side: THREE.BackSide,
//		depthTest: false,
//		depthWrite: false
//		})
//	);
//}
var materialArray=[];{var _loop3=function _loop3(_i39){var material=new THREE.MeshBasicMaterial({map:null,side:THREE.BackSide,depthTest:false,depthWrite:false});materialArray.push(material);var loader=new THREE.TextureLoader();loader.load(urls[_i39],function loaded(texture){material.map=texture;material.needsUpdate=true;},function progress(xhr){//console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );
},function error(xhr){console.log('An error happened',xhr);});};for(var _i39=0;_i39<6;_i39++){_loop3(_i39);}}var skyGeometry=new THREE.CubeGeometry(5000,5000,5000);var skybox=new THREE.Mesh(skyGeometry,materialArray);scene.add(skybox);// z up
scene.rotation.x=Math.PI/2;return{"camera":camera,"scene":scene};}},{key:"createGrid",value:function createGrid(width,length,spacing,color){var material=new THREE.LineBasicMaterial({color:color||0x888888});var geometry=new THREE.Geometry();for(var _i40=0;_i40<=length;_i40++){geometry.vertices.push(new THREE.Vector3(-(spacing*width)/2,_i40*spacing-spacing*length/2,0));geometry.vertices.push(new THREE.Vector3(+(spacing*width)/2,_i40*spacing-spacing*length/2,0));}for(var _i41=0;_i41<=width;_i41++){geometry.vertices.push(new THREE.Vector3(_i41*spacing-spacing*width/2,-(spacing*length)/2,0));geometry.vertices.push(new THREE.Vector3(_i41*spacing-spacing*width/2,+(spacing*length)/2,0));}var line=new THREE.LineSegments(geometry,material,THREE.LinePieces);line.receiveShadow=true;return line;}},{key:"createBackgroundTexture",value:function createBackgroundTexture(width,height){function gauss(x,y){return 1/(2*Math.PI)*Math.exp(-(x*x+y*y)/2);};//map.magFilter = THREE.NearestFilter;
var size=width*height;var data=new Uint8Array(3*size);var chroma=[1,1.5,1.7];var max=gauss(0,0);for(var x=0;x<width;x++){for(var y=0;y<height;y++){var u=2*(x/width)-1;var v=2*(y/height)-1;var _i42=x+width*y;var d=gauss(2*u,2*v)/max;var r=(Math.random()+Math.random()+Math.random())/3;r=(d*0.5+0.5)*r*0.03;r=r*0.4;//d = Math.pow(d, 0.6);
data[3*_i42+0]=255*(d/15+0.05+r)*chroma[0];data[3*_i42+1]=255*(d/15+0.05+r)*chroma[1];data[3*_i42+2]=255*(d/15+0.05+r)*chroma[2];}}var texture=new THREE.DataTexture(data,width,height,THREE.RGBFormat);texture.needsUpdate=true;return texture;}},{key:"getMousePointCloudIntersection",value:function getMousePointCloudIntersection(mouse,camera,renderer,pointclouds){var nmouse={x:mouse.x/renderer.domElement.clientWidth*2-1,y:-(mouse.y/renderer.domElement.clientHeight)*2+1};//let vector = new THREE.Vector3( nmouse.x, nmouse.y, 0.5 );
//vector.unproject(camera);
//let direction = vector.sub(camera.position).normalize();
//let ray = new THREE.Ray(camera.position, direction);
var raycaster=new THREE.Raycaster();raycaster.setFromCamera(nmouse,camera);var ray=raycaster.ray;var selectedPointcloud=null;var closestDistance=Infinity;var closestIntersection=null;var closestPoint=null;var _iteratorNormalCompletion36=true;var _didIteratorError36=false;var _iteratorError36=undefined;try{for(var _iterator36=pointclouds[Symbol.iterator](),_step36;!(_iteratorNormalCompletion36=(_step36=_iterator36.next()).done);_iteratorNormalCompletion36=true){var pointcloud=_step36.value;var point=pointcloud.pick(renderer,camera,ray);if(!point){continue;}var distance=camera.position.distanceTo(point.position);if(distance<closestDistance){closestDistance=distance;selectedPointcloud=pointcloud;closestIntersection=point.position;closestPoint=point;}}}catch(err){_didIteratorError36=true;_iteratorError36=err;}finally{try{if(!_iteratorNormalCompletion36&&_iterator36.return){_iterator36.return();}}finally{if(_didIteratorError36){throw _iteratorError36;}}}if(selectedPointcloud){return{location:closestIntersection,distance:closestDistance,pointcloud:selectedPointcloud,point:closestPoint};}else{return null;}}},{key:"pixelsArrayToImage",value:function pixelsArrayToImage(pixels,width,height){var canvas=document.createElement('canvas');canvas.width=width;canvas.height=height;var context=canvas.getContext('2d');pixels=new pixels.constructor(pixels);for(var _i43=0;_i43<pixels.length;_i43++){pixels[_i43*4+3]=255;}var imageData=context.createImageData(width,height);imageData.data.set(pixels);context.putImageData(imageData,0,0);var img=new Image();img.src=canvas.toDataURL();//img.style.transform = "scaleY(-1)";
return img;}},{key:"projectedRadius",value:function projectedRadius(radius,fov,distance,screenHeight){var projFactor=1/Math.tan(fov/2)/distance;projFactor=projFactor*screenHeight/2;return radius*projFactor;}},{key:"topView",value:function topView(camera,node){camera.position.set(0,1,0);camera.rotation.set(-Math.PI/2,0,0);camera.zoomTo(node,1);}},{key:"frontView",value:function frontView(camera,node){camera.position.set(0,0,1);camera.rotation.set(0,0,0);camera.zoomTo(node,1);}},{key:"leftView",value:function leftView(camera,node){camera.position.set(-1,0,0);camera.rotation.set(0,-Math.PI/2,0);camera.zoomTo(node,1);}},{key:"rightView",value:function rightView(camera,node){camera.position.set(1,0,0);camera.rotation.set(0,Math.PI/2,0);camera.zoomTo(node,1);}},{key:"frustumSphereIntersection",/**
	 *  
	 * 0: no intersection
	 * 1: intersection
	 * 2: fully inside
	 */value:function frustumSphereIntersection(frustum,sphere){var planes=frustum.planes;var center=sphere.center;var negRadius=-sphere.radius;var minDistance=Number.MAX_VALUE;for(var _i44=0;_i44<6;_i44++){var distance=planes[_i44].distanceToPoint(center);if(distance<negRadius){return 0;}minDistance=Math.min(minDistance,distance);}return minDistance>=sphere.radius?2:1;}},{key:"generateDataTexture",// code taken from three.js
// ImageUtils - generateDataTexture()
value:function generateDataTexture(width,height,color){var size=width*height;var data=new Uint8Array(3*width*height);var r=Math.floor(color.r*255);var g=Math.floor(color.g*255);var b=Math.floor(color.b*255);for(var _i45=0;_i45<size;_i45++){data[_i45*3]=r;data[_i45*3+1]=g;data[_i45*3+2]=b;}var texture=new THREE.DataTexture(data,width,height,THREE.RGBFormat);texture.needsUpdate=true;texture.magFilter=THREE.NearestFilter;return texture;}},{key:"getParameterByName",// from http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript
value:function getParameterByName(name){name=name.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var regex=new RegExp("[\\?&]"+name+"=([^&#]*)"),results=regex.exec(location.search);return results===null?null:decodeURIComponent(results[1].replace(/\+/g," "));}},{key:"setParameter",value:function setParameter(name,value){//value = encodeURIComponent(value);
name=name.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var regex=new RegExp("([\\?&])("+name+"=([^&#]*))");var results=regex.exec(location.search);var url=window.location.href;if(results===null){if(window.location.search.length===0){url=url+"?";}else{url=url+"&";}url=url+name+"="+value;}else{var newValue=name+"="+value;url=url.replace(results[2],newValue);}window.history.replaceState({},"",url);}}]);return _class4;}();Potree.utils.screenPass=new function(){this.screenScene=new THREE.Scene();this.screenQuad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,0));this.screenQuad.material.depthTest=true;this.screenQuad.material.depthWrite=true;this.screenQuad.material.transparent=true;this.screenScene.add(this.screenQuad);this.camera=new THREE.Camera();this.render=function(renderer,material,target){this.screenQuad.material=material;if(typeof target==="undefined"){renderer.render(this.screenScene,this.camera);}else{renderer.render(this.screenScene,this.camera,target);}};}();Potree.Features=function(){var ftCanvas=document.createElement("canvas");var gl=ftCanvas.getContext("webgl")||ftCanvas.getContext("experimental-webgl");if(gl===null)return null;// -- code taken from THREE.WebGLRenderer --
var _vertexShaderPrecisionHighpFloat=gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_FLOAT);var _vertexShaderPrecisionMediumpFloat=gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.MEDIUM_FLOAT);var _vertexShaderPrecisionLowpFloat=gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.LOW_FLOAT);var _fragmentShaderPrecisionHighpFloat=gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_FLOAT);var _fragmentShaderPrecisionMediumpFloat=gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.MEDIUM_FLOAT);var _fragmentShaderPrecisionLowpFloat=gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.LOW_FLOAT);var highpAvailable=_vertexShaderPrecisionHighpFloat.precision>0&&_fragmentShaderPrecisionHighpFloat.precision>0;var mediumpAvailable=_vertexShaderPrecisionMediumpFloat.precision>0&&_fragmentShaderPrecisionMediumpFloat.precision>0;// -----------------------------------------
var precision;if(highpAvailable){precision="highp";}else if(mediumpAvailable){precision="mediump";}else{precision="lowp";}return{SHADER_INTERPOLATION:{isSupported:function isSupported(){var supported=true;supported=supported&&gl.getExtension("EXT_frag_depth");supported=supported&&gl.getParameter(gl.MAX_VARYING_VECTORS)>=8;return supported;}},SHADER_SPLATS:{isSupported:function isSupported(){var supported=true;supported=supported&&gl.getExtension("EXT_frag_depth");supported=supported&&gl.getExtension("OES_texture_float");supported=supported&&gl.getParameter(gl.MAX_VARYING_VECTORS)>=8;return supported;}},SHADER_EDL:{isSupported:function isSupported(){var supported=true;supported=supported&&gl.getExtension("EXT_frag_depth");supported=supported&&gl.getExtension("OES_texture_float");supported=supported&&gl.getParameter(gl.MAX_VARYING_VECTORS)>=8;return supported;}},precision:precision};}();/**
 * adapted from http://stemkoski.github.io/Three.js/Sprite-Text-Labels.html
 */Potree.TextSprite=function(text){THREE.Object3D.call(this);var scope=this;var texture=new THREE.Texture();texture.minFilter=THREE.LinearFilter;texture.magFilter=THREE.LinearFilter;var spriteMaterial=new THREE.SpriteMaterial({map:texture,//useScreenCoordinates: false,
depthTest:false,depthWrite:false});this.material=spriteMaterial;this.sprite=new THREE.Sprite(spriteMaterial);this.add(this.sprite);//THREE.Sprite.call(this, spriteMaterial);
this.borderThickness=4;this.fontface="Arial";this.fontsize=28;this.borderColor={r:0,g:0,b:0,a:1.0};this.backgroundColor={r:255,g:255,b:255,a:1.0};this.textColor={r:255,g:255,b:255,a:1.0};this.text="";this.setText(text);};Potree.TextSprite.prototype=new THREE.Object3D();Potree.TextSprite.prototype.setText=function(text){if(this.text!==text){this.text=text;this.update();}};Potree.TextSprite.prototype.setTextColor=function(color){this.textColor=color;this.update();};Potree.TextSprite.prototype.setBorderColor=function(color){this.borderColor=color;this.update();};Potree.TextSprite.prototype.setBackgroundColor=function(color){this.backgroundColor=color;this.update();};Potree.TextSprite.prototype.update=function(){var canvas=document.createElement('canvas');var context=canvas.getContext('2d');context.font="Bold "+this.fontsize+"px "+this.fontface;// get size data (height depends only on font size)
var metrics=context.measureText(this.text);var textWidth=metrics.width;var margin=5;var spriteWidth=2*margin+textWidth+2*this.borderThickness;var spriteHeight=this.fontsize*1.4+2*this.borderThickness;var canvas=document.createElement('canvas');var context=canvas.getContext('2d');context.canvas.width=spriteWidth;context.canvas.height=spriteHeight;context.font="Bold "+this.fontsize+"px "+this.fontface;// background color
context.fillStyle="rgba("+this.backgroundColor.r+","+this.backgroundColor.g+","+this.backgroundColor.b+","+this.backgroundColor.a+")";// border color
context.strokeStyle="rgba("+this.borderColor.r+","+this.borderColor.g+","+this.borderColor.b+","+this.borderColor.a+")";context.lineWidth=this.borderThickness;this.roundRect(context,this.borderThickness/2,this.borderThickness/2,textWidth+this.borderThickness+2*margin,this.fontsize*1.4+this.borderThickness,6);// text color
context.strokeStyle="rgba(0, 0, 0, 1.0)";context.strokeText(this.text,this.borderThickness+margin,this.fontsize+this.borderThickness);context.fillStyle="rgba("+this.textColor.r+","+this.textColor.g+","+this.textColor.b+","+this.textColor.a+")";context.fillText(this.text,this.borderThickness+margin,this.fontsize+this.borderThickness);var texture=new THREE.Texture(canvas);texture.minFilter=THREE.LinearFilter;texture.magFilter=THREE.LinearFilter;texture.needsUpdate=true;//var spriteMaterial = new THREE.SpriteMaterial( 
//	{ map: texture, useScreenCoordinates: false } );
this.sprite.material.map=texture;this.sprite.scale.set(spriteWidth*0.01,spriteHeight*0.01,1.0);//this.material = spriteMaterial;						  
};Potree.TextSprite.prototype.roundRect=function(ctx,x,y,w,h,r){ctx.beginPath();ctx.moveTo(x+r,y);ctx.lineTo(x+w-r,y);ctx.quadraticCurveTo(x+w,y,x+w,y+r);ctx.lineTo(x+w,y+h-r);ctx.quadraticCurveTo(x+w,y+h,x+w-r,y+h);ctx.lineTo(x+r,y+h);ctx.quadraticCurveTo(x,y+h,x,y+h-r);ctx.lineTo(x,y+r);ctx.quadraticCurveTo(x,y,x+r,y);ctx.closePath();ctx.fill();ctx.stroke();};// 
// TODO 
// 
// - option to look along path during animation
// - 
// 
Potree.AnimationPath=function(){function _class5(){var points=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_classCallCheck(this,_class5);this.points=points;this.spline=new THREE.Spline(points);this.spline.reparametrizeByArcLength(1/this.spline.getLength().total);this.tween=null;}_createClass(_class5,[{key:"get",value:function get(t){return this.spline.getPoint(t);}},{key:"animate",value:function animate(){var _this24=this;var metersPerSecond=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;stop();var length=this.spline.getLength().total;var animationDuration=1000*length/metersPerSecond;var progress={t:0};this.tween=new TWEEN.Tween(progress).to({t:1},animationDuration);this.tween.easing(TWEEN.Easing.Linear.None);this.tween.onUpdate(function(e){viewer.scene.view.position.copy(_this24.spline.getPoint(progress.t));});this.tween.start();}},{key:"stop",value:function stop(){if(this.tween){this.tween.stop();}}},{key:"resume",value:function resume(){if(this.tween){this.tween.start();}}},{key:"getGeometry",value:function getGeometry(){var geometry=new THREE.Geometry();var samples=100;var i=0;for(var u=0;u<=1;u+=1/samples){var position=this.spline.getPoint(u);geometry.vertices[i]=new THREE.Vector3(position.x,position.y,position.z);i++;}return geometry;//let material = new THREE.LineBasicMaterial( { color: 0xffffff, opacity: 1, linewidth: 2 } );
//let line = new THREE.Line(geometry, material);
//viewer.scene.scene.add(line);
}}]);return _class5;}();//let target = new THREE.Vector3(589854.34, 231411.19, 692.77)
//let points = [
//	new THREE.Vector3(589815.52, 231738.31, 959.48 ),
//	new THREE.Vector3(589604.73, 231615.00, 968.10 ),
//	new THREE.Vector3(589579.11, 231354.41, 1010.06),
//	new THREE.Vector3(589723.00, 231169.95, 1015.57),
//	new THREE.Vector3(589960.76, 231116.87, 978.60 ),
//	new THREE.Vector3(590139.29, 231268.71, 972.33 )
//]
//
//let path = new Potree.AnimationPath(points);
Potree.Version=function(version){this.version=version;var vmLength=version.indexOf(".")===-1?version.length:version.indexOf(".");this.versionMajor=parseInt(version.substr(0,vmLength));this.versionMinor=parseInt(version.substr(vmLength+1));if(this.versionMinor.length===0){this.versionMinor=0;}};Potree.Version.prototype.newerThan=function(version){var v=new Potree.Version(version);if(this.versionMajor>v.versionMajor){return true;}else if(this.versionMajor===v.versionMajor&&this.versionMinor>v.versionMinor){return true;}else{return false;}};Potree.Version.prototype.equalOrHigher=function(version){var v=new Potree.Version(version);if(this.versionMajor>v.versionMajor){return true;}else if(this.versionMajor===v.versionMajor&&this.versionMinor>=v.versionMinor){return true;}else{return false;}};Potree.Version.prototype.upTo=function(version){return!this.newerThan(version);};Potree.Measure=function(_THREE$Object3D2){_inherits(Measure,_THREE$Object3D2);function Measure(){_classCallCheck(this,Measure);var _this25=_possibleConstructorReturn(this,(Measure.__proto__||Object.getPrototypeOf(Measure)).call(this));_this25.constructor.counter=_this25.constructor.counter===undefined?0:_this25.constructor.counter+1;_this25.name="Measure_"+_this25.constructor.counter;_this25.points=[];_this25._showDistances=true;_this25._showCoordinates=false;_this25._showArea=false;_this25._closed=true;_this25._showAngles=false;_this25._showHeight=false;_this25.maxMarkers=Number.MAX_SAFE_INTEGER;_this25.sphereGeometry=new THREE.SphereGeometry(0.4,10,10);_this25.color=new THREE.Color(0xff0000);_this25.lengthUnit={code:"m"};_this25.spheres=[];_this25.edges=[];_this25.sphereLabels=[];_this25.edgeLabels=[];_this25.angleLabels=[];_this25.coordinateLabels=[];_this25.heightEdge;_this25.heightLabel;{// height stuff
{// height line
var lineGeometry=new THREE.Geometry();lineGeometry.vertices.push(new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3());lineGeometry.colors.push(_this25.color,_this25.color,_this25.color);var lineMaterial=new THREE.LineDashedMaterial({color:0xff0000,dashSize:5,gapSize:2});lineMaterial.depthTest=false;_this25.heightEdge=new THREE.Line(lineGeometry,lineMaterial);_this25.heightEdge.visible=false;_this25.add(_this25.heightEdge);}{// height label
_this25.heightLabel=new Potree.TextSprite("");_this25.heightLabel.setBorderColor({r:0,g:0,b:0,a:0.8});_this25.heightLabel.setBackgroundColor({r:0,g:0,b:0,a:0.3});_this25.heightLabel.setTextColor({r:180,g:220,b:180,a:1.0});_this25.heightLabel.material.depthTest=false;_this25.heightLabel.material.opacity=1;_this25.heightLabel.visible=false;;_this25.add(_this25.heightLabel);}}_this25.areaLabel=new Potree.TextSprite("");_this25.areaLabel.setBorderColor({r:0,g:0,b:0,a:0.8});_this25.areaLabel.setBackgroundColor({r:0,g:0,b:0,a:0.3});_this25.areaLabel.setTextColor({r:180,g:220,b:180,a:1.0});_this25.areaLabel.material.depthTest=false;_this25.areaLabel.material.opacity=1;_this25.areaLabel.visible=false;;_this25.add(_this25.areaLabel);return _this25;}_createClass(Measure,[{key:"createSphereMaterial",value:function createSphereMaterial(){var sphereMaterial=new THREE.MeshLambertMaterial({shading:THREE.SmoothShading,color:this.color,depthTest:false,depthWrite:false});return sphereMaterial;}},{key:"addMarker",value:function addMarker(point){var _this26=this;if(point instanceof THREE.Vector3){point={position:point};}this.points.push(point);// sphere
var sphere=new THREE.Mesh(this.sphereGeometry,this.createSphereMaterial());this.add(sphere);this.spheres.push(sphere);{// edges
var lineGeometry=new THREE.Geometry();lineGeometry.vertices.push(new THREE.Vector3(),new THREE.Vector3());lineGeometry.colors.push(this.color,this.color,this.color);var lineMaterial=new THREE.LineBasicMaterial({linewidth:1});lineMaterial.depthTest=false;var edge=new THREE.Line(lineGeometry,lineMaterial);edge.visible=true;this.add(edge);this.edges.push(edge);}{// edge labels
var edgeLabel=new Potree.TextSprite();edgeLabel.setBorderColor({r:0,g:0,b:0,a:0.8});edgeLabel.setBackgroundColor({r:0,g:0,b:0,a:0.3});edgeLabel.material.depthTest=false;edgeLabel.visible=false;this.edgeLabels.push(edgeLabel);this.add(edgeLabel);}{// angle labels
var angleLabel=new Potree.TextSprite();angleLabel.setBorderColor({r:0,g:0,b:0,a:0.8});angleLabel.setBackgroundColor({r:0,g:0,b:0,a:0.3});angleLabel.material.depthTest=false;angleLabel.material.opacity=1;angleLabel.visible=false;this.angleLabels.push(angleLabel);this.add(angleLabel);}{// coordinate labels
var coordinateLabel=new Potree.TextSprite();coordinateLabel.setBorderColor({r:0,g:0,b:0,a:0.8});coordinateLabel.setBackgroundColor({r:0,g:0,b:0,a:0.3});coordinateLabel.material.depthTest=false;coordinateLabel.material.opacity=1;coordinateLabel.visible=false;this.coordinateLabels.push(coordinateLabel);this.add(coordinateLabel);}{// Event Listeners
var drag=function drag(e){var I=Potree.utils.getMousePointCloudIntersection(e.drag.end,e.viewer.scene.camera,e.viewer.renderer,e.viewer.scene.pointclouds);if(I){var _i46=_this26.spheres.indexOf(e.drag.object);if(_i46!==-1){var _point=_this26.points[_i46];var _iteratorNormalCompletion37=true;var _didIteratorError37=false;var _iteratorError37=undefined;try{for(var _iterator37=Object.keys(I.point).filter(function(e){return e!=="position";})[Symbol.iterator](),_step37;!(_iteratorNormalCompletion37=(_step37=_iterator37.next()).done);_iteratorNormalCompletion37=true){var key=_step37.value;_point[key]=I.point[key];}}catch(err){_didIteratorError37=true;_iteratorError37=err;}finally{try{if(!_iteratorNormalCompletion37&&_iterator37.return){_iterator37.return();}}finally{if(_didIteratorError37){throw _iteratorError37;}}}_this26.setPosition(_i46,I.location);}}};var drop=function drop(e){var i=_this26.spheres.indexOf(e.drag.object);if(i!==-1){_this26.dispatchEvent({"type":"marker_dropped","measurement":_this26,"index":i});}};var mouseover=function mouseover(e){return e.object.material.emissive.setHex(0x888888);};var mouseleave=function mouseleave(e){return e.object.material.emissive.setHex(0x000000);};sphere.addEventListener("drag",drag);sphere.addEventListener("drop",drop);sphere.addEventListener("mouseover",mouseover);sphere.addEventListener("mouseleave",mouseleave);}var event={type:"marker_added",measurement:this,sphere:sphere};this.dispatchEvent(event);this.setMarker(this.points.length-1,point);}},{key:"removeMarker",value:function removeMarker(index){this.points.splice(index,1);this.remove(this.spheres[index]);var edgeIndex=index===0?0:index-1;this.remove(this.edges[edgeIndex]);this.edges.splice(edgeIndex,1);this.remove(this.edgeLabels[edgeIndex]);this.edgeLabels.splice(edgeIndex,1);this.coordinateLabels.splice(index,1);this.spheres.splice(index,1);this.update();this.dispatchEvent({type:"marker_removed",measurement:this});}},{key:"setMarker",value:function setMarker(index,point){this.points[index]=point;var event={type:'marker_moved',measure:this,index:index,position:point.position.clone()};this.dispatchEvent(event);this.update();}},{key:"setPosition",value:function setPosition(index,position){var point=this.points[index];point.position.copy(position);var event={type:'marker_moved',measure:this,index:index,position:position.clone()};this.dispatchEvent(event);this.update();}},{key:"getArea",value:function getArea(){var area=0;var j=this.points.length-1;for(var _i47=0;_i47<this.points.length;_i47++){var p1=this.points[_i47].position;var p2=this.points[j].position;area+=(p2.x+p1.x)*(p1.y-p2.y);j=_i47;}return Math.abs(area/2);}},{key:"getTotalDistance",value:function getTotalDistance(){if(this.points.length===0){return 0;}var distance=0;for(var _i48=1;_i48<this.points.length;_i48++){var prev=this.points[_i48-1].position;var curr=this.points[_i48].position;var d=prev.distanceTo(curr);distance+=d;}if(this.closed&&this.points.length>1){var first=this.points[0].position;var last=this.points[this.points.length-1].position;var _d=last.distanceTo(first);distance+=_d;}return distance;}},{key:"getAngleBetweenLines",value:function getAngleBetweenLines(cornerPoint,point1,point2){var v1=new THREE.Vector3().subVectors(point1.position,cornerPoint.position);var v2=new THREE.Vector3().subVectors(point2.position,cornerPoint.position);return v1.angleTo(v2);}},{key:"getAngle",value:function getAngle(index){if(this.points.length<3||index>=this.points.length){return 0;}var previous=index===0?this.points[this.points.length-1]:this.points[index-1];var point=this.points[index];var next=this.points[(index+1)%this.points.length];return this.getAngleBetweenLines(point,previous,next);}},{key:"update",value:function update(){if(this.points.length===0){return;}else if(this.points.length===1){var point=this.points[0];var position=point.position;this.spheres[0].position.copy(position);{// coordinate labels
var coordinateLabel=this.coordinateLabels[0];var labelPos=position.clone().add(new THREE.Vector3(0,1,0));coordinateLabel.position.copy(labelPos);/*let msg = Potree.utils.addCommas(position.x.toFixed(2)) 
					+ " / " + Potree.utils.addCommas(position.y.toFixed(2)) 
					+ " / " + Potree.utils.addCommas(position.z.toFixed(2));*/var msg=Potree.utils.addCommas(position.z.toFixed(2)+" "+this.lengthUnit.code);coordinateLabel.setText(msg);coordinateLabel.visible=this.showCoordinates;}return;}var lastIndex=this.points.length-1;var centroid=new THREE.Vector3();for(var _i49=0;_i49<=lastIndex;_i49++){var _point2=this.points[_i49];centroid.add(_point2.position);}centroid.divideScalar(this.points.length);for(var _i50=0;_i50<=lastIndex;_i50++){var index=_i50;var nextIndex=_i50+1>lastIndex?0:_i50+1;var previousIndex=_i50===0?lastIndex:_i50-1;var _point3=this.points[index];var nextPoint=this.points[nextIndex];var previousPoint=this.points[previousIndex];var sphere=this.spheres[index];// spheres
sphere.position.copy(_point3.position);sphere.material.color=this.color;{// edges
var edge=this.edges[index];edge.material.color=this.color;edge.position.copy(_point3.position);edge.geometry.vertices[0].set(0,0,0);edge.geometry.vertices[1].copy(nextPoint.position).sub(_point3.position);edge.geometry.verticesNeedUpdate=true;edge.geometry.computeBoundingSphere();edge.visible=index<lastIndex||this.closed;}{// edge labels
var edgeLabel=this.edgeLabels[_i50];var center=new THREE.Vector3().add(_point3.position);center.add(nextPoint.position);center=center.multiplyScalar(0.5);var distance=_point3.position.distanceTo(nextPoint.position);edgeLabel.position.copy(center);edgeLabel.setText(Potree.utils.addCommas(distance.toFixed(2))+" "+this.lengthUnit.code);edgeLabel.visible=this.showDistances&&(index<lastIndex||this.closed)&&this.points.length>=2&&distance>0;}{// angle labels
var angleLabel=this.angleLabels[_i50];var angle=this.getAngleBetweenLines(_point3,previousPoint,nextPoint);var dir=nextPoint.position.clone().sub(previousPoint.position);dir.multiplyScalar(0.5);dir=previousPoint.position.clone().add(dir).sub(_point3.position).normalize();var dist=Math.min(_point3.position.distanceTo(previousPoint.position),_point3.position.distanceTo(nextPoint.position));dist=dist/9;var _labelPos=_point3.position.clone().add(dir.multiplyScalar(dist));angleLabel.position.copy(_labelPos);var _msg=Potree.utils.addCommas((angle*(180.0/Math.PI)).toFixed(1))+"\xB0";angleLabel.setText(_msg);angleLabel.visible=this.showAngles&&(index<lastIndex||this.closed)&&this.points.length>=3&&angle>0;}{// coordinate labels
var _coordinateLabel=this.coordinateLabels[0];var _labelPos2=_point3.position.clone().add(new THREE.Vector3(0,1,0));_coordinateLabel.position.copy(_labelPos2);/*let msg = Potree.utils.addCommas(point.position.x.toFixed(2)) 
					+ " / " + Potree.utils.addCommas(point.position.y.toFixed(2)) 
					+ " / " + Potree.utils.addCommas(point.position.z.toFixed(2));*/var _msg2=Potree.utils.addCommas(_point3.position.z.toFixed(2)+" "+this.lengthUnit.code);_coordinateLabel.setText(_msg2);//coordinateLabel.visible = this.showCoordinates && (index < lastIndex || this.closed);
_coordinateLabel.visible=this.showCoordinates;}}{// update height stuff
var heightEdge=this.heightEdge;heightEdge.visible=this.showHeight;this.heightLabel.visible=this.showHeight;if(this.showHeight){var sorted=this.points.slice().sort(function(a,b){return a.position.z-b.position.z;});var lowPoint=sorted[0].position.clone();var highPoint=sorted[sorted.length-1].position.clone();var min=lowPoint.z;var max=highPoint.z;var height=max-min;var start=new THREE.Vector3(highPoint.x,highPoint.y,min);var end=new THREE.Vector3(highPoint.x,highPoint.y,max);heightEdge.position.copy(lowPoint);heightEdge.geometry.vertices[0].set(0,0,0);heightEdge.geometry.vertices[1].copy(start).sub(lowPoint);heightEdge.geometry.vertices[2].copy(start).sub(lowPoint);heightEdge.geometry.vertices[3].copy(end).sub(lowPoint);heightEdge.geometry.verticesNeedUpdate=true;//heightEdge.geometry.computeLineDistances();
//heightEdge.geometry.lineDistancesNeedUpdate = true;
heightEdge.geometry.computeBoundingSphere();//heightEdge.material.dashSize = height / 40;
//heightEdge.material.gapSize = height / 40;
var heightLabelPosition=start.clone().add(end).multiplyScalar(0.5);this.heightLabel.position.copy(heightLabelPosition);var _msg3=Potree.utils.addCommas(height.toFixed(2))+" "+this.lengthUnit.code;this.heightLabel.setText(_msg3);}}{// update area label
this.areaLabel.position.copy(centroid);this.areaLabel.visible=this.showArea&&this.points.length>=3;var _msg4=Potree.utils.addCommas(this.getArea().toFixed(1))+" "+this.lengthUnit.code+"\xB2";this.areaLabel.setText(_msg4);}}},{key:"raycast",value:function raycast(raycaster,intersects){for(var _i51=0;_i51<this.points.length;_i51++){var sphere=this.spheres[_i51];sphere.raycast(raycaster,intersects);}// recalculate distances because they are not necessarely correct
// for scaled objects.
// see https://github.com/mrdoob/three.js/issues/5827
// TODO: remove this once the bug has been fixed
for(var _i52=0;_i52<intersects.length;_i52++){var I=intersects[_i52];I.distance=raycaster.ray.origin.distanceTo(I.point);}intersects.sort(function(a,b){return a.distance-b.distance;});}},{key:"showCoordinates",get:function get(){return this._showCoordinates;},set:function set(value){this._showCoordinates=value;this.update();}},{key:"showAngles",get:function get(){return this._showAngles;},set:function set(value){this._showAngles=value;this.update();}},{key:"showHeight",get:function get(){return this._showHeight;},set:function set(value){this._showHeight=value;this.update();}},{key:"showArea",get:function get(){return this._showArea;},set:function set(value){this._showArea=value;this.update();}},{key:"closed",get:function get(){return this._closed;},set:function set(value){this._closed=value;this.update();}},{key:"showDistances",get:function get(){return this._showDistances;},set:function set(value){this._showDistances=value;this.update();}}]);return Measure;}(THREE.Object3D);Potree.MeasuringTool=function(_THREE$EventDispatche7){_inherits(MeasuringTool,_THREE$EventDispatche7);function MeasuringTool(viewer){_classCallCheck(this,MeasuringTool);var _this27=_possibleConstructorReturn(this,(MeasuringTool.__proto__||Object.getPrototypeOf(MeasuringTool)).call(this));_this27.viewer=viewer;_this27.renderer=viewer.renderer;_this27.addEventListener("start_inserting_measurement",function(e){_this27.viewer.dispatchEvent({type:"cancel_insertions"});});_this27.sceneMeasurement=new THREE.Scene();_this27.sceneMeasurement.name="scene_measurement";_this27.light=new THREE.PointLight(0xffffff,1.0);_this27.sceneMeasurement.add(_this27.light);_this27.viewer.inputHandler.registerInteractiveScene(_this27.sceneMeasurement);_this27.onRemove=function(e){_this27.sceneMeasurement.remove(e.measurement);};_this27.onAdd=function(e){_this27.sceneMeasurement.add(e.measurement);};return _this27;}_createClass(MeasuringTool,[{key:"setScene",value:function setScene(scene){if(this.scene===scene){return;}if(this.scene){this.scene.removeEventListener("measurement_added",this.onAdd);this.scene.removeEventListener("measurement_removed",this.onRemove);}this.scene=scene;this.scene.addEventListener("measurement_added",this.onAdd);this.scene.addEventListener("measurement_removed",this.onRemove);}},{key:"startInsertion",value:function startInsertion(){var _this28=this;var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var domElement=this.viewer.renderer.domElement;var measure=new Potree.Measure();this.dispatchEvent({type:"start_inserting_measurement",measure:measure});measure.showDistances=args.showDistances==null?true:args.showDistances;measure.showArea=args.showArea||false;measure.showAngles=args.showAngles||false;measure.showCoordinates=args.showCoordinates||false;measure.showHeight=args.showHeight||false;measure.closed=args.closed||false;measure.maxMarkers=args.maxMarkers||Infinity;measure.name=args.name||"Measurement";this.sceneMeasurement.add(measure);var cancel={removeLastMarker:measure.maxMarkers>3,callback:null};var insertionCallback=function insertionCallback(e){if(e.button===THREE.MOUSE.LEFT){measure.addMarker(measure.points[measure.points.length-1].position.clone());if(measure.points.length>=measure.maxMarkers){cancel.callback();}_this28.viewer.inputHandler.startDragging(measure.spheres[measure.spheres.length-1]);}else if(e.button===THREE.MOUSE.RIGHT){cancel.callback();}};cancel.callback=function(e){if(cancel.removeLastMarker){measure.removeMarker(measure.points.length-1);}domElement.removeEventListener("mouseup",insertionCallback,true);_this28.viewer.removeEventListener("cancel_insertions",cancel.callback);};if(measure.maxMarkers>1){this.viewer.addEventListener("cancel_insertions",cancel.callback);domElement.addEventListener("mouseup",insertionCallback,true);}measure.addMarker(new THREE.Vector3(0,0,0));this.viewer.inputHandler.startDragging(measure.spheres[measure.spheres.length-1]);this.viewer.scene.addMeasurement(measure);}},{key:"update",value:function update(){var camera=this.viewer.scene.camera;var domElement=this.renderer.domElement;var measurements=this.viewer.scene.measurements;this.light.position.copy(camera.position);// make size independant of distance
var _iteratorNormalCompletion38=true;var _didIteratorError38=false;var _iteratorError38=undefined;try{for(var _iterator38=measurements[Symbol.iterator](),_step38;!(_iteratorNormalCompletion38=(_step38=_iterator38.next()).done);_iteratorNormalCompletion38=true){var measure=_step38.value;measure.lengthUnit=this.viewer.lengthUnit;measure.update();// spheres
var _iteratorNormalCompletion39=true;var _didIteratorError39=false;var _iteratorError39=undefined;try{for(var _iterator39=measure.spheres[Symbol.iterator](),_step39;!(_iteratorNormalCompletion39=(_step39=_iterator39.next()).done);_iteratorNormalCompletion39=true){var sphere=_step39.value;var distance=camera.position.distanceTo(sphere.getWorldPosition());var pr=Potree.utils.projectedRadius(1,camera.fov*Math.PI/180,distance,domElement.clientHeight);var scale=15/pr;sphere.scale.set(scale,scale,scale);}// labels
}catch(err){_didIteratorError39=true;_iteratorError39=err;}finally{try{if(!_iteratorNormalCompletion39&&_iterator39.return){_iterator39.return();}}finally{if(_didIteratorError39){throw _iteratorError39;}}}var labels=measure.edgeLabels.concat(measure.angleLabels);var _iteratorNormalCompletion40=true;var _didIteratorError40=false;var _iteratorError40=undefined;try{for(var _iterator40=labels[Symbol.iterator](),_step40;!(_iteratorNormalCompletion40=(_step40=_iterator40.next()).done);_iteratorNormalCompletion40=true){var label=_step40.value;var distance=camera.position.distanceTo(label.getWorldPosition());var pr=Potree.utils.projectedRadius(1,camera.fov*Math.PI/180,distance,domElement.clientHeight);var scale=70/pr;label.scale.set(scale,scale,scale);}// coordinate labels
}catch(err){_didIteratorError40=true;_iteratorError40=err;}finally{try{if(!_iteratorNormalCompletion40&&_iterator40.return){_iterator40.return();}}finally{if(_didIteratorError40){throw _iteratorError40;}}}for(var _j13=0;_j13<measure.coordinateLabels.length;_j13++){var _label=measure.coordinateLabels[_j13];var _sphere=measure.spheres[_j13];var point=measure.points[_j13];var distance=camera.position.distanceTo(_sphere.getWorldPosition());var screenPos=_sphere.getWorldPosition().clone().project(camera);screenPos.x=Math.round((screenPos.x+1)*domElement.clientWidth/2),screenPos.y=Math.round((-screenPos.y+1)*domElement.clientHeight/2);screenPos.z=0;screenPos.y-=30;var labelPos=new THREE.Vector3(screenPos.x/domElement.clientWidth*2-1,-(screenPos.y/domElement.clientHeight)*2+1,0.5);labelPos.unproject(camera);var direction=labelPos.sub(camera.position).normalize();labelPos=new THREE.Vector3().addVectors(camera.position,direction.multiplyScalar(distance));_label.position.copy(labelPos);var pr=Potree.utils.projectedRadius(1,camera.fov*Math.PI/180,distance,domElement.clientHeight);var scale=70/pr;_label.scale.set(scale,scale,scale);}// height label
if(measure.showHeight){var _label2=measure.heightLabel;{var _distance3=_label2.position.distanceTo(camera.position);var _pr=Potree.utils.projectedRadius(1,camera.fov*Math.PI/180,_distance3,domElement.clientHeight);var _scale=70/_pr;_label2.scale.set(_scale,_scale,_scale);}{// height edge
var edge=measure.heightEdge;var lowpoint=edge.geometry.vertices[0].clone().add(edge.position);var start=edge.geometry.vertices[2].clone().add(edge.position);var end=edge.geometry.vertices[3].clone().add(edge.position);var lowScreen=lowpoint.clone().project(camera);var startScreen=start.clone().project(camera);var endScreen=end.clone().project(camera);var toPixelCoordinates=function toPixelCoordinates(v){var r=v.clone().addScalar(1).divideScalar(2);r.x=r.x*domElement.clientWidth;r.y=r.y*domElement.clientHeight;r.z=0;return r;};var lowEL=toPixelCoordinates(lowScreen);var startEL=toPixelCoordinates(startScreen);var endEL=toPixelCoordinates(endScreen);var distances=[0,lowEL.distanceTo(startEL),startEL.distanceTo(endEL),0];var lToS=lowEL.distanceTo(startEL);var sToE=startEL.distanceTo(endEL);edge.geometry.lineDistances=[0,lToS,lToS,lToS+sToE];edge.geometry.lineDistancesNeedUpdate=true;edge.material.dashSize=10;edge.material.gapSize=10;}}{// area label
var _label3=measure.areaLabel;var _distance4=_label3.position.distanceTo(camera.position);var _pr2=Potree.utils.projectedRadius(1,camera.fov*Math.PI/180,_distance4,domElement.clientHeight);var _scale2=70/_pr2;_label3.scale.set(_scale2,_scale2,_scale2);}}}catch(err){_didIteratorError38=true;_iteratorError38=err;}finally{try{if(!_iteratorNormalCompletion38&&_iterator38.return){_iterator38.return();}}finally{if(_didIteratorError38){throw _iteratorError38;}}}}}]);return MeasuringTool;}(THREE.EventDispatcher);Potree.Profile=function(_THREE$Object3D3){_inherits(_class6,_THREE$Object3D3);function _class6(){_classCallCheck(this,_class6);var _this29=_possibleConstructorReturn(this,(_class6.__proto__||Object.getPrototypeOf(_class6)).call(this));_this29.constructor.counter=_this29.constructor.counter===undefined?0:_this29.constructor.counter+1;_this29.name="Profile_"+_this29.constructor.counter;_this29.points=[];_this29.spheres=[];_this29.edges=[];_this29.boxes=[];_this29.width=1;_this29.height=20;_this29._modifiable=true;_this29.sphereGeometry=new THREE.SphereGeometry(0.4,10,10);_this29.color=new THREE.Color(0xff0000);_this29.lineColor=new THREE.Color(0xff0000);return _this29;}_createClass(_class6,[{key:"createSphereMaterial",value:function createSphereMaterial(){var sphereMaterial=new THREE.MeshLambertMaterial({shading:THREE.SmoothShading,color:0xff0000,depthTest:false,depthWrite:false});return sphereMaterial;}},{key:"getSegments",value:function getSegments(){var segments=[];for(var _i53=0;_i53<this.points.length-1;_i53++){var start=this.points[_i53].clone();var end=this.points[_i53+1].clone();segments.push({start:start,end:end});}return segments;}},{key:"getSegmentMatrices",value:function getSegmentMatrices(){var segments=this.getSegments();var matrices=[];var _iteratorNormalCompletion41=true;var _didIteratorError41=false;var _iteratorError41=undefined;try{for(var _iterator41=segments[Symbol.iterator](),_step41;!(_iteratorNormalCompletion41=(_step41=_iterator41.next()).done);_iteratorNormalCompletion41=true){var segment=_step41.value;var start=segment.start,end=segment.end;var box=new THREE.Object3D();var length=start.clone().setZ(0).distanceTo(end.clone().setZ(0));box.scale.set(length,10000,this.width);box.up.set(0,0,1);var center=new THREE.Vector3().addVectors(start,end).multiplyScalar(0.5);var diff=new THREE.Vector3().subVectors(end,start);var target=new THREE.Vector3(diff.y,-diff.x,0);box.position.set(0,0,0);box.lookAt(target);box.position.copy(center);box.updateMatrixWorld();matrices.push(box.matrixWorld);}}catch(err){_didIteratorError41=true;_iteratorError41=err;}finally{try{if(!_iteratorNormalCompletion41&&_iterator41.return){_iterator41.return();}}finally{if(_didIteratorError41){throw _iteratorError41;}}}return matrices;}},{key:"addMarker",value:function addMarker(point){var _this30=this;this.points.push(point);var sphere=new THREE.Mesh(this.sphereGeometry,this.createSphereMaterial());this.add(sphere);this.spheres.push(sphere);// edges & boxes
if(this.points.length>1){var lineGeometry=new THREE.Geometry();lineGeometry.vertices.push(new THREE.Vector3(),new THREE.Vector3());lineGeometry.colors.push(this.lineColor,this.lineColor,this.lineColor);var lineMaterial=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,linewidth:2,transparent:true,opacity:0.4});lineMaterial.depthTest=false;var edge=new THREE.Line(lineGeometry,lineMaterial);edge.visible=false;this.add(edge);this.edges.push(edge);var boxGeometry=new THREE.BoxGeometry(1,1,1);var boxMaterial=new THREE.MeshBasicMaterial({color:0xff0000,transparent:true,opacity:0.2});var box=new THREE.Mesh(boxGeometry,boxMaterial);box.visible=false;this.add(box);this.boxes.push(box);}{// event listeners
var drag=function drag(e){var I=Potree.utils.getMousePointCloudIntersection(e.drag.end,e.viewer.scene.camera,e.viewer.renderer,e.viewer.scene.pointclouds);if(I){var _i54=_this30.spheres.indexOf(e.drag.object);if(_i54!==-1){_this30.setPosition(_i54,I.location);_this30.dispatchEvent({"type":"marker_moved","profile":_this30,"index":_i54});}}};var drop=function drop(e){var i=_this30.spheres.indexOf(e.drag.object);if(i!==-1){_this30.dispatchEvent({"type":"marker_dropped","profile":_this30,"index":i});}};var mouseover=function mouseover(e){return e.object.material.emissive.setHex(0x888888);};var mouseleave=function mouseleave(e){return e.object.material.emissive.setHex(0x000000);};sphere.addEventListener("drag",drag);sphere.addEventListener("drop",drop);sphere.addEventListener("mouseover",mouseover);sphere.addEventListener("mouseleave",mouseleave);}var event={type:"marker_added",profile:this,sphere:sphere};this.dispatchEvent(event);this.setPosition(this.points.length-1,point);}},{key:"removeMarker",value:function removeMarker(index){this.points.splice(index,1);this.remove(this.spheres[index]);var edgeIndex=index===0?0:index-1;this.remove(this.edges[edgeIndex]);this.edges.splice(edgeIndex,1);this.remove(this.boxes[edgeIndex]);this.boxes.splice(edgeIndex,1);this.spheres.splice(index,1);this.update();this.dispatchEvent({"type":"marker_removed","profile":this});}},{key:"setPosition",value:function setPosition(index,position){var point=this.points[index];point.copy(position);var event={type:'marker_moved',profile:this,index:index,position:point.clone()};this.dispatchEvent(event);this.update();}},{key:"setWidth",value:function setWidth(width){this.width=width;var event={type:'width_changed',profile:this,width:width};this.dispatchEvent(event);this.update();}},{key:"getWidth",value:function getWidth(){return this.width;}},{key:"update",value:function update(){if(this.points.length===0){return;}else if(this.points.length===1){var point=this.points[0];this.spheres[0].position.copy(point);return;}var min=this.points[0].clone();var max=this.points[0].clone();var centroid=new THREE.Vector3();var lastIndex=this.points.length-1;for(var i=0;i<=lastIndex;i++){var _point4=this.points[i];var sphere=this.spheres[i];var leftIndex=i===0?lastIndex:i-1;var rightIndex=i===lastIndex?0:i+1;var leftVertex=this.points[leftIndex];var rightVertex=this.points[rightIndex];var leftEdge=this.edges[leftIndex];var rightEdge=this.edges[i];var leftBox=this.boxes[leftIndex];var rightBox=this.boxes[i];var leftEdgeLength=_point4.distanceTo(leftVertex);var rightEdgeLength=_point4.distanceTo(rightVertex);var leftEdgeCenter=new THREE.Vector3().addVectors(leftVertex,_point4).multiplyScalar(0.5);var rightEdgeCenter=new THREE.Vector3().addVectors(_point4,rightVertex).multiplyScalar(0.5);sphere.position.copy(_point4);if(this._modifiable){sphere.visible=true;}else{sphere.visible=false;}if(leftEdge){leftEdge.geometry.vertices[1].copy(_point4);leftEdge.geometry.verticesNeedUpdate=true;leftEdge.geometry.computeBoundingSphere();}if(rightEdge){rightEdge.geometry.vertices[0].copy(_point4);rightEdge.geometry.verticesNeedUpdate=true;rightEdge.geometry.computeBoundingSphere();}if(leftBox){var start=leftVertex;var end=_point4;var length=start.clone().setZ(0).distanceTo(end.clone().setZ(0));leftBox.scale.set(length,1000000,this.width);leftBox.up.set(0,0,1);var center=new THREE.Vector3().addVectors(start,end).multiplyScalar(0.5);var diff=new THREE.Vector3().subVectors(end,start);var target=new THREE.Vector3(diff.y,-diff.x,0);leftBox.position.set(0,0,0);leftBox.lookAt(target);leftBox.position.copy(center);}centroid.add(_point4);min.min(_point4);max.max(_point4);}centroid.multiplyScalar(1/this.points.length);for(var i=0;i<this.boxes.length;i++){var box=this.boxes[i];box.position.z=min.z+(max.z-min.z)/2;}}},{key:"raycast",value:function raycast(raycaster,intersects){for(var _i55=0;_i55<this.points.length;_i55++){var sphere=this.spheres[_i55];sphere.raycast(raycaster,intersects);}// recalculate distances because they are not necessarely correct
// for scaled objects.
// see https://github.com/mrdoob/three.js/issues/5827
// TODO: remove this once the bug has been fixed
for(var _i56=0;_i56<intersects.length;_i56++){var I=intersects[_i56];I.distance=raycaster.ray.origin.distanceTo(I.point);}intersects.sort(function(a,b){return a.distance-b.distance;});}},{key:"modifiable",get:function get(){return this._modifiable;},set:function set(value){this._modifiable=value;this.update();}}]);return _class6;}(THREE.Object3D);Potree.ProfileTool=function(_THREE$EventDispatche8){_inherits(ProfileTool,_THREE$EventDispatche8);function ProfileTool(viewer){_classCallCheck(this,ProfileTool);var _this31=_possibleConstructorReturn(this,(ProfileTool.__proto__||Object.getPrototypeOf(ProfileTool)).call(this));_this31.viewer=viewer;_this31.renderer=viewer.renderer;_this31.addEventListener("start_inserting_profile",function(e){_this31.viewer.dispatchEvent({type:"cancel_insertions"});});_this31.sceneProfile=new THREE.Scene();_this31.sceneProfile.name="scene_profile";_this31.light=new THREE.PointLight(0xffffff,1.0);_this31.sceneProfile.add(_this31.light);_this31.viewer.inputHandler.registerInteractiveScene(_this31.sceneProfile);_this31.onRemove=function(e){return _this31.sceneProfile.remove(e.profile);};_this31.onAdd=function(e){return _this31.sceneProfile.add(e.profile);};return _this31;}_createClass(ProfileTool,[{key:"setScene",value:function setScene(scene){if(this.scene===scene){return;}if(this.scene){this.scene.removeEventListeners("profile_added",this.onAdd);this.scene.removeEventListeners("profile_removed",this.onRemove);}this.scene=scene;this.scene.addEventListener("profile_added",this.onAdd);this.scene.addEventListener("profile_removed",this.onRemove);}},{key:"startInsertion",value:function startInsertion(){var _this32=this;var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var domElement=this.viewer.renderer.domElement;var profile=new Potree.Profile();profile.name=args.name||"Profile";this.dispatchEvent({type:"start_inserting_profile",profile:profile});this.sceneProfile.add(profile);var cancel={callback:null};var insertionCallback=function insertionCallback(e){if(e.button===THREE.MOUSE.LEFT){if(profile.points.length<=1){var camera=_this32.viewer.scene.camera;var distance=camera.position.distanceTo(profile.points[0]);var pr=Potree.utils.projectedRadius(1,camera.fov*Math.PI/180,distance,domElement.clientHeight);var width=10/pr;profile.setWidth(width);}profile.addMarker(profile.points[profile.points.length-1].clone());_this32.viewer.inputHandler.startDragging(profile.spheres[profile.spheres.length-1]);}else if(e.button===THREE.MOUSE.RIGHT){cancel.callback();}};cancel.callback=function(e){profile.removeMarker(profile.points.length-1);domElement.removeEventListener("mouseup",insertionCallback,true);_this32.viewer.removeEventListener("cancel_insertions",cancel.callback);};this.viewer.addEventListener("cancel_insertions",cancel.callback);domElement.addEventListener("mouseup",insertionCallback,true);profile.addMarker(new THREE.Vector3(0,0,0));this.viewer.inputHandler.startDragging(profile.spheres[profile.spheres.length-1]);this.viewer.scene.addProfile(profile);}},{key:"update",value:function update(){var camera=this.viewer.scene.camera;var domElement=this.renderer.domElement;var profiles=this.viewer.scene.profiles;this.light.position.copy(camera.position);// make size independant of distance
var _iteratorNormalCompletion42=true;var _didIteratorError42=false;var _iteratorError42=undefined;try{for(var _iterator42=profiles[Symbol.iterator](),_step42;!(_iteratorNormalCompletion42=(_step42=_iterator42.next()).done);_iteratorNormalCompletion42=true){var profile=_step42.value;var _iteratorNormalCompletion43=true;var _didIteratorError43=false;var _iteratorError43=undefined;try{for(var _iterator43=profile.spheres[Symbol.iterator](),_step43;!(_iteratorNormalCompletion43=(_step43=_iterator43.next()).done);_iteratorNormalCompletion43=true){var sphere=_step43.value;var distance=camera.position.distanceTo(sphere.getWorldPosition());var pr=Potree.utils.projectedRadius(1,camera.fov*Math.PI/180,distance,domElement.clientHeight);var scale=15/pr;sphere.scale.set(scale,scale,scale);}}catch(err){_didIteratorError43=true;_iteratorError43=err;}finally{try{if(!_iteratorNormalCompletion43&&_iterator43.return){_iterator43.return();}}finally{if(_didIteratorError43){throw _iteratorError43;}}}}}catch(err){_didIteratorError42=true;_iteratorError42=err;}finally{try{if(!_iteratorNormalCompletion42&&_iterator42.return){_iterator42.return();}}finally{if(_didIteratorError42){throw _iteratorError42;}}}}}]);return ProfileTool;}(THREE.EventDispatcher);Potree.TransformationTool=function(){function TransformationTool(viewer){var _this33=this;_classCallCheck(this,TransformationTool);this.viewer=viewer;this.sceneTransform=new THREE.Scene();this.translationNode=new THREE.Object3D();this.rotationNode=new THREE.Object3D();this.scaleNode=new THREE.Object3D();this.TRANSFORMATION_MODES={DEFAULT:0,TRANSLATE:1,ROTATE:2,SCALE:3};this.keys={TRANSLATE:['E'.charCodeAt(0)],SCALE:['R'.charCodeAt(0)],ROTATE:['T'.charCodeAt(0)]};this.mode=this.TRANSFORMATION_MODES.DEFAULT;this.menu=new HoverMenu(Potree.resourcePath+"/icons/menu_icon.svg");this.selection=[];this.viewer.inputHandler.registerInteractiveScene(this.sceneTransform);this.viewer.inputHandler.addEventListener("selection_changed",function(e){_this33.selection=e.selection;});this.viewer.inputHandler.addEventListener("keydown",function(e){if(_this33.selection.length>0){if(_this33.keys.TRANSLATE.some(function(key){return key===e.keyCode;})){_this33.setMode(_this33.TRANSFORMATION_MODES.TRANSLATE);}else if(_this33.keys.SCALE.some(function(key){return key===e.keyCode;})){_this33.setMode(_this33.TRANSFORMATION_MODES.SCALE);}else if(_this33.keys.ROTATE.some(function(key){return key===e.keyCode;})){_this33.setMode(_this33.TRANSFORMATION_MODES.ROTATE);}}});{// Menu
this.menu.addItem(new HoverMenuItem(Potree.resourcePath+"/icons/translate.svg",function(e){//console.log("translate!");
_this33.setMode(_this33.TRANSFORMATION_MODES.TRANSLATE);}));this.menu.addItem(new HoverMenuItem(Potree.resourcePath+"/icons/rotate.svg",function(e){//console.log("rotate!");
_this33.setMode(_this33.TRANSFORMATION_MODES.ROTATE);}));this.menu.addItem(new HoverMenuItem(Potree.resourcePath+"/icons/scale.svg",function(e){//console.log("scale!");
_this33.setMode(_this33.TRANSFORMATION_MODES.SCALE);}));this.menu.setPosition(100,100);$(this.viewer.renderArea).append(this.menu.element);this.menu.element.hide();}{// translation node
var createArrow=function createArrow(name,direction,color){var material=new THREE.MeshBasicMaterial({color:color,depthTest:false,depthWrite:false});var shaftGeometry=new THREE.Geometry();shaftGeometry.vertices.push(new THREE.Vector3(0,0,0));shaftGeometry.vertices.push(new THREE.Vector3(0,1,0));var shaftMaterial=new THREE.LineBasicMaterial({color:color,depthTest:true,depthWrite:true,transparent:true});var shaft=new THREE.Line(shaftGeometry,shaftMaterial);shaft.name=name+"_shaft";var headGeometry=new THREE.CylinderGeometry(0,0.04,0.1,10,1,false);var headMaterial=material;var head=new THREE.Mesh(headGeometry,headMaterial);head.name=name+"_head";head.position.y=1;var arrow=new THREE.Object3D();arrow.name=name;arrow.add(shaft);arrow.add(head);var mouseover=function mouseover(e){var c=new THREE.Color(0xFFFF00);shaftMaterial.color=c;headMaterial.color=c;};var mouseleave=function mouseleave(e){var c=new THREE.Color(color);shaftMaterial.color=c;headMaterial.color=c;};var drag=function drag(e){var camera=_this33.viewer.scene.camera;if(!e.drag.intersectionStart){e.drag.intersectionStart=e.drag.location;e.drag.objectStart=e.drag.object.getWorldPosition();var start=_this33.sceneTransform.position.clone();var end=direction.clone().applyMatrix4(_this33.sceneTransform.matrixWorld);//let end = start.clone().add(direction);
var line=new THREE.Line3(start,end);e.drag.line=line;var camOnLine=line.closestPointToPoint(camera.position,false);var normal=new THREE.Vector3().subVectors(camera.position,camOnLine);var plane=new THREE.Plane().setFromNormalAndCoplanarPoint(normal,e.drag.intersectionStart);e.drag.dragPlane=plane;e.drag.pivot=e.drag.intersectionStart;}{var mouse=e.drag.end;var domElement=viewer.renderer.domElement;var nmouse={x:mouse.x/domElement.clientWidth*2-1,y:-(mouse.y/domElement.clientHeight)*2+1};var vector=new THREE.Vector3(nmouse.x,nmouse.y,0.5);vector.unproject(camera);var ray=new THREE.Ray(camera.position,vector.sub(camera.position));var I=ray.intersectPlane(e.drag.dragPlane);if(I){var iOnLine=e.drag.line.closestPointToPoint(I,false);var diff=new THREE.Vector3().subVectors(iOnLine,e.drag.pivot);var _iteratorNormalCompletion44=true;var _didIteratorError44=false;var _iteratorError44=undefined;try{for(var _iterator44=_this33.selection[Symbol.iterator](),_step44;!(_iteratorNormalCompletion44=(_step44=_iterator44.next()).done);_iteratorNormalCompletion44=true){var selection=_step44.value;selection.position.add(diff);}}catch(err){_didIteratorError44=true;_iteratorError44=err;}finally{try{if(!_iteratorNormalCompletion44&&_iterator44.return){_iterator44.return();}}finally{if(_didIteratorError44){throw _iteratorError44;}}}e.drag.pivot=e.drag.pivot.add(diff);}}};shaft.addEventListener("mouseover",mouseover);shaft.addEventListener("mouseleave",mouseleave);shaft.addEventListener("drag",drag);return arrow;};var arrowX=createArrow("arrow_x",new THREE.Vector3(1,0,0),0xFF0000);var arrowY=createArrow("arrow_y",new THREE.Vector3(0,1,0),0x00FF00);var arrowZ=createArrow("arrow_z",new THREE.Vector3(0,0,1),0x0000FF);arrowX.rotation.z=-Math.PI/2;arrowZ.rotation.x=Math.PI/2;this.translationNode.add(arrowX);this.translationNode.add(arrowY);this.translationNode.add(arrowZ);}{// Rotation Node
var createCircle=function createCircle(name,normal,color){var material=new THREE.LineBasicMaterial({color:color,depthTest:true,depthWrite:true,transparent:true});var segments=32;var radius=1;var geometry=new THREE.BufferGeometry();var positions=new Float32Array((segments+1)*3);for(var _i57=0;_i57<=segments;_i57++){var u=_i57/segments*Math.PI*2;var x=Math.cos(u)*radius;var y=Math.sin(u)*radius;positions[3*_i57+0]=x;positions[3*_i57+1]=y;positions[3*_i57+2]=0;}geometry.addAttribute("position",new THREE.BufferAttribute(positions,3));geometry.computeBoundingSphere();var circle=new THREE.Line(geometry,material);circle.name=name+"_circle";circle.lookAt(normal);var mouseover=function mouseover(e){var c=new THREE.Color(0xFFFF00);material.color=c;};var mouseleave=function mouseleave(e){var c=new THREE.Color(color);material.color=c;};var drag=function drag(e){var camera=_this33.viewer.scene.camera;var n=normal.clone().applyEuler(_this33.sceneTransform.rotation);if(!e.drag.intersectionStart){e.drag.objectStart=e.drag.object.getWorldPosition();var plane=new THREE.Plane().setFromNormalAndCoplanarPoint(n,_this33.sceneTransform.getWorldPosition());{// e.drag.location seems imprecisse, calculate real start location
var _mouse=e.drag.end;var _domElement=viewer.renderer.domElement;var _nmouse={x:_mouse.x/_domElement.clientWidth*2-1,y:-(_mouse.y/_domElement.clientHeight)*2+1};var _vector=new THREE.Vector3(_nmouse.x,_nmouse.y,0.5);_vector.unproject(camera);var _ray2=new THREE.Ray(camera.position,_vector.sub(camera.position));var _I=_ray2.intersectPlane(plane);e.drag.intersectionStart=_I;}e.drag.dragPlane=plane;e.drag.pivot=e.drag.intersectionStart;}var mouse=e.drag.end;var domElement=viewer.renderer.domElement;var nmouse={x:mouse.x/domElement.clientWidth*2-1,y:-(mouse.y/domElement.clientHeight)*2+1};var vector=new THREE.Vector3(nmouse.x,nmouse.y,0.5);vector.unproject(camera);var ray=new THREE.Ray(camera.position,vector.sub(camera.position));var I=ray.intersectPlane(e.drag.dragPlane);if(I){var center=_this33.sceneTransform.position;var from=e.drag.pivot;var to=I;var v1=from.clone().sub(center).normalize();var v2=to.clone().sub(center).normalize();var angle=Math.acos(v1.dot(v2));var sign=Math.sign(v1.cross(v2).dot(n));angle=angle*sign;if(Number.isNaN(angle)){return;}var _iteratorNormalCompletion45=true;var _didIteratorError45=false;var _iteratorError45=undefined;try{for(var _iterator45=_this33.selection[Symbol.iterator](),_step45;!(_iteratorNormalCompletion45=(_step45=_iterator45.next()).done);_iteratorNormalCompletion45=true){var selection=_step45.value;selection.rotateOnAxis(normal,angle);}}catch(err){_didIteratorError45=true;_iteratorError45=err;}finally{try{if(!_iteratorNormalCompletion45&&_iterator45.return){_iterator45.return();}}finally{if(_didIteratorError45){throw _iteratorError45;}}}e.drag.pivot=I;}};circle.addEventListener("mouseover",mouseover);circle.addEventListener("mouseleave",mouseleave);circle.addEventListener("drag",drag);return circle;};{// transparent ball
var sg=new THREE.SphereGeometry(1,32,32);var sm=new THREE.MeshBasicMaterial({//let sm = new THREE.MeshNormalMaterial({
color:0xaaaaaa,transparent:true,depthTest:true,depthWrite:true,opacity:0.4});var sphere=new THREE.Mesh(sg,sm);sphere.name=name+"_sphere";sphere.scale.set(0.9,0.9,0.9);this.rotationNode.add(sphere);}var yaw=createCircle("yaw",new THREE.Vector3(0,0,1),0xff0000);var pitch=createCircle("pitch",new THREE.Vector3(1,0,0),0x00ff00);var roll=createCircle("roll",new THREE.Vector3(0,1,0),0x0000ff);this.rotationNode.add(yaw);this.rotationNode.add(pitch);this.rotationNode.add(roll);}{// scale node
var createHandle=function createHandle(name,direction,color){var material=new THREE.MeshBasicMaterial({color:color,depthTest:false,depthWrite:false});var shaftGeometry=new THREE.Geometry();shaftGeometry.vertices.push(new THREE.Vector3(0,0,0));shaftGeometry.vertices.push(new THREE.Vector3(0,1,0));var shaftMaterial=new THREE.LineBasicMaterial({color:color,depthTest:true,depthWrite:true,transparent:true});var shaft=new THREE.Line(shaftGeometry,shaftMaterial);shaft.name=name+"_shaft";var headGeometry=new THREE.BoxGeometry(1,1,1);var headMaterial=material;var head=new THREE.Mesh(headGeometry,headMaterial);head.name=name+"_head";head.position.y=1;head.scale.set(0.07,0.07,0.07);var arrow=new THREE.Object3D();arrow.add(shaft);arrow.add(head);var mouseover=function mouseover(e){var c=new THREE.Color(0xFFFF00);shaftMaterial.color=c;headMaterial.color=c;};var mouseleave=function mouseleave(e){var c=new THREE.Color(color);shaftMaterial.color=c;headMaterial.color=c;};var drag=function drag(e){var camera=_this33.viewer.scene.camera;if(!e.drag.intersectionStart){e.drag.intersectionStart=e.drag.location;e.drag.scaleStart=_this33.selection[0].scale.clone();var start=_this33.sceneTransform.position.clone();var end=direction.clone().applyMatrix4(_this33.sceneTransform.matrixWorld);//let end = start.clone().add(direction);
var line=new THREE.Line3(start,end);e.drag.line=line;var camOnLine=line.closestPointToPoint(camera.position,false);var normal=new THREE.Vector3().subVectors(camera.position,camOnLine);var plane=new THREE.Plane().setFromNormalAndCoplanarPoint(normal,e.drag.intersectionStart);e.drag.dragPlane=plane;e.drag.pivot=e.drag.intersectionStart;}{var mouse=e.drag.end;var domElement=viewer.renderer.domElement;var nmouse={x:mouse.x/domElement.clientWidth*2-1,y:-(mouse.y/domElement.clientHeight)*2+1};var vector=new THREE.Vector3(nmouse.x,nmouse.y,0.5);vector.unproject(camera);var ray=new THREE.Ray(camera.position,vector.sub(camera.position));var I=ray.intersectPlane(e.drag.dragPlane);if(I){var iOnLine=e.drag.line.closestPointToPoint(I,false);//let diff = new THREE.Vector3().subVectors(
//	iOnLine, e.drag.pivot);
var oldDistance=_this33.sceneTransform.position.distanceTo(e.drag.pivot);var newDistance=_this33.sceneTransform.position.distanceTo(I);var s=newDistance/oldDistance;var scale=new THREE.Vector3(direction.x===0?1:s*direction.x,direction.y===0?1:s*direction.y,direction.z===0?1:s*direction.z);var _iteratorNormalCompletion46=true;var _didIteratorError46=false;var _iteratorError46=undefined;try{for(var _iterator46=_this33.selection[Symbol.iterator](),_step46;!(_iteratorNormalCompletion46=(_step46=_iterator46.next()).done);_iteratorNormalCompletion46=true){var selection=_step46.value;//selection.position.add(diff);
selection.scale.copy(e.drag.scaleStart.clone().multiply(scale));//selection.scale.copy(
//	e.drag.scaleStart.clone()
//	.multiplyScalar(scale)
//	.multiply(direction));
//console.log(Potree.utils.toString(selection.scale));
}//e.drag.pivot = e.drag.pivot.add(diff);
}catch(err){_didIteratorError46=true;_iteratorError46=err;}finally{try{if(!_iteratorNormalCompletion46&&_iterator46.return){_iterator46.return();}}finally{if(_didIteratorError46){throw _iteratorError46;}}}}}};shaft.addEventListener("mouseover",mouseover);shaft.addEventListener("mouseleave",mouseleave);shaft.addEventListener("drag",drag);return arrow;};var _arrowX=createHandle("arrow_x",new THREE.Vector3(1,0,0),0xFF0000);var _arrowY=createHandle("arrow_y",new THREE.Vector3(0,1,0),0x00FF00);var _arrowZ=createHandle("arrow_z",new THREE.Vector3(0,0,1),0x0000FF);_arrowX.rotation.z=-Math.PI/2;_arrowZ.rotation.x=Math.PI/2;this.scaleNode.add(_arrowX);this.scaleNode.add(_arrowY);this.scaleNode.add(_arrowZ);}this.setMode(this.TRANSFORMATION_MODES.TRANSLATE);}_createClass(TransformationTool,[{key:"getSelectionBoundingBox",value:function getSelectionBoundingBox(){var min=new THREE.Vector3(+Infinity,+Infinity,+Infinity);var max=new THREE.Vector3(-Infinity,-Infinity,-Infinity);var _iteratorNormalCompletion47=true;var _didIteratorError47=false;var _iteratorError47=undefined;try{for(var _iterator47=this.selection[Symbol.iterator](),_step47;!(_iteratorNormalCompletion47=(_step47=_iterator47.next()).done);_iteratorNormalCompletion47=true){var _node3=_step47.value;var box=null;if(_node3.boundingBox){box=_node3.boundingBox;}else if(_node3.geometry&&_node3.geometry.boundingBox){box=_node3.geometry.boundingBox;}if(box){//let tbox = Potree.utils.computeTransformedBoundingBox(box, node.matrixWorld);				
var tbox=box.clone().applyMatrix4(_node3.matrixWorld);min=min.min(tbox.min);max=max.max(tbox.max);}else{var wp=_node3.getWorldPosition();min=min.min(wp);max=max.max(wp);}}}catch(err){_didIteratorError47=true;_iteratorError47=err;}finally{try{if(!_iteratorNormalCompletion47&&_iterator47.return){_iterator47.return();}}finally{if(_didIteratorError47){throw _iteratorError47;}}}return new THREE.Box3(min,max);}},{key:"setMode",value:function setMode(mode){if(this.mode===mode){return;}this.sceneTransform.remove(this.translationNode);this.sceneTransform.remove(this.rotationNode);this.sceneTransform.remove(this.scaleNode);if(mode===this.TRANSFORMATION_MODES.TRANSLATE){this.sceneTransform.add(this.translationNode);}else if(mode===this.TRANSFORMATION_MODES.ROTATE){this.sceneTransform.add(this.rotationNode);}else if(mode===this.TRANSFORMATION_MODES.SCALE){this.sceneTransform.add(this.scaleNode);}this.mode=mode;}//setSelection(selection){
//	this.selection = selection;
//}
},{key:"update",value:function update(){if(this.selection.length===0){this.sceneTransform.visible=false;this.menu.element.hide();return;}else{this.sceneTransform.visible=true;this.menu.element.show();}if(this.selection.length===1){this.sceneTransform.rotation.copy(this.selection[0].rotation);}var scene=this.viewer.scene;var renderer=this.viewer.renderer;var domElement=renderer.domElement;var box=this.getSelectionBoundingBox();var pivot=box.getCenter();this.sceneTransform.position.copy(pivot);{// size
var distance=scene.camera.position.distanceTo(pivot);var pr=Potree.utils.projectedRadius(1,scene.camera.fov*Math.PI/180,distance,renderer.domElement.clientHeight);var scale=120/pr;this.sceneTransform.scale.set(scale,scale,scale);}{// menu
var screenPos=pivot.clone().project(scene.camera);screenPos.x=domElement.clientWidth*(screenPos.x+1)/2;screenPos.y=domElement.clientHeight*(1-(screenPos.y+1)/2);this.menu.setPosition(screenPos.x,screenPos.y);}}//render(camera, target){
//	this.update();
//	this.renderer.render(this.sceneTransform, camera, target);
//}
}]);return TransformationTool;}();Potree.Volume=function(_THREE$Object3D4){_inherits(_class7,_THREE$Object3D4);function _class7(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,_class7);var _this34=_possibleConstructorReturn(this,(_class7.__proto__||Object.getPrototypeOf(_class7)).call(this));_this34.constructor.counter=_this34.constructor.counter===undefined?0:_this34.constructor.counter+1;_this34.name="volume_"+_this34.constructor.counter;_this34._clip=args.clip||false;_this34._modifiable=args.modifiable||true;var boxGeometry=new THREE.BoxGeometry(1,1,1);boxGeometry.computeBoundingBox();var boxFrameGeometry=new THREE.Geometry();{var l=0.1;// corner vertices
var v=[[-0.5,-0.5,-0.5],[-0.5,-0.5,+0.5],[-0.5,+0.5,-0.5],[-0.5,+0.5,+0.5],[+0.5,-0.5,-0.5],[+0.5,-0.5,+0.5],[+0.5,+0.5,-0.5],[+0.5,+0.5,+0.5]];//
//// create a cross at each corner with cross length l
//for(let b of v){
//	
//	let b1 = [ b[0] - l * Math.sign(b[0]), b[1], b[2] ];
//	let b2 = [ b[0], b[1] - l * Math.sign(b[1]), b[2] ];
//	let b3 = [ b[0], b[1], b[2] - l * Math.sign(b[2]) ];
//	
//	// create the 3 lines that a cross consists of
//	for(let d of [b, b1, b, b2, b, b3]){
//		boxFrameGeometry.vertices.push(new THREE.Vector3().fromArray(d));
//	}
//	
//}
// bottom
boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));// top
boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));// sides
boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));}_this34.dimension=new THREE.Vector3(1,1,1);_this34.material=new THREE.MeshBasicMaterial({color:0x00ff00,transparent:true,opacity:0.3,depthTest:true,depthWrite:false});_this34.box=new THREE.Mesh(boxGeometry,_this34.material);_this34.box.geometry.computeBoundingBox();_this34.boundingBox=_this34.box.geometry.boundingBox;_this34.add(_this34.box);_this34.frame=new THREE.LineSegments(boxFrameGeometry,new THREE.LineBasicMaterial({color:0x000000}));//this.frame.mode = THREE.Lines;
_this34.add(_this34.frame);_this34.label=new Potree.TextSprite("0");_this34.label.setBorderColor({r:0,g:255,b:0,a:0.0});_this34.label.setBackgroundColor({r:0,g:255,b:0,a:0.0});_this34.label.material.depthTest=false;_this34.label.material.depthWrite=false;_this34.label.material.transparent=true;_this34.label.position.y-=0.5;_this34.add(_this34.label);_this34.label.updateMatrixWorld=function(){var volumeWorldPos=new THREE.Vector3();volumeWorldPos.setFromMatrixPosition(_this34.matrixWorld);_this34.label.position.copy(volumeWorldPos);_this34.label.updateMatrix();_this34.label.matrixWorld.copy(_this34.label.matrix);_this34.label.matrixWorldNeedsUpdate=false;for(var i=0,l=_this34.label.children.length;i<l;i++){_this34.label.children[i].updateMatrixWorld(true);}};{// event listeners
_this34.addEventListener("select",function(e){});_this34.addEventListener("deselect",function(e){});}_this34.update();return _this34;}_createClass(_class7,[{key:"getVolume",value:function getVolume(){return Math.abs(this.scale.x*this.scale.y*this.scale.z);}},{key:"update",value:function update(){this.boundingBox=this.box.geometry.boundingBox;this.boundingSphere=this.boundingBox.getBoundingSphere();if(this._clip){this.box.visible=false;this.label.visible=false;}else{this.box.visible=true;this.label.visible=true;}}},{key:"raycast",value:function raycast(raycaster,intersects){var is=[];this.box.raycast(raycaster,is);if(is.length>0){var I=is[0];intersects.push({distance:I.distance,object:this,point:I.point.clone()});}}},{key:"clip",get:function get(){return this._clip;},set:function set(value){this._clip=value;this.update();}},{key:"modifieable",get:function get(){return this._modifiable;},set:function set(value){this._modifiable=value;this.update();}}]);return _class7;}(THREE.Object3D);Potree.VolumeTool=function(_THREE$EventDispatche9){_inherits(VolumeTool,_THREE$EventDispatche9);function VolumeTool(viewer){_classCallCheck(this,VolumeTool);var _this35=_possibleConstructorReturn(this,(VolumeTool.__proto__||Object.getPrototypeOf(VolumeTool)).call(this));_this35.viewer=viewer;_this35.renderer=viewer.renderer;_this35.addEventListener("start_inserting_volume",function(e){_this35.viewer.dispatchEvent({type:"cancel_insertions"});});_this35.sceneVolume=new THREE.Scene();_this35.sceneVolume.name="scene_volume";_this35.viewer.inputHandler.registerInteractiveScene(_this35.sceneVolume);_this35.onRemove=function(e){_this35.sceneVolume.remove(e.volume);};_this35.onAdd=function(e){_this35.sceneVolume.add(e.volume);};_this35.viewer.inputHandler.addEventListener("delete",function(e){var volumes=e.selection.filter(function(e){return e instanceof Potree.Volume;});volumes.forEach(function(e){return _this35.viewer.scene.removeVolume(e);});});return _this35;}_createClass(VolumeTool,[{key:"setScene",value:function setScene(scene){if(this.scene===scene){return;}if(this.scene){this.scene.removeEventListeners("volume_added",this.onAdd);this.scene.removeEventListeners("volume_removed",this.onRemove);}this.scene=scene;this.scene.addEventListener("volume_added",this.onAdd);this.scene.addEventListener("volume_removed",this.onRemove);}},{key:"startInsertion",value:function startInsertion(){var _this36=this;var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var domElement=this.viewer.renderer.domElement;var volume=new Potree.Volume();volume.clip=args.clip||false;volume.name=args.name||"Volume";this.dispatchEvent({type:"start_inserting_volume",volume:volume});//this.sceneVolume.add(volume);
this.viewer.scene.addVolume(volume);var cancel={callback:null};var drag=function drag(e){var camera=_this36.viewer.scene.camera;var I=Potree.utils.getMousePointCloudIntersection(e.drag.end,_this36.viewer.scene.camera,_this36.viewer.renderer,_this36.viewer.scene.pointclouds);if(I){volume.position.copy(I.location);var wp=volume.getWorldPosition().applyMatrix4(camera.matrixWorldInverse);var pp=new THREE.Vector4(wp.x,wp.y,wp.z).applyMatrix4(camera.projectionMatrix);var w=Math.abs(wp.z/10);volume.scale.set(w,w,w);}};var drop=function drop(e){volume.removeEventListener("drag",drag);volume.removeEventListener("drop",drop);cancel.callback();};cancel.callback=function(e){volume.removeEventListener("drag",drag);volume.removeEventListener("drop",drop);_this36.viewer.removeEventListener("cancel_insertions",cancel.callback);};volume.addEventListener("drag",drag);volume.addEventListener("drop",drop);this.viewer.addEventListener("cancel_insertions",cancel.callback);this.viewer.inputHandler.startDragging(volume);}},{key:"update",value:function update(delta){if(!this.scene){return;}var camera=this.viewer.scene.camera;var domElement=this.viewer.renderer.domElement;//let labels = this.viewer.scene.volumes.map(e => e.label);
var volumes=this.viewer.scene.volumes;var _iteratorNormalCompletion48=true;var _didIteratorError48=false;var _iteratorError48=undefined;try{for(var _iterator48=volumes[Symbol.iterator](),_step48;!(_iteratorNormalCompletion48=(_step48=_iterator48.next()).done);_iteratorNormalCompletion48=true){var volume=_step48.value;var label=volume.label;{var distance=label.position.distanceTo(camera.position);var pr=Potree.utils.projectedRadius(1,camera.fov*Math.PI/180,distance,domElement.clientHeight);var scale=70/pr;label.scale.set(scale,scale,scale);}var text=Potree.utils.addCommas(volume.getVolume().toFixed(3))+"\xB3";label.setText(text);}}catch(err){_didIteratorError48=true;_iteratorError48=err;}finally{try{if(!_iteratorNormalCompletion48&&_iterator48.return){_iterator48.return();}}finally{if(_didIteratorError48){throw _iteratorError48;}}}}}]);return VolumeTool;}(THREE.EventDispatcher);/**
 *
 * code adapted from three.js BoxHelper.js
 * https://github.com/mrdoob/three.js/blob/dev/src/helpers/BoxHelper.js
 *
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / http://github.com/Mugen87
 * @author mschuetz / http://potree.org
 */Potree.Box3Helper=function(_THREE$LineSegments){_inherits(Box3Helper,_THREE$LineSegments);function Box3Helper(box,color){_classCallCheck(this,Box3Helper);if(color===undefined)color=0xffff00;var indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var positions=new Float32Array([box.min.x,box.min.y,box.min.z,box.max.x,box.min.y,box.min.z,box.max.x,box.min.y,box.max.z,box.min.x,box.min.y,box.max.z,box.min.x,box.max.y,box.min.z,box.max.x,box.max.y,box.min.z,box.max.x,box.max.y,box.max.z,box.min.x,box.max.y,box.max.z]);var geometry=new THREE.BufferGeometry();geometry.setIndex(new THREE.BufferAttribute(indices,1));geometry.addAttribute('position',new THREE.BufferAttribute(positions,3));var material=new THREE.LineBasicMaterial({color:color});return _possibleConstructorReturn(this,(Box3Helper.__proto__||Object.getPrototypeOf(Box3Helper)).call(this,geometry,material));}return Box3Helper;}(THREE.LineSegments);/**
 *
 * @author sigeom sa / http://sigeom.ch
 * @author Ioda-Net Sàrl / https://www.ioda-net.ch/
 * @author Markus Schütz / http://potree.org
 *
 */Potree.GeoJSONExporter=function(){function GeoJSONExporter(){_classCallCheck(this,GeoJSONExporter);}_createClass(GeoJSONExporter,null,[{key:"measurementToFeatures",value:function measurementToFeatures(measurement){var coords=measurement.points.map(function(e){return e.position.toArray();});var features=[];if(coords.length===1){var feature={type:'Feature',geometry:{type:'Point',coordinates:coords[0]},properties:{name:measurement.name}};features.push(feature);}else if(coords.length>1&&!measurement.closed){var object={"type":"Feature","geometry":{"type":"LineString","coordinates":coords},"properties":{name:measurement.name}};features.push(object);}else if(coords.length>1&&measurement.closed){var _object2={"type":"Feature","geometry":{"type":"Polygon","coordinates":[[].concat(_toConsumableArray(coords),[coords[0]])]},"properties":{name:measurement.name}};features.push(_object2);}if(measurement.showDistances){measurement.edgeLabels.forEach(function(label){var labelPoint={type:'Feature',geometry:{type:'Point',coordinates:label.position.toArray()},properties:{distance:label.text}};features.push(labelPoint);});}if(measurement.showArea){var point=measurement.areaLabel.position;var labelArea={type:'Feature',geometry:{type:'Point',coordinates:point.toArray()},properties:{area:measurement.areaLabel.text}};features.push(labelArea);}return features;}},{key:"toString",value:function toString(measurements){if(!(measurements instanceof Array)){measurements=[measurements];}measurements=measurements.filter(function(m){return m instanceof Potree.Measure;});var features=[];var _iteratorNormalCompletion49=true;var _didIteratorError49=false;var _iteratorError49=undefined;try{for(var _iterator49=measurements[Symbol.iterator](),_step49;!(_iteratorNormalCompletion49=(_step49=_iterator49.next()).done);_iteratorNormalCompletion49=true){var measure=_step49.value;var f=Potree.GeoJSONExporter.measurementToFeatures(measure);features=features.concat(f);}}catch(err){_didIteratorError49=true;_iteratorError49=err;}finally{try{if(!_iteratorNormalCompletion49&&_iterator49.return){_iterator49.return();}}finally{if(_didIteratorError49){throw _iteratorError49;}}}var geojson={"type":"FeatureCollection","features":features};return JSON.stringify(geojson,null,"\t");}}]);return GeoJSONExporter;}();/**
 *
 * @author sigeom sa / http://sigeom.ch
 * @author Ioda-Net S�rl / https://www.ioda-net.ch/
 * @author Markus Sch�tz / http://potree.org
 *
 */Potree.DXFExporter=function(){function DXFExporter(){_classCallCheck(this,DXFExporter);}_createClass(DXFExporter,null,[{key:"measurementPointSection",value:function measurementPointSection(measurement){var position=measurement.points[0].position;if(!position){return"";}var dxfSection="0\nCIRCLE\n8\nlayer_point\n10\n"+position.x+"\n20\n"+position.y+"\n30\n"+position.z+"\n40\n1.0\n";return dxfSection;}},{key:"measurementPolylineSection",value:function measurementPolylineSection(measurement){// bit code for polygons/polylines: 
// https://www.autodesk.com/techpubs/autocad/acad2000/dxf/polyline_dxf_06.htm
var geomCode=8;if(measurement.closed){geomCode+=1;}var dxfSection="0\nPOLYLINE\n8\nlayer_polyline\n62\n1\n66\n1\n10\n0.0\n20\n0.0\n30\n0.0\n70\n"+geomCode+"\n";var xMax=0.0;var yMax=0.0;var zMax=0.0;var _iteratorNormalCompletion50=true;var _didIteratorError50=false;var _iteratorError50=undefined;try{for(var _iterator50=measurement.points[Symbol.iterator](),_step50;!(_iteratorNormalCompletion50=(_step50=_iterator50.next()).done);_iteratorNormalCompletion50=true){var point=_step50.value;point=point.position;xMax=Math.max(xMax,point.x);yMax=Math.max(yMax,point.y);zMax=Math.max(zMax,point.z);dxfSection+="0\nVERTEX\n8\n0\n10\n"+point.x+"\n20\n"+point.y+"\n30\n"+point.z+"\n70\n32\n";}}catch(err){_didIteratorError50=true;_iteratorError50=err;}finally{try{if(!_iteratorNormalCompletion50&&_iterator50.return){_iterator50.return();}}finally{if(_didIteratorError50){throw _iteratorError50;}}}dxfSection+="0\nSEQEND\n";return dxfSection;}},{key:"measurementSection",value:function measurementSection(measurement){//if(measurement.points.length <= 1){
//	return "";
//}
if(measurement.points.length===0){return"";}else if(measurement.points.length===1){return Potree.DXFExporter.measurementPointSection(measurement);}else if(measurement.points.length>=2){return Potree.DXFExporter.measurementPolylineSection(measurement);}}},{key:"toString",value:function toString(measurements){if(!(measurements instanceof Array)){measurements=[measurements];}measurements=measurements.filter(function(m){return m instanceof Potree.Measure;});var points=measurements.filter(function(m){return m instanceof Potree.Measure;}).map(function(m){return m.points;}).reduce(function(a,v){return a.concat(v);}).map(function(p){return p.position;});var min=new THREE.Vector3(Infinity,Infinity,Infinity);var max=new THREE.Vector3(-Infinity,-Infinity,-Infinity);var _iteratorNormalCompletion51=true;var _didIteratorError51=false;var _iteratorError51=undefined;try{for(var _iterator51=points[Symbol.iterator](),_step51;!(_iteratorNormalCompletion51=(_step51=_iterator51.next()).done);_iteratorNormalCompletion51=true){var point=_step51.value;min.min(point);max.max(point);}}catch(err){_didIteratorError51=true;_iteratorError51=err;}finally{try{if(!_iteratorNormalCompletion51&&_iterator51.return){_iterator51.return();}}finally{if(_didIteratorError51){throw _iteratorError51;}}}var dxfHeader="999\nDXF created from potree\n0\nSECTION\n2\nHEADER\n9\n$ACADVER\n1\nAC1006\n9\n$INSBASE\n10\n0.0\n20\n0.0\n30\n0.0\n9\n$EXTMIN\n10\n"+min.x+"\n20\n"+min.y+"\n30\n"+min.z+"\n9\n$EXTMAX\n10\n"+max.x+"\n20\n"+max.y+"\n30\n"+max.z+"\n0\nENDSEC\n";var dxfBody="0\nSECTION\n2\nENTITIES\n";var _iteratorNormalCompletion52=true;var _didIteratorError52=false;var _iteratorError52=undefined;try{for(var _iterator52=measurements[Symbol.iterator](),_step52;!(_iteratorNormalCompletion52=(_step52=_iterator52.next()).done);_iteratorNormalCompletion52=true){var measurement=_step52.value;dxfBody+=Potree.DXFExporter.measurementSection(measurement);}}catch(err){_didIteratorError52=true;_iteratorError52=err;}finally{try{if(!_iteratorNormalCompletion52&&_iterator52.return){_iterator52.return();}}finally{if(_didIteratorError52){throw _iteratorError52;}}}dxfBody+="0\nENDSEC\n";var dxf=dxfHeader+dxfBody+'0\nEOF';return dxf;}}]);return DXFExporter;}();Potree.CSVExporter=function(){function CSVExporter(){_classCallCheck(this,CSVExporter);}_createClass(CSVExporter,null,[{key:"toString",value:function toString(points){var string="";var attributes=Object.keys(points.data).filter(function(a){return a!=="normal";}).sort(function(a,b){if(a==="position")return-1;if(b==="position")return 1;if(a==="color")return-1;if(b==="color")return 1;});var headerValues=[];var _iteratorNormalCompletion53=true;var _didIteratorError53=false;var _iteratorError53=undefined;try{for(var _iterator53=attributes[Symbol.iterator](),_step53;!(_iteratorNormalCompletion53=(_step53=_iterator53.next()).done);_iteratorNormalCompletion53=true){var attribute=_step53.value;var itemSize=points.data[attribute].length/points.numPoints;if(attribute==="position"){headerValues=headerValues.concat(["x","y","z"]);}else if(attribute==="color"){headerValues=headerValues.concat(["r","g","b"]);}else if(itemSize>1){for(var _i59=0;_i59<itemSize;_i59++){headerValues.push(attribute+"_"+_i59);}}else{headerValues.push(attribute);}}}catch(err){_didIteratorError53=true;_iteratorError53=err;}finally{try{if(!_iteratorNormalCompletion53&&_iterator53.return){_iterator53.return();}}finally{if(_didIteratorError53){throw _iteratorError53;}}}string=headerValues.join(", ")+"\n";for(var _i58=0;_i58<points.numPoints;_i58++){var values=[];var _iteratorNormalCompletion54=true;var _didIteratorError54=false;var _iteratorError54=undefined;try{for(var _iterator54=attributes[Symbol.iterator](),_step54;!(_iteratorNormalCompletion54=(_step54=_iterator54.next()).done);_iteratorNormalCompletion54=true){var _attribute=_step54.value;var itemSize=points.data[_attribute].length/points.numPoints;var value=points.data[_attribute].subarray(itemSize*_i58,itemSize*_i58+itemSize).join(", ");values.push(value);}}catch(err){_didIteratorError54=true;_iteratorError54=err;}finally{try{if(!_iteratorNormalCompletion54&&_iterator54.return){_iterator54.return();}}finally{if(_didIteratorError54){throw _iteratorError54;}}}string+=values.join(", ")+"\n";}return string;}}]);return CSVExporter;}();Potree.LASExporter=function(){function LASExporter(){_classCallCheck(this,LASExporter);}_createClass(LASExporter,null,[{key:"toLAS",value:function toLAS(points){var string="";var boundingBox=points.boundingBox;var offset=boundingBox.min.clone();var diagonal=boundingBox.min.distanceTo(boundingBox.max);var scale=new THREE.Vector3(0.001,0.001,0.001);if(diagonal>1000*1000){scale=new THREE.Vector3(0.01,0.01,0.01);}else{scale=new THREE.Vector3(0.001,0.001,0.001);}var setString=function setString(string,offset,buffer){var view=new Uint8Array(buffer);for(var _i60=0;_i60<string.length;_i60++){var charCode=string.charCodeAt(_i60);view[offset+_i60]=charCode;}};var buffer=new ArrayBuffer(227+28*points.numPoints);var view=new DataView(buffer);var u8View=new Uint8Array(buffer);//let u16View = new Uint16Array(buffer);
setString("LASF",0,buffer);u8View[24]=1;u8View[25]=2;// system identifier o:26 l:32
// generating software o:58 l:32
setString("Potree 1.5",58,buffer);// file creation day of year o:90 l:2
// file creation year o:92 l:2
// header size o:94 l:2
view.setUint16(94,227,true);// offset to point data o:96 l:4
view.setUint32(96,227,true);// number of letiable length records o:100 l:4
// point data record format 104 1
u8View[104]=2;// point data record length 105 2
view.setUint16(105,28,true);// number of point records 107 4 
view.setUint32(107,points.numPoints,true);// number of points by return 111 20
// x scale factor 131 8
view.setFloat64(131,scale.x,true);// y scale factor 139 8
view.setFloat64(139,scale.y,true);// z scale factor 147 8
view.setFloat64(147,scale.z,true);// x offset 155 8
view.setFloat64(155,offset.x,true);// y offset 163 8
view.setFloat64(163,offset.y,true);// z offset 171 8
view.setFloat64(171,offset.z,true);// max x 179 8
view.setFloat64(179,boundingBox.max.x,true);// min x 187 8
view.setFloat64(187,boundingBox.min.x,true);// max y 195 8
view.setFloat64(195,boundingBox.max.y,true);// min y 203 8
view.setFloat64(203,boundingBox.min.y,true);// max z 211 8
view.setFloat64(211,boundingBox.max.z,true);// min z 219 8
view.setFloat64(219,boundingBox.min.z,true);var boffset=227;for(var _i61=0;_i61<points.numPoints;_i61++){//let point = points[i];
//let position = new THREE.Vector3(point.x, point.y, point.z);
var px=points.data.position[3*_i61+0];var py=points.data.position[3*_i61+1];var pz=points.data.position[3*_i61+2];var ux=parseInt((px-offset.x)/scale.x);var uy=parseInt((py-offset.y)/scale.y);var uz=parseInt((pz-offset.z)/scale.z);view.setUint32(boffset+0,ux,true);view.setUint32(boffset+4,uy,true);view.setUint32(boffset+8,uz,true);if(points.data.intensity){view.setUint16(boffset+12,points.data.intensity[_i61],true);}var rt=0;if(points.data.returnNumber){rt+=points.data.returnNumber[_i61];}if(points.data.numberOfReturns){rt+=points.data.numberOfReturns[_i61]<<3;}view.setUint8(boffset+14,rt);if(points.data.classification){view.setUint8(boffset+15,points.data.classification[_i61]);}// scan angle rank
// user data
// point source id
if(points.data.pointSourceID){view.setUint16(boffset+18,points.data.pointSourceID[_i61]);}if(points.data.color){view.setUint16(boffset+20,points.data.color[3*_i61+0]*255,true);view.setUint16(boffset+22,points.data.color[3*_i61+1]*255,true);view.setUint16(boffset+24,points.data.color[3*_i61+2]*255,true);}boffset+=28;}return buffer;}}]);return LASExporter;}();Potree.PointCloudArena4DNode=function(_Potree$PointCloudTre3){_inherits(PointCloudArena4DNode,_Potree$PointCloudTre3);function PointCloudArena4DNode(){_classCallCheck(this,PointCloudArena4DNode);var _this38=_possibleConstructorReturn(this,(PointCloudArena4DNode.__proto__||Object.getPrototypeOf(PointCloudArena4DNode)).call(this));_this38.left=null;_this38.right=null;_this38.sceneNode=null;_this38.kdtree=null;return _this38;}_createClass(PointCloudArena4DNode,[{key:"getNumPoints",value:function getNumPoints(){return this.geometryNode.numPoints;}},{key:"isLoaded",value:function isLoaded(){return true;}},{key:"isTreeNode",value:function isTreeNode(){return true;}},{key:"isGeometryNode",value:function isGeometryNode(){return false;}},{key:"getLevel",value:function getLevel(){return this.geometryNode.level;}},{key:"getBoundingSphere",value:function getBoundingSphere(){return this.geometryNode.boundingSphere;}},{key:"getBoundingBox",value:function getBoundingBox(){return this.geometryNode.boundingBox;}},{key:"toTreeNode",value:function toTreeNode(child){var geometryNode=null;if(this.left===child){geometryNode=this.left;}else if(this.right===child){geometryNode=this.right;}if(!geometryNode.loaded){return;}var node=new Potree.PointCloudArena4DNode();var sceneNode=THREE.PointCloud(geometryNode.geometry,this.kdtree.material);sceneNode.visible=false;node.kdtree=this.kdtree;node.geometryNode=geometryNode;node.sceneNode=sceneNode;node.parent=this;node.left=this.geometryNode.left;node.right=this.geometryNode.right;}},{key:"getChildren",value:function getChildren(){var children=[];if(this.left){children.push(this.left);}if(this.right){children.push(this.right);}return children;}}]);return PointCloudArena4DNode;}(Potree.PointCloudTreeNode);Potree.PointCloudOctreeNode.prototype=Object.create(Potree.PointCloudTreeNode.prototype);Potree.PointCloudArena4D=function(_Potree$PointCloudTre4){_inherits(PointCloudArena4D,_Potree$PointCloudTre4);function PointCloudArena4D(geometry){_classCallCheck(this,PointCloudArena4D);var _this39=_possibleConstructorReturn(this,(PointCloudArena4D.__proto__||Object.getPrototypeOf(PointCloudArena4D)).call(this));_this39.root=null;if(geometry.root){_this39.root=geometry.root;}else{geometry.addEventListener("hierarchy_loaded",function(){_this39.root=geometry.root;});}_this39.visiblePointsTarget=2*1000*1000;_this39.minimumNodePixelSize=150;_this39.position.sub(geometry.offset);_this39.updateMatrix();_this39.numVisibleNodes=0;_this39.numVisiblePoints=0;_this39.boundingBoxNodes=[];_this39.loadQueue=[];_this39.visibleNodes=[];_this39.pcoGeometry=geometry;_this39.boundingBox=_this39.pcoGeometry.boundingBox;_this39.boundingSphere=_this39.pcoGeometry.boundingSphere;_this39.material=new Potree.PointCloudMaterial({vertexColors:THREE.VertexColors,size:0.05,treeType:Potree.TreeType.KDTREE});_this39.material.sizeType=Potree.PointSizeType.ATTENUATED;_this39.material.size=0.05;_this39.profileRequests=[];_this39.name="";return _this39;}_createClass(PointCloudArena4D,[{key:"setName",value:function setName(name){if(this.name!==name){this.name=name;this.dispatchEvent({type:"name_changed",name:name,pointcloud:this});}}},{key:"getName",value:function getName(){return this.name;}},{key:"getLevel",value:function getLevel(){return this.level;}},{key:"toTreeNode",value:function toTreeNode(geometryNode,parent){var _this40=this;var node=new Potree.PointCloudArena4DNode();var sceneNode=new THREE.Points(geometryNode.geometry,this.material);sceneNode.frustumCulled=false;sceneNode.onBeforeRender=function(_this,scene,camera,geometry,material,group){if(material.program){_this.getContext().useProgram(material.program.program);if(material.program.getUniforms().map.level){var level=geometryNode.getLevel();material.uniforms.level.value=level;material.program.getUniforms().map.level.setValue(_this.getContext(),level);}if(_this40.visibleNodeTextureOffsets&&material.program.getUniforms().map.vnStart){var vnStart=_this40.visibleNodeTextureOffsets.get(node);material.uniforms.vnStart.value=vnStart;material.program.getUniforms().map.vnStart.setValue(_this.getContext(),vnStart);}if(material.program.getUniforms().map.pcIndex){var _i62=node.pcIndex?node.pcIndex:_this40.visibleNodes.indexOf(node);material.uniforms.pcIndex.value=_i62;material.program.getUniforms().map.pcIndex.setValue(_this.getContext(),_i62);}}};node.geometryNode=geometryNode;node.sceneNode=sceneNode;node.pointcloud=this;node.left=geometryNode.left;node.right=geometryNode.right;if(!parent){this.root=node;this.add(sceneNode);}else{parent.sceneNode.add(sceneNode);if(parent.left===geometryNode){parent.left=node;}else if(parent.right===geometryNode){parent.right=node;}}var disposeListener=function disposeListener(){parent.sceneNode.remove(node.sceneNode);if(parent.left===node){parent.left=geometryNode;}else if(parent.right===node){parent.right=geometryNode;}};geometryNode.oneTimeDisposeHandlers.push(disposeListener);return node;}},{key:"updateMaterial",value:function updateMaterial(material,visibleNodes,camera,renderer){material.fov=camera.fov*(Math.PI/180);material.screenWidth=renderer.domElement.clientWidth;material.screenHeight=renderer.domElement.clientHeight;material.spacing=this.pcoGeometry.spacing;material.near=camera.near;material.far=camera.far;// reduce shader source updates by setting maxLevel slightly higher than actually necessary
if(this.maxLevel>material.levels){material.levels=this.maxLevel+2;}//material.minSize = 3;
//material.uniforms.octreeSize.value = this.boundingBox.size().x;
var bbSize=this.boundingBox.getSize();material.bbSize=[bbSize.x,bbSize.y,bbSize.z];// update visibility texture
if(material.pointSizeType){if(material.pointSizeType===Potree.PointSizeType.ADAPTIVE||material.pointColorType===Potree.PointColorType.LOD){this.updateVisibilityTexture(material,visibleNodes);}}}},{key:"updateVisibleBounds",value:function updateVisibleBounds(){}},{key:"hideDescendants",value:function hideDescendants(object){var stack=[];for(var i=0;i<object.children.length;i++){var child=object.children[i];if(child.visible){stack.push(child);}}while(stack.length>0){var object=stack.shift();object.visible=false;if(object.boundingBoxNode){object.boundingBoxNode.visible=false;}for(var i=0;i<object.children.length;i++){var child=object.children[i];if(child.visible){stack.push(child);}}}}},{key:"updateMatrixWorld",value:function updateMatrixWorld(force){//node.matrixWorld.multiplyMatrices( node.parent.matrixWorld, node.matrix );
if(this.matrixAutoUpdate===true)this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||force===true){if(this.parent===undefined){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}}},{key:"nodesOnRay",value:function nodesOnRay(nodes,ray){var nodesOnRay=[];var _ray=ray.clone();for(var i=0;i<nodes.length;i++){var node=nodes[i];var sphere=node.getBoundingSphere().clone().applyMatrix4(node.sceneNode.matrixWorld);var box=node.getBoundingBox().clone().applyMatrix4(node.sceneNode.matrixWorld);if(_ray.intersectsSphere(sphere)){nodesOnRay.push(node);}//if(_ray.isIntersectionBox(box)){
//	nodesOnRay.push(node);
//}
}return nodesOnRay;}},{key:"pick",value:function pick(renderer,camera,ray){var _this41=this;var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};//let start = new Date().getTime();
var pickWindowSize=params.pickWindowSize||17;var pickOutsideClipRegion=params.pickOutsideClipRegion||false;var width=Math.ceil(renderer.domElement.clientWidth);var height=Math.ceil(renderer.domElement.clientHeight);var nodes=this.nodesOnRay(this.visibleNodes,ray);if(nodes.length===0){return null;}if(!this.pickState){var scene=new THREE.Scene();var _material=new Potree.PointCloudMaterial();_material.pointColorType=Potree.PointColorType.POINT_INDEX;var renderTarget=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat});this.pickState={renderTarget:renderTarget,material:_material,scene:scene};};var pickState=this.pickState;var pickMaterial=pickState.material;{// update pick material
pickMaterial.pointSizeType=this.material.pointSizeType;pickMaterial.shape=this.material.shape;pickMaterial.size=this.material.size;pickMaterial.minSize=this.material.minSize;pickMaterial.maxSize=this.material.maxSize;pickMaterial.classification=this.material.classification;if(pickOutsideClipRegion){pickMaterial.clipMode=Potree.ClipMode.DISABLED;}else{pickMaterial.clipMode=this.material.clipMode;if(this.material.clipMode===Potree.ClipMode.CLIP_OUTSIDE){pickMaterial.setClipBoxes(this.material.clipBoxes);}else{pickMaterial.setClipBoxes([]);}}this.updateMaterial(pickMaterial,nodes,camera,renderer);}if(pickState.renderTarget.width!=width||pickState.renderTarget.height!=height){pickState.renderTarget.dispose();pickState.renderTarget=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat});}pickState.renderTarget.setSize(width,height);renderer.setRenderTarget(pickState.renderTarget);var pixelPos=new THREE.Vector3().addVectors(camera.position,ray.direction).project(camera).addScalar(1).multiplyScalar(0.5);pixelPos.x*=width;pixelPos.y*=height;renderer.setScissor(parseInt(pixelPos.x-(pickWindowSize-1)/2),parseInt(pixelPos.y-(pickWindowSize-1)/2),parseInt(pickWindowSize),parseInt(pickWindowSize));renderer.setScissorTest(true);renderer.state.buffers.depth.setTest(pickMaterial.depthTest);renderer.state.buffers.depth.setMask(pickMaterial.depthWrite);renderer.state.setBlending(THREE.NoBlending);renderer.clearTarget(pickState.renderTarget,true,true,true);//pickState.scene.children = nodes.map(n => n.sceneNode);
//let childStates = [];
var tempNodes=[];var _loop4=function _loop4(_i63){var node=nodes[_i63];node.pcIndex=_i63+1;var sceneNode=node.sceneNode;var tempNode=new THREE.Points(sceneNode.geometry,pickMaterial);tempNode.matrix=sceneNode.matrix;tempNode.matrixWorld=sceneNode.matrixWorld;tempNode.matrixAutoUpdate=false;tempNode.frustumCulled=false;tempNode.pcIndex=_i63+1;var geometryNode=node.geometryNode;var material=pickMaterial;tempNode.onBeforeRender=function(_this,scene,camera,geometry,material,group){if(material.program){_this.getContext().useProgram(material.program.program);if(material.program.getUniforms().map.level){var level=geometryNode.getLevel();material.uniforms.level.value=level;material.program.getUniforms().map.level.setValue(_this.getContext(),level);}if(_this41.visibleNodeTextureOffsets&&material.program.getUniforms().map.vnStart){var vnStart=_this41.visibleNodeTextureOffsets.get(node);material.uniforms.vnStart.value=vnStart;material.program.getUniforms().map.vnStart.setValue(_this.getContext(),vnStart);}if(material.program.getUniforms().map.pcIndex){material.uniforms.pcIndex.value=node.pcIndex;material.program.getUniforms().map.pcIndex.setValue(_this.getContext(),node.pcIndex);}}};tempNodes.push(tempNode);//for(let child of nodes[i].sceneNode.children){
//	childStates.push({child: child, visible: child.visible});
//	child.visible = false;
//}
};for(var _i63=0;_i63<nodes.length;_i63++){_loop4(_i63);}pickState.scene.autoUpdate=false;pickState.scene.children=tempNodes;//pickState.scene.overrideMaterial = pickMaterial;
renderer.state.setBlending(THREE.NoBlending);// RENDER
renderer.render(pickState.scene,camera,pickState.renderTarget);//for(let childState of childStates){
//	childState.child = childState.visible;
//}
//pickState.scene.overrideMaterial = null;
//renderer.context.readPixels(
//	pixelPos.x - (pickWindowSize-1) / 2, pixelPos.y - (pickWindowSize-1) / 2, 
//	pickWindowSize, pickWindowSize, 
//	renderer.context.RGBA, renderer.context.UNSIGNED_BYTE, pixels);
var clamp=function clamp(number,min,max){return Math.min(Math.max(min,number),max);};var x=parseInt(clamp(pixelPos.x-(pickWindowSize-1)/2,0,width));var y=parseInt(clamp(pixelPos.y-(pickWindowSize-1)/2,0,height));var w=parseInt(Math.min(x+pickWindowSize,width)-x);var h=parseInt(Math.min(y+pickWindowSize,height)-y);var pixelCount=w*h;var buffer=new Uint8Array(4*pixelCount);renderer.readRenderTargetPixels(pickState.renderTarget,x,y,w,h,buffer);renderer.setScissorTest(false);renderer.setRenderTarget(null);var pixels=buffer;var ibuffer=new Uint32Array(buffer.buffer);// find closest hit inside pixelWindow boundaries
var min=Number.MAX_VALUE;var hit=null;for(var u=0;u<pickWindowSize;u++){for(var v=0;v<pickWindowSize;v++){var offset=u+v*pickWindowSize;var distance=Math.pow(u-(pickWindowSize-1)/2,2)+Math.pow(v-(pickWindowSize-1)/2,2);var pcIndex=pixels[4*offset+3];pixels[4*offset+3]=0;var pIndex=ibuffer[offset];//if((pIndex !== 0 || pcIndex !== 0) && distance < min){
if(pcIndex>0&&distance<min){hit={pIndex:pIndex,pcIndex:pcIndex-1};min=distance;//console.log(hit);
}}}//console.log(pixels);
//{ // open window with image
//	let img = Potree.utils.pixelsArrayToImage(buffer, w, h);
//	let screenshot = img.src;
//	
//	if(!this.debugDIV){
//		this.debugDIV = $(`
//			<div id="pickDebug" 
//			style="position: absolute; 
//			right: 400px; width: 300px;
//			bottom: 44px; width: 300px;
//			z-index: 1000;
//			"></div>`);
//		$(document.body).append(this.debugDIV);
//	}
//	
//	this.debugDIV.empty();
//	this.debugDIV.append($(`<img src="${screenshot}"
//		style="transform: scaleY(-1);"/>`));
//	//$(this.debugWindow.document).append($(`<img src="${screenshot}"/>`));
//	//this.debugWindow.document.write('<img src="'+screenshot+'"/>');
//}
//return;
var point=null;if(hit){point={};if(!nodes[hit.pcIndex]){return null;}var pc=nodes[hit.pcIndex].sceneNode;var attributes=pc.geometry.attributes;for(var property in attributes){if(attributes.hasOwnProperty(property)){var values=pc.geometry.attributes[property];if(property==="position"){var positionArray=values.array;var _x16=positionArray[3*hit.pIndex+0];var _y2=positionArray[3*hit.pIndex+1];var z=positionArray[3*hit.pIndex+2];var position=new THREE.Vector3(_x16,_y2,z);position.applyMatrix4(pc.matrixWorld);point[property]=position;}else if(property==="indices"){}else{if(values.itemSize===1){point[property]=values.array[hit.pIndex];}else{var value=[];for(var _j14=0;_j14<values.itemSize;_j14++){value.push(values.array[values.itemSize*hit.pIndex+_j14]);}point[property]=value;}}}}}//let end = new Date().getTime();
//let duration = end - start;
//console.log(`pick duration: ${duration}ms`);
return point;}},{key:"updateVisibilityTexture",value:function updateVisibilityTexture(material,visibleNodes){if(!material){return;}var texture=material.visibleNodesTexture;var data=texture.image.data;// copy array
visibleNodes=visibleNodes.slice();// sort by level and number
var sort=function sort(a,b){var la=a.geometryNode.level;var lb=b.geometryNode.level;var na=a.geometryNode.number;var nb=b.geometryNode.number;if(la!=lb)return la-lb;if(na<nb)return-1;if(na>nb)return 1;return 0;};visibleNodes.sort(sort);var visibleNodeNames=[];for(var i=0;i<visibleNodes.length;i++){//visibleNodeNames[visibleNodes[i].pcoGeometry.number] = true;
visibleNodeNames.push(visibleNodes[i].geometryNode.number);}for(var i=0;i<visibleNodes.length;i++){var node=visibleNodes[i];var b1=0;// children
var b2=0;// offset to first child
var b3=0;// split 
if(node.geometryNode.left&&visibleNodeNames.indexOf(node.geometryNode.left.number)>0){b1+=1;b2=visibleNodeNames.indexOf(node.geometryNode.left.number)-i;}if(node.geometryNode.right&&visibleNodeNames.indexOf(node.geometryNode.right.number)>0){b1+=2;b2=b2===0?visibleNodeNames.indexOf(node.geometryNode.right.number)-i:b2;}if(node.geometryNode.split==="X"){b3=1;}else if(node.geometryNode.split==="Y"){b3=2;}else if(node.geometryNode.split==="Z"){b3=4;}data[i*3+0]=b1;data[i*3+1]=b2;data[i*3+2]=b3;}texture.needsUpdate=true;}},{key:"progress",get:function get(){if(this.pcoGeometry.root){return Potree.PointCloudArena4DGeometryNode.nodesLoading>0?0:1;}else{return 0;}}}]);return PointCloudArena4D;}(Potree.PointCloudTree);Potree.PointCloudArena4DGeometryNode=function(){var scope=this;this.left=null;this.right=null;this.boundingBox=null;this.number=null;this.pcoGeometry=null;this.loaded=false;this.numPoints=0;this.level=0;this.children=[];this.oneTimeDisposeHandlers=[];};Potree.PointCloudArena4DGeometryNode.nodesLoading=0;Potree.PointCloudArena4DGeometryNode.prototype.isGeometryNode=function(){return true;};Potree.PointCloudArena4DGeometryNode.prototype.isTreeNode=function(){return false;};Potree.PointCloudArena4DGeometryNode.prototype.isLoaded=function(){return this.loaded;};Potree.PointCloudArena4DGeometryNode.prototype.getBoundingSphere=function(){return this.boundingSphere;};Potree.PointCloudArena4DGeometryNode.prototype.getBoundingBox=function(){return this.boundingBox;};Potree.PointCloudArena4DGeometryNode.prototype.getChildren=function(){var children=[];if(this.left){children.push(this.left);}if(this.right){children.push(this.right);}return children;};Potree.PointCloudArena4DGeometryNode.prototype.getBoundingBox=function(){return this.boundingBox;};Potree.PointCloudArena4DGeometryNode.prototype.getLevel=function(){return this.level;};Potree.PointCloudArena4DGeometryNode.prototype.load=function(){if(this.loaded||this.loading){return;}if(Potree.PointCloudArena4DGeometryNode.nodesLoading>=5){return;}this.loading=true;Potree.PointCloudArena4DGeometryNode.nodesLoading++;var url=this.pcoGeometry.url+"?node="+this.number;var xhr=new XMLHttpRequest();xhr.open("GET",url,true);xhr.responseType="arraybuffer";var scope=this;xhr.onreadystatechange=function(){if(!(xhr.readyState===4&&xhr.status===200)){return;}var buffer=xhr.response;var view=new DataView(buffer);var numPoints=buffer.byteLength/17;var positions=new Float32Array(numPoints*3);var colors=new Uint8Array(numPoints*3);var indices=new ArrayBuffer(numPoints*4);var iIndices=new Uint32Array(indices);for(var i=0;i<numPoints;i++){var x=view.getFloat32(i*17+0,true)+scope.boundingBox.min.x;var y=view.getFloat32(i*17+4,true)+scope.boundingBox.min.y;var z=view.getFloat32(i*17+8,true)+scope.boundingBox.min.z;var r=view.getUint8(i*17+12,true);var g=view.getUint8(i*17+13,true);var b=view.getUint8(i*17+14,true);positions[i*3+0]=x;positions[i*3+1]=y;positions[i*3+2]=z;colors[i*3+0]=r;colors[i*3+1]=g;colors[i*3+2]=b;iIndices[i]=i;}var geometry=new THREE.BufferGeometry();geometry.addAttribute("position",new THREE.BufferAttribute(positions,3));geometry.addAttribute("color",new THREE.BufferAttribute(colors,3,true));geometry.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(numPoints*3),3));var indicesAttribute=new THREE.Uint8BufferAttribute(indices,4);indicesAttribute.normalized=true;geometry.addAttribute("indices",indicesAttribute);scope.geometry=geometry;scope.loaded=true;Potree.PointCloudArena4DGeometryNode.nodesLoading--;geometry.boundingBox=scope.boundingBox;geometry.boundingSphere=scope.boundingSphere;scope.numPoints=numPoints;scope.loading=false;};xhr.send(null);};Potree.PointCloudArena4DGeometryNode.prototype.dispose=function(){if(this.geometry&&this.parent!=null){this.geometry.dispose();this.geometry=null;this.loaded=false;//this.dispatchEvent( { type: 'dispose' } );
for(var i=0;i<this.oneTimeDisposeHandlers.length;i++){var handler=this.oneTimeDisposeHandlers[i];handler();}this.oneTimeDisposeHandlers=[];}};Potree.PointCloudArena4DGeometryNode.prototype.getNumPoints=function(){return this.numPoints;};Potree.PointCloudArena4DGeometry=function(){var scope=this;this.numPoints=0;this.version=0;this.boundingBox=null;this.numNodes=0;this.name=null;this.provider=null;this.url=null;this.root=null;this.levels=0;this._spacing=null;this.pointAttributes=new Potree.PointAttributes(["POSITION_CARTESIAN","COLOR_PACKED"]);};Potree.PointCloudArena4DGeometry.prototype=Object.create(THREE.EventDispatcher.prototype);Potree.PointCloudArena4DGeometry.load=function(url,callback){var xhr=new XMLHttpRequest();xhr.open('GET',url+"?info",true);xhr.onreadystatechange=function(){try{if(xhr.readyState===4&&xhr.status===200){var response=JSON.parse(xhr.responseText);var geometry=new Potree.PointCloudArena4DGeometry();geometry.url=url;geometry.name=response.Name;geometry.provider=response.Provider;geometry.numNodes=response.Nodes;geometry.numPoints=response.Points;geometry.version=response.Version;geometry.boundingBox=new THREE.Box3(new THREE.Vector3().fromArray(response.BoundingBox.slice(0,3)),new THREE.Vector3().fromArray(response.BoundingBox.slice(3,6)));if(response.Spacing){geometry.spacing=response.Spacing;}var offset=geometry.boundingBox.min.clone().multiplyScalar(-1);geometry.boundingBox.min.add(offset);geometry.boundingBox.max.add(offset);geometry.offset=offset;var center=geometry.boundingBox.getCenter();var radius=geometry.boundingBox.getSize().length()/2;geometry.boundingSphere=new THREE.Sphere(center,radius);geometry.loadHierarchy();callback(geometry);}else if(xhr.readyState===4){callback(null);}}catch(e){console.error(e.message);callback(null);}};xhr.send(null);};Potree.PointCloudArena4DGeometry.prototype.loadHierarchy=function(){var url=this.url+"?tree";var xhr=new XMLHttpRequest();xhr.open("GET",url,true);xhr.responseType="arraybuffer";var scope=this;xhr.onreadystatechange=function(){if(!(xhr.readyState===4&&xhr.status===200)){return;}var buffer=xhr.response;var numNodes=buffer.byteLength/3;var view=new DataView(buffer);var stack=[];var root=null;var levels=0;var start=new Date().getTime();// read hierarchy
for(var i=0;i<numNodes;i++){var mask=view.getUint8(i*3+0,true);var numPoints=view.getUint16(i*3+1,true);var hasLeft=(mask&1)>0;var hasRight=(mask&2)>0;var splitX=(mask&4)>0;var splitY=(mask&8)>0;var splitZ=(mask&16)>0;var split=null;if(splitX){split="X";}else if(splitY){split="Y";}if(splitZ){split="Z";}var node=new Potree.PointCloudArena4DGeometryNode();node.hasLeft=hasLeft;node.hasRight=hasRight;node.split=split;node.isLeaf=!hasLeft&&!hasRight;node.number=i;node.left=null;node.right=null;node.pcoGeometry=scope;node.level=stack.length;levels=Math.max(levels,node.level);if(stack.length>0){var parent=stack[stack.length-1];node.boundingBox=parent.boundingBox.clone();var parentBBSize=parent.boundingBox.getSize();if(parent.hasLeft&&!parent.left){parent.left=node;parent.children.push(node);if(parent.split==="X"){node.boundingBox.max.x=node.boundingBox.min.x+parentBBSize.x/2;}else if(parent.split==="Y"){node.boundingBox.max.y=node.boundingBox.min.y+parentBBSize.y/2;}else if(parent.split==="Z"){node.boundingBox.max.z=node.boundingBox.min.z+parentBBSize.z/2;}var center=node.boundingBox.getCenter();var radius=node.boundingBox.getSize().length()/2;node.boundingSphere=new THREE.Sphere(center,radius);}else{parent.right=node;parent.children.push(node);if(parent.split==="X"){node.boundingBox.min.x=node.boundingBox.min.x+parentBBSize.x/2;}else if(parent.split==="Y"){node.boundingBox.min.y=node.boundingBox.min.y+parentBBSize.y/2;}else if(parent.split==="Z"){node.boundingBox.min.z=node.boundingBox.min.z+parentBBSize.z/2;}var center=node.boundingBox.getCenter();var radius=node.boundingBox.getSize().length()/2;node.boundingSphere=new THREE.Sphere(center,radius);}}else{root=node;root.boundingBox=scope.boundingBox.clone();var center=root.boundingBox.getCenter();var radius=root.boundingBox.getSize().length()/2;root.boundingSphere=new THREE.Sphere(center,radius);}var bbSize=node.boundingBox.getSize();node.spacing=(bbSize.x+bbSize.y+bbSize.z)/3/75;stack.push(node);if(node.isLeaf){var done=false;while(!done&&stack.length>0){stack.pop();var top=stack[stack.length-1];done=stack.length>0&&top.hasRight&&top.right==null;}}}var end=new Date().getTime();var parseDuration=end-start;var msg=parseDuration;//document.getElementById("lblDebug").innerHTML = msg;
scope.root=root;scope.levels=levels;//console.log(this.root);
scope.dispatchEvent({type:"hierarchy_loaded"});};xhr.send(null);};Object.defineProperty(Potree.PointCloudArena4DGeometry.prototype,"spacing",{get:function get(){if(this._spacing){return this._spacing;}else if(this.root){return this.root.spacing;}else{null;}},set:function set(value){this._spacing=value;}});function ProgressBar(){this._progress=0;this._message="";this.maxOpacity=0.6;this.element=document.createElement("div");this.elProgress=document.createElement("div");this.elProgressMessage=document.createElement("div");//this.element.innerHTML = "element";
//this.elProgress.innerHTML = "progress";
this.element.innerHTML="";this.element.style.position="fixed";this.element.style.bottom="40px";this.element.style.width="200px";this.element.style.marginLeft="-100px";this.element.style.left="50%";this.element.style.borderRadius="5px";this.element.style.border="1px solid #727678";this.element.style.height="16px";this.element.style.padding="1px";this.element.style.textAlign="center";this.element.style.backgroundColor="#6ba8e5";this.element.style.opacity=this.maxOpacity;this.element.style.pointerEvents="none";this.elProgress.innerHTML=" ";this.elProgress.style.backgroundColor="#b8e1fc";this.elProgress.style.position="absolute";this.elProgress.style.borderRadius="5px";this.elProgress.style.width="0%";this.elProgress.style.height="100%";this.elProgress.style.margin="0px";this.elProgress.style.padding="0px";this.elProgressMessage.style.position="absolute";this.elProgressMessage.style.width="100%";this.elProgressMessage.innerHTML="loading 1 / 10";document.body.appendChild(this.element);this.element.appendChild(this.elProgress);this.element.appendChild(this.elProgressMessage);this.hide();};ProgressBar.prototype.hide=function(){this.element.style.opacity=0;this.element.style.transition="all 0.2s ease";};ProgressBar.prototype.show=function(){this.element.style.opacity=this.maxOpacity;this.element.style.transition="all 0.2s ease";};Object.defineProperty(ProgressBar.prototype,"progress",{get:function get(){return this._progress;},set:function set(value){this._progress=value;this.elProgress.style.width=value*100+"%";}});Object.defineProperty(ProgressBar.prototype,"message",{get:function get(){return this._message;},set:function set(message){this._message=message;this.elProgressMessage.innerHTML=message;}});//let getQueryParam = function(name) {
//    name = name.replace(/[\[\]]/g, "\\$&");
//    let regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
//        results = regex.exec(window.location.href);
//    if (!results) return null;
//    if (!results[2]) return '';
//    return decodeURIComponent(results[2].replace(/\+/g, " "));
//}
Potree.View=function(){function _class8(){_classCallCheck(this,_class8);this.position=new THREE.Vector3(0,0,0);this.yaw=Math.PI/4;this._pitch=-Math.PI/4;this.radius=1;this.maxPitch=Math.PI/2;this.minPitch=-Math.PI/2;this.navigationMode=Potree.OrbitControls;}_createClass(_class8,[{key:"clone",value:function clone(){var c=new Potree.View();c.yaw=this.yaw;c._pitch=this.pitch;c.radius=this.radius;c.maxPitch=this.maxPitch;c.minPitch=this.minPitch;c.navigationMode=this.navigationMode;return c;}},{key:"lookAt",value:function lookAt(t){var V=new THREE.Vector3().subVectors(t,this.position);var radius=V.length();var dir=V.normalize();this.radius=radius;this.direction=dir;}},{key:"getPivot",value:function getPivot(){return new THREE.Vector3().addVectors(this.position,this.direction.multiplyScalar(this.radius));}},{key:"getSide",value:function getSide(){var side=new THREE.Vector3(1,0,0);side.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);return side;}},{key:"pan",value:function pan(x,y){var dir=new THREE.Vector3(0,1,0);dir.applyAxisAngle(new THREE.Vector3(1,0,0),this.pitch);dir.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);//let side = new THREE.Vector3(1, 0, 0);
//side.applyAxisAngle(new THREE.Vector3(0, 0, 1), this.yaw);
var side=this.getSide();var up=side.clone().cross(dir);var pan=side.multiplyScalar(x).add(up.multiplyScalar(y));this.position=this.position.add(pan);//this.target = this.target.add(pan);
}},{key:"translate",value:function translate(x,y,z){var dir=new THREE.Vector3(0,1,0);dir.applyAxisAngle(new THREE.Vector3(1,0,0),this.pitch);dir.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);var side=new THREE.Vector3(1,0,0);side.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);var up=side.clone().cross(dir);var t=side.multiplyScalar(x).add(dir.multiplyScalar(y)).add(up.multiplyScalar(z));this.position=this.position.add(t);}},{key:"translateWorld",value:function translateWorld(x,y,z){this.position.x+=x;this.position.y+=y;this.position.z+=z;}},{key:"pitch",get:function get(){return this._pitch;},set:function set(angle){this._pitch=Math.max(Math.min(angle,this.maxPitch),this.minPitch);}},{key:"direction",get:function get(){var dir=new THREE.Vector3(0,1,0);dir.applyAxisAngle(new THREE.Vector3(1,0,0),this.pitch);dir.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);return dir;},set:function set(dir){var yaw=Math.atan2(dir.y,dir.x)-Math.PI/2;var pitch=Math.atan2(dir.z,Math.sqrt(dir.x*dir.x+dir.y*dir.y));this.yaw=yaw;this.pitch=pitch;}}]);return _class8;}();Potree.Scene=function(_THREE$EventDispatche10){_inherits(_class9,_THREE$EventDispatche10);function _class9(){_classCallCheck(this,_class9);var _this42=_possibleConstructorReturn(this,(_class9.__proto__||Object.getPrototypeOf(_class9)).call(this));_this42.annotations=new Potree.Annotation();_this42.scene=new THREE.Scene();_this42.scenePointCloud=new THREE.Scene();_this42.sceneBG=new THREE.Scene();_this42.camera=new THREE.PerspectiveCamera(_this42.fov,1,0.1,1000*1000);_this42.cameraBG=new THREE.Camera();_this42.pointclouds=[];_this42.referenceFrame;_this42.measurements=[];_this42.profiles=[];_this42.volumes=[];_this42.fpControls;_this42.orbitControls;_this42.earthControls;_this42.geoControls;_this42.inputHandler;_this42.view=new Potree.View();_this42.directionalLight=null;_this42.initialize();return _this42;}_createClass(_class9,[{key:"estimateHeightAt",value:function estimateHeightAt(position){var height=null;var fromSpacing=Infinity;var _iteratorNormalCompletion55=true;var _didIteratorError55=false;var _iteratorError55=undefined;try{for(var _iterator55=this.pointclouds[Symbol.iterator](),_step55;!(_iteratorNormalCompletion55=(_step55=_iterator55.next()).done);_iteratorNormalCompletion55=true){var pointcloud=_step55.value;if(pointcloud.root.geometryNode===undefined){continue;}var pHeight=null;var pFromSpacing=Infinity;var lpos=position.clone().sub(pointcloud.position);lpos.z=0;var ray=new THREE.Ray(lpos,new THREE.Vector3(0,0,1));var stack=[pointcloud.root];while(stack.length>0){var _node4=stack.pop();var box=_node4.getBoundingBox();var inside=ray.intersectBox(box);if(!inside){continue;}var h=_node4.geometryNode.mean.z+pointcloud.position.z+_node4.geometryNode.boundingBox.min.z;if(_node4.geometryNode.spacing<=pFromSpacing){pHeight=h;pFromSpacing=_node4.geometryNode.spacing;}var _iteratorNormalCompletion56=true;var _didIteratorError56=false;var _iteratorError56=undefined;try{for(var _iterator56=Object.keys(_node4.children)[Symbol.iterator](),_step56;!(_iteratorNormalCompletion56=(_step56=_iterator56.next()).done);_iteratorNormalCompletion56=true){var index=_step56.value;var child=_node4.children[index];if(child.geometryNode){stack.push(_node4.children[index]);}}}catch(err){_didIteratorError56=true;_iteratorError56=err;}finally{try{if(!_iteratorNormalCompletion56&&_iterator56.return){_iterator56.return();}}finally{if(_didIteratorError56){throw _iteratorError56;}}}}if(height===null||pFromSpacing<fromSpacing){height=pHeight;fromSpacing=pFromSpacing;}}}catch(err){_didIteratorError55=true;_iteratorError55=err;}finally{try{if(!_iteratorNormalCompletion55&&_iterator55.return){_iterator55.return();}}finally{if(_didIteratorError55){throw _iteratorError55;}}}return height;}},{key:"addPointCloud",value:function addPointCloud(pointcloud){this.pointclouds.push(pointcloud);this.scenePointCloud.add(pointcloud);this.dispatchEvent({type:"pointcloud_added",pointcloud:pointcloud});}},{key:"addVolume",value:function addVolume(volume){this.volumes.push(volume);this.dispatchEvent({"type":"volume_added","scene":this,"volume":volume});}},{key:"removeVolume",value:function removeVolume(volume){var index=this.volumes.indexOf(volume);if(index>-1){this.volumes.splice(index,1);this.dispatchEvent({"type":"volume_removed","scene":this,"volume":volume});}}},{key:"addMeasurement",value:function addMeasurement(measurement){measurement.lengthUnit=this.lengthUnit;this.measurements.push(measurement);this.dispatchEvent({"type":"measurement_added","scene":this,"measurement":measurement});}},{key:"removeMeasurement",value:function removeMeasurement(measurement){var index=this.measurements.indexOf(measurement);if(index>-1){this.measurements.splice(index,1);this.dispatchEvent({"type":"measurement_removed","scene":this,"measurement":measurement});}}},{key:"addProfile",value:function addProfile(profile){this.profiles.push(profile);this.dispatchEvent({"type":"profile_added","scene":this,"profile":profile});}},{key:"removeProfile",value:function removeProfile(profile){var index=this.profiles.indexOf(profile);if(index>-1){this.profiles.splice(index,1);this.dispatchEvent({"type":"profile_removed","scene":this,"profile":profile});}}},{key:"removeAllMeasurements",value:function removeAllMeasurements(){while(this.measurements.length>0){this.removeMeasurement(this.measurements[0]);}while(this.profiles.length>0){this.removeProfile(this.profiles[0]);}while(this.volumes.length>0){this.removeVolume(this.volumes[0]);}}},{key:"initialize",value:function initialize(){this.referenceFrame=new THREE.Object3D();this.referenceFrame.matrixAutoUpdate=false;this.scenePointCloud.add(this.referenceFrame);this.camera.up.set(0,0,1);this.camera.position.set(1000,1000,1000);//this.camera.rotation.y = -Math.PI / 4;
//this.camera.rotation.x = -Math.PI / 6;
this.directionalLight=new THREE.DirectionalLight(0xffffff,0.5);this.directionalLight.position.set(10,10,10);this.directionalLight.lookAt(new THREE.Vector3(0,0,0));this.scenePointCloud.add(this.directionalLight);var light=new THREE.AmbientLight(0x555555);// soft white light
this.scenePointCloud.add(light);var grid=Potree.utils.createGrid(5,5,2);this.scene.add(grid);{// background
// var texture = THREE.ImageUtils.loadTexture( Potree.resourcePath + '/textures/background.gif' );
var texture=Potree.utils.createBackgroundTexture(512,512);texture.minFilter=texture.magFilter=THREE.NearestFilter;texture.minFilter=texture.magFilter=THREE.LinearFilter;var bg=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,0),new THREE.MeshBasicMaterial({map:texture}));bg.material.depthTest=false;bg.material.depthWrite=false;this.sceneBG.add(bg);}{// lights
{var _light=new THREE.DirectionalLight(0xffffff);_light.position.set(10,10,1);_light.target.position.set(0,0,0);this.scene.add(_light);}{var _light2=new THREE.DirectionalLight(0xffffff);_light2.position.set(-10,10,1);_light2.target.position.set(0,0,0);this.scene.add(_light2);}{var _light3=new THREE.DirectionalLight(0xffffff);_light3.position.set(0,-10,20);_light3.target.position.set(0,0,0);this.scene.add(_light3);}}}},{key:"addAnnotation",value:function addAnnotation(position){var args=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(position instanceof Array){args.position=new THREE.Vector3().fromArray(position);}else if(position instanceof THREE.Vector3){args.position=position;}var annotation=new Potree.Annotation(args);this.annotations.add(annotation);}},{key:"getAnnotations",value:function getAnnotations(){return this.annotations;}}]);return _class9;}(THREE.EventDispatcher);Potree.Viewer=function(_THREE$EventDispatche11){_inherits(PotreeViewer,_THREE$EventDispatche11);function PotreeViewer(domElement,args){_classCallCheck(this,PotreeViewer);var _this43=_possibleConstructorReturn(this,(PotreeViewer.__proto__||Object.getPrototypeOf(PotreeViewer)).call(this));{// generate missing dom hierarchy
if($(domElement).find("#potree_map").length===0){var potreeMap=$("\n\t\t\t\t\t<div id=\"potree_map\" class=\"mapBox\" style=\"position: absolute; left: 50px; top: 50px; width: 400px; height: 400px; display: none\">\n\t\t\t\t\t\t<div id=\"potree_map_header\" style=\"position: absolute; width: 100%; height: 25px; top: 0px; background-color: rgba(0,0,0,0.5); z-index: 1000; border-top-left-radius: 3px; border-top-right-radius: 3px;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"potree_map_content\" class=\"map\" style=\"position: absolute; z-index: 100; top: 25px; width: 100%; height: calc(100% - 25px); border: 2px solid rgba(0,0,0,0.5); box-sizing: border-box;\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t");$(domElement).append(potreeMap);}if($(domElement).find("#potree_description").length===0){var potreeDescription=$("<div id=\"potree_description\" class=\"potree_info_text\"></div>");$(domElement).append(potreeDescription);}}var a=args||{};_this43.pointCloudLoadedCallback=a.onPointCloudLoaded||function(){};_this43.renderArea=domElement;//if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
//	defaultSettings.navigation = "Orbit";
//}
_this43.server=null;_this43.fov=60;_this43.clipMode=Potree.ClipMode.HIGHLIGHT_INSIDE;_this43.isFlipYZ=false;_this43.useDEMCollisions=false;_this43.generateDEM=false;_this43.minNodeSize=100;_this43.directionalLight;_this43.edlStrength=1.0;_this43.edlRadius=1.4;_this43.useEDL=false;_this43.classifications={0:{visible:true,name:"never classified"},1:{visible:true,name:"unclassified"},2:{visible:true,name:"ground"},3:{visible:true,name:"low vegetation"},4:{visible:true,name:"medium vegetation"},5:{visible:true,name:"high vegetation"},6:{visible:true,name:"building"},7:{visible:true,name:"low point(noise)"},8:{visible:true,name:"key-point"},9:{visible:true,name:"water"},12:{visible:true,name:"overlap"}};_this43.moveSpeed=10;_this43.LENGTH_UNITS={METER:{code:"m"},FEET:{code:"ft"},INCH:{code:"\u2033"}};_this43.lengthUnit=_this43.LENGTH_UNITS.METER;_this43.showBoundingBox=false;_this43.showAnnotations=true;_this43.freeze=false;_this43.mapView;_this43.progressBar=new ProgressBar();_this43.stats=new Stats();//this.stats.showPanel( 0 ); // 0: fps, 1: ms, 2: mb, 3+: custom
//document.body.appendChild( this.stats.dom );
//this.stats.dom.style.left = "100px";
_this43.potreeRenderer=null;_this43.edlRenderer=null;_this43.renderer=null;_this43.scene=null;_this43.inputHandler=null;_this43.measuringTool=null;_this43.profileTool=null;_this43.volumeTool=null;_this43.transformationTool=null;_this43.skybox=null;_this43.clock=new THREE.Clock();_this43.background=null;_this43.initThree();var scene=new Potree.Scene(_this43.renderer);_this43.setScene(scene);{_this43.inputHandler=new Potree.InputHandler(_this43);_this43.inputHandler.setScene(_this43.scene);_this43.measuringTool=new Potree.MeasuringTool(_this43);_this43.profileTool=new Potree.ProfileTool(_this43);_this43.volumeTool=new Potree.VolumeTool(_this43);_this43.transformationTool=new Potree.TransformationTool(_this43);_this43.createControls();_this43.measuringTool.setScene(_this43.scene);_this43.profileTool.setScene(_this43.scene);_this43.volumeTool.setScene(_this43.scene);var onPointcloudAdded=function onPointcloudAdded(e){if(_this43.scene.pointclouds.length===1){var speed=e.pointcloud.boundingBox.getSize().length();speed=speed/5;_this43.setMoveSpeed(speed);}};_this43.addEventListener("scene_changed",function(e){_this43.inputHandler.setScene(e.scene);_this43.measuringTool.setScene(e.scene);_this43.profileTool.setScene(e.scene);_this43.volumeTool.setScene(e.scene);if(!e.scene.hasEventListener("pointcloud_added",onPointcloudAdded)){e.scene.addEventListener("pointcloud_added",onPointcloudAdded);}});_this43.scene.addEventListener("pointcloud_added",onPointcloudAdded);}{// set defaults
_this43.setFOV(60);_this43.setEDLEnabled(false);_this43.setEDLRadius(1.4);_this43.setEDLStrength(0.4);_this43.setClipMode(Potree.ClipMode.HIGHLIGHT_INSIDE);_this43.setPointBudget(1*1000*1000);_this43.setShowBoundingBox(false);_this43.setFreeze(false);_this43.setNavigationMode(Potree.OrbitControls);_this43.setBackground("gradient");_this43.scaleFactor=1;_this43.loadSettingsFromURL();}// start rendering!
requestAnimationFrame(_this43.loop.bind(_this43));return _this43;}//------------------------------------------------------------------------------------
// Viewer API 
//------------------------------------------------------------------------------------
_createClass(PotreeViewer,[{key:"setScene",value:function setScene(scene){var _this44=this;if(scene===this.scene){return;}var oldScene=this.scene;this.scene=scene;this.dispatchEvent({type:"scene_changed",oldScene:oldScene,scene:scene});{// Annotations
$(".annotation").detach();//for(let annotation of this.scene.annotations){
//	this.renderArea.appendChild(annotation.domElement[0]);
//}
this.scene.annotations.traverse(function(annotation){_this44.renderArea.appendChild(annotation.domElement[0]);});if(!this.onAnnotationAdded){this.onAnnotationAdded=function(e){//console.log("annotation added: " + e.annotation.title);
e.annotation.traverse(function(node){_this44.renderArea.appendChild(node.domElement[0]);node.scene=_this44.scene;});};}if(oldScene){oldScene.annotations.removeEventListener("annotation_added",this.onAnnotationAdded);}this.scene.annotations.addEventListener("annotation_added",this.onAnnotationAdded);}}},{key:"getControls",value:function getControls(navigationMode){if(navigationMode===Potree.OrbitControls){return this.orbitControls;}else if(navigationMode===Potree.FirstPersonControls){return this.fpControls;}else if(navigationMode===Potree.EarthControls){return this.earthControls;}else{return null;}}},{key:"getMinNodeSize",value:function getMinNodeSize(){return this.minNodeSize;}},{key:"setMinNodeSize",value:function setMinNodeSize(value){if(this.minNodeSize!==value){this.minNodeSize=value;this.dispatchEvent({"type":"minnodesize_changed","viewer":this});}}},{key:"getBackground",value:function getBackground(){return this.background;}},{key:"setBackground",value:function setBackground(bg){if(this.background===bg){return;}this.background=bg;this.dispatchEvent({"type":"background_changed","viewer":this});}},{key:"setDescription",value:function setDescription(value){$('#potree_description')[0].innerHTML=value;}},{key:"setNavigationMode",value:function setNavigationMode(value){this.scene.view.navigationMode=value;}},{key:"setShowBoundingBox",value:function setShowBoundingBox(value){if(this.showBoundingBox!==value){this.showBoundingBox=value;this.dispatchEvent({"type":"show_boundingbox_changed","viewer":this});}}},{key:"getShowBoundingBox",value:function getShowBoundingBox(){return showBoundingBox;}},{key:"setMoveSpeed",value:function setMoveSpeed(value){if(this.moveSpeed!==value){this.moveSpeed=value;this.dispatchEvent({"type":"move_speed_changed","viewer":this,"speed":value});}}},{key:"getMoveSpeed",value:function getMoveSpeed(){return this.moveSpeed;}},{key:"setWeightClassification",value:function setWeightClassification(w){for(var _i64=0;_i64<this.scene.pointclouds.length;_i64++){this.scene.pointclouds[_i64].material.weightClassification=w;this.dispatchEvent({"type":"attribute_weights_changed"+_i64,"viewer":this});}}},{key:"setFreeze",value:function setFreeze(value){if(this.freeze!=value){this.freeze=value;this.dispatchEvent({"type":"freeze_changed","viewer":this});}}},{key:"getFreeze",value:function getFreeze(){return this.freeze;}},{key:"setPointBudget",value:function setPointBudget(value){if(Potree.pointBudget!==value){Potree.pointBudget=parseInt(value);this.dispatchEvent({"type":"point_budget_changed","viewer":this});}}},{key:"getPointBudget",value:function getPointBudget(){return Potree.pointBudget;}},{key:"setShowAnnotations",value:function setShowAnnotations(value){if(this.showAnnotations!==value){this.showAnnotations=value;this.dispatchEvent({"type":"show_annotations_changed","viewer":this});}}},{key:"getShowAnnotations",value:function getShowAnnotations(){return this.showAnnotations;}},{key:"setClipMode",value:function setClipMode(clipMode){if(this.clipMode!==clipMode){this.clipMode=clipMode;this.dispatchEvent({"type":"clip_mode_changed","viewer":this});}}},{key:"getClipMode",value:function getClipMode(){return this.clipMode;}},{key:"setDEMCollisionsEnabled",value:function setDEMCollisionsEnabled(value){if(this.useDEMCollisions!==value){this.useDEMCollisions=value;this.dispatchEvent({"type":"use_demcollisions_changed","viewer":this});};}},{key:"getDEMCollisionsEnabled",value:function getDEMCollisionsEnabled(){return this.useDEMCollisions;}},{key:"setEDLEnabled",value:function setEDLEnabled(value){if(this.useEDL!=value){this.useEDL=value;this.dispatchEvent({"type":"use_edl_changed","viewer":this});}}},{key:"getEDLEnabled",value:function getEDLEnabled(){return this.useEDL;}},{key:"setEDLRadius",value:function setEDLRadius(value){if(this.edlRadius!==value){this.edlRadius=value;this.dispatchEvent({"type":"edl_radius_changed","viewer":this});}}},{key:"getEDLRadius",value:function getEDLRadius(){return this.edlRadius;}},{key:"setEDLStrength",value:function setEDLStrength(value){if(this.edlStrength!==value){this.edlStrength=value;this.dispatchEvent({"type":"edl_strength_changed","viewer":this});}}},{key:"getEDLStrength",value:function getEDLStrength(){return this.edlStrength;}},{key:"setFOV",value:function setFOV(value){if(this.fov!==value){this.fov=value;this.dispatchEvent({"type":"fov_changed","viewer":this});}}},{key:"getFOV",value:function getFOV(){return this.fov;}},{key:"disableAnnotations",value:function disableAnnotations(){this.scene.annotations.traverse(function(annotation){annotation.domElement.css("pointer-events","none");//return annotation.visible;
});}},{key:"enableAnnotations",value:function enableAnnotations(){this.scene.annotations.traverse(function(annotation){annotation.domElement.css("pointer-events","auto");//return annotation.visible;
});}},{key:"setClassificationVisibility",value:function setClassificationVisibility(key,value){if(!this.classifications[key]){this.classifications[key]={visible:value,name:"no name"};this.dispatchEvent({"type":"classification_visibility_changed","viewer":this});}else if(this.classifications[key].visible!==value){this.classifications[key].visible=value;this.dispatchEvent({"type":"classification_visibility_changed","viewer":this});}}},{key:"setLengthUnit",value:function setLengthUnit(value){switch(value){case"m":this.lengthUnit=this.LENGTH_UNITS.METER;break;case"ft":this.lengthUnit=this.LENGTH_UNITS.FEET;break;case"in":this.lengthUnit=this.LENGTH_UNITS.INCH;break;}this.dispatchEvent({"type":"length_unit_changed","viewer":this,value:value});}},{key:"toMaterialID",value:function toMaterialID(materialName){if(materialName==="RGB"){return Potree.PointColorType.RGB;}else if(materialName==="Color"){return Potree.PointColorType.COLOR;}else if(materialName==="Elevation"){return Potree.PointColorType.HEIGHT;}else if(materialName==="Intensity"){return Potree.PointColorType.INTENSITY;}else if(materialName==="Intensity Gradient"){return Potree.PointColorType.INTENSITY_GRADIENT;}else if(materialName==="Classification"){return Potree.PointColorType.CLASSIFICATION;}else if(materialName==="Return Number"){return Potree.PointColorType.RETURN_NUMBER;}else if(materialName==="Source"){return Potree.PointColorType.SOURCE;}else if(materialName==="Level of Detail"){return Potree.PointColorType.LOD;}else if(materialName==="Point Index"){return Potree.PointColorType.POINT_INDEX;}else if(materialName==="Normal"){return Potree.PointColorType.NORMAL;}else if(materialName==="Phong"){return Potree.PointColorType.PHONG;}else if(materialName==="RGB and Elevation"){return Potree.PointColorType.RGB_HEIGHT;}else if(materialName==="Composite"){return Potree.PointColorType.COMPOSITE;}}},{key:"toMaterialName",value:function toMaterialName(materialID){if(materialID===Potree.PointColorType.RGB){return"RGB";}else if(materialID===Potree.PointColorType.COLOR){return"Color";}else if(materialID===Potree.PointColorType.HEIGHT){return"Elevation";}else if(materialID===Potree.PointColorType.INTENSITY){return"Intensity";}else if(materialID===Potree.PointColorType.INTENSITY_GRADIENT){return"Intensity Gradient";}else if(materialID===Potree.PointColorType.CLASSIFICATION){return"Classification";}else if(materialID===Potree.PointColorType.RETURN_NUMBER){return"Return Number";}else if(materialID===Potree.PointColorType.SOURCE){return"Source";}else if(materialID===Potree.PointColorType.LOD){return"Level of Detail";}else if(materialID===Potree.PointColorType.POINT_INDEX){return"Point Index";}else if(materialID===Potree.PointColorType.NORMAL){return"Normal";}else if(materialID===Potree.PointColorType.PHONG){return"Phong";}else if(materialID===Potree.PointColorType.RGB_HEIGHT){return"RGB and Elevation";}else if(materialID===Potree.PointColorType.COMPOSITE){return"Composite";}}},{key:"zoomTo",value:function zoomTo(node,factor){var view=this.scene.view;var camera=this.scene.camera.clone();camera.position.copy(view.position);camera.rotation.order="ZXY";camera.rotation.x=Math.PI/2+view.pitch;camera.rotation.z=view.yaw;camera.updateMatrix();camera.updateMatrixWorld();var bs=void 0;if(node.boundingSphere){bs=node.boundingSphere;}else if(node.geometry&&node.geometry.boundingSphere){bs=node.geometry.boundingSphere;}else{bs=node.boundingBox.getBoundingSphere();}bs=bs.clone().applyMatrix4(node.matrixWorld);var fov=Math.PI*this.scene.camera.fov/180;var target=bs.center;var dir=view.direction;var radius=bs.radius;var distance=radius/Math.tan(fov/2);var position=target.clone().sub(dir.clone().multiplyScalar(distance));view.position.copy(position);view.radius=distance;this.dispatchEvent({"type":"zoom_to","viewer":this});}},{key:"showAbout",value:function showAbout(){$(function(){$("#about-panel").dialog();});}},{key:"getBoundingBox",value:function getBoundingBox(pointclouds){pointclouds=pointclouds||this.scene.pointclouds;var box=new THREE.Box3();this.scene.scenePointCloud.updateMatrixWorld(true);this.scene.referenceFrame.updateMatrixWorld(true);var _iteratorNormalCompletion57=true;var _didIteratorError57=false;var _iteratorError57=undefined;try{for(var _iterator57=this.scene.pointclouds[Symbol.iterator](),_step57;!(_iteratorNormalCompletion57=(_step57=_iterator57.next()).done);_iteratorNormalCompletion57=true){var pointcloud=_step57.value;pointcloud.updateMatrixWorld(true);var pointcloudBox=pointcloud.pcoGeometry.tightBoundingBox?pointcloud.pcoGeometry.tightBoundingBox:pointcloud.boundingBox;var boxWorld=Potree.utils.computeTransformedBoundingBox(pointcloudBox,pointcloud.matrixWorld);box.union(boxWorld);}}catch(err){_didIteratorError57=true;_iteratorError57=err;}finally{try{if(!_iteratorNormalCompletion57&&_iterator57.return){_iterator57.return();}}finally{if(_didIteratorError57){throw _iteratorError57;}}}return box;}},{key:"fitToScreen",value:function fitToScreen(){var factor=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var box=this.getBoundingBox(this.scene.pointclouds);var node=new THREE.Object3D();node.boundingBox=box;this.zoomTo(node,factor);}},{key:"setTopView",value:function setTopView(){this.scene.view.yaw=0;this.scene.view.pitch=-Math.PI/2;this.fitToScreen();}},{key:"setFrontView",value:function setFrontView(){this.scene.view.yaw=0;this.scene.view.pitch=0;this.fitToScreen();}},{key:"setLeftView",value:function setLeftView(){this.scene.view.yaw=-Math.PI/2;this.scene.view.pitch=0;this.fitToScreen();}},{key:"setRightView",value:function setRightView(){this.scene.view.yaw=Math.PI/2;this.scene.view.pitch=0;this.fitToScreen();}},{key:"flipYZ",value:function flipYZ(){this.isFlipYZ=!this.isFlipYZ;// TODO flipyz 
console.log("TODO");}},{key:"loadSettingsFromURL",value:function loadSettingsFromURL(){if(Potree.utils.getParameterByName("pointSize")){this.setPointSize(parseFloat(Potree.utils.getParameterByName("pointSize")));}if(Potree.utils.getParameterByName("FOV")){this.setFOV(parseFloat(Potree.utils.getParameterByName("FOV")));}if(Potree.utils.getParameterByName("opacity")){this.setOpacity(parseFloat(Potree.utils.getParameterByName("opacity")));}if(Potree.utils.getParameterByName("edlEnabled")){var enabled=Potree.utils.getParameterByName("edlEnabled")==="true";this.setEDLEnabled(enabled);}if(Potree.utils.getParameterByName("edlRadius")){this.setEDLRadius(parseFloat(Potree.utils.getParameterByName("edlRadius")));}if(Potree.utils.getParameterByName("edlStrength")){this.setEDLStrength(parseFloat(Potree.utils.getParameterByName("edlStrength")));}if(Potree.utils.getParameterByName("clipMode")){var clipMode=Potree.utils.getParameterByName("clipMode");if(clipMode==="HIGHLIGHT_INSIDE"){this.setClipMode(Potree.ClipMode.HIGHLIGHT_INSIDE);}else if(clipMode==="CLIP_OUTSIDE"){this.setClipMode(Potree.ClipMode.CLIP_OUTSIDE);}else if(clipMode==="DISABLED"){this.setClipMode(Potree.ClipMode.DISABLED);}}if(Potree.utils.getParameterByName("pointBudget")){this.setPointBudget(parseFloat(Potree.utils.getParameterByName("pointBudget")));}if(Potree.utils.getParameterByName("showBoundingBox")){var _enabled=Potree.utils.getParameterByName("showBoundingBox")==="true";if(_enabled){this.setShowBoundingBox(true);}else{this.setShowBoundingBox(false);}}if(Potree.utils.getParameterByName("material")){var _material2=Potree.utils.getParameterByName("material");this.setMaterial(_material2);}if(Potree.utils.getParameterByName("pointSizing")){var sizing=Potree.utils.getParameterByName("pointSizing");this.setPointSizing(sizing);}if(Potree.utils.getParameterByName("quality")){var quality=Potree.utils.getParameterByName("quality");this.setQuality(quality);}if(Potree.utils.getParameterByName("position")){var value=Potree.utils.getParameterByName("position");value=value.replace("[","").replace("]","");var tokens=value.split(";");var x=parseFloat(tokens[0]);var y=parseFloat(tokens[1]);var z=parseFloat(tokens[2]);this.scene.view.position.set(x,y,z);}if(Potree.utils.getParameterByName("target")){var _value=Potree.utils.getParameterByName("target");_value=_value.replace("[","").replace("]","");var _tokens=_value.split(";");var _x19=parseFloat(_tokens[0]);var _y3=parseFloat(_tokens[1]);var _z=parseFloat(_tokens[2]);this.scene.view.lookAt(new THREE.Vector3(_x19,_y3,_z));}if(Potree.utils.getParameterByName("background")){var _value2=Potree.utils.getParameterByName("background");this.setBackground(_value2);}//if(Potree.utils.getParameterByName("elevationRange")){
//	let value = Potree.utils.getParameterByName("elevationRange");
//	value = value.replace("[", "").replace("]", "");
//	let tokens = value.split(";");
//	let x = parseFloat(tokens[0]);
//	let y = parseFloat(tokens[1]);
//	
//	this.setElevationRange(x, y);
//	//this.scene.view.target.set(x, y, z);
//}
}},{key:"createControls",//------------------------------------------------------------------------------------
// Viewer Internals
//------------------------------------------------------------------------------------
value:function createControls(){{// create FIRST PERSON CONTROLS
this.fpControls=new Potree.FirstPersonControls(this);this.fpControls.enabled=false;this.fpControls.addEventListener("start",this.disableAnnotations.bind(this));this.fpControls.addEventListener("end",this.enableAnnotations.bind(this));//this.fpControls.addEventListener("double_click_move", (event) => {
//	let distance = event.targetLocation.distanceTo(event.position);
//	this.setMoveSpeed(Math.pow(distance, 0.4));
//});
//this.fpControls.addEventListener("move_speed_changed", (event) => {
//	this.setMoveSpeed(this.fpControls.moveSpeed);
//});
}//{ // create GEO CONTROLS
//	this.geoControls = new Potree.GeoControls(this.scene.camera, this.renderer.domElement);
//	this.geoControls.enabled = false;
//	this.geoControls.addEventListener("start", this.disableAnnotations.bind(this));
//	this.geoControls.addEventListener("end", this.enableAnnotations.bind(this));
//	this.geoControls.addEventListener("move_speed_changed", (event) => {
//		this.setMoveSpeed(this.geoControls.moveSpeed);
//	});
//}
{// create ORBIT CONTROLS
this.orbitControls=new Potree.OrbitControls(this);this.orbitControls.enabled=false;this.orbitControls.addEventListener("start",this.disableAnnotations.bind(this));this.orbitControls.addEventListener("end",this.enableAnnotations.bind(this));}{// create EARTH CONTROLS
this.earthControls=new Potree.EarthControls(this);this.earthControls.enabled=false;this.earthControls.addEventListener("start",this.disableAnnotations.bind(this));this.earthControls.addEventListener("end",this.enableAnnotations.bind(this));}}},{key:"toggleSidebar",value:function toggleSidebar(){var renderArea=$('#potree_render_area');var sidebar=$('#potree_sidebar_container');var isVisible=renderArea.css("left")!=="0px";if(isVisible){renderArea.css("left","0px");}else{renderArea.css("left","300px");}}},{key:"toggleMap",value:function toggleMap(){//let map = $('#potree_map');
//map.toggle(100);
if(this.mapView){this.mapView.toggle();}}},{key:"loadGUI",value:function loadGUI(callback){var _this45=this;var sidebarContainer=$('#potree_sidebar_container');sidebarContainer.load(new URL(Potree.scriptPath+"/sidebar.html").href,function(){sidebarContainer.css("width","300px");sidebarContainer.css("height","100%");var imgMenuToggle=document.createElement("img");imgMenuToggle.src=new URL(Potree.resourcePath+"/icons/menu_button.svg").href;imgMenuToggle.onclick=_this45.toggleSidebar;imgMenuToggle.classList.add("potree_menu_toggle");var imgMapToggle=document.createElement("img");imgMapToggle.src=new URL(Potree.resourcePath+"/icons/map_icon.png").href;imgMapToggle.style.display="none";imgMapToggle.onclick=function(e){_this45.toggleMap();};imgMapToggle.id="potree_map_toggle";viewer.renderArea.insertBefore(imgMapToggle,viewer.renderArea.children[0]);viewer.renderArea.insertBefore(imgMenuToggle,viewer.renderArea.children[0]);_this45.mapView=new Potree.MapView(_this45);_this45.mapView.init();i18n.init({lng:'en',resGetPath:Potree.resourcePath+'/lang/__lng__/__ns__.json',preload:['en','fr','de','jp'],getAsync:true,debug:false},function(t){// Start translation once everything is loaded
$("body").i18n();});$(function(){initSidebar();});var elProfile=$('<div>').load(new URL(Potree.scriptPath+"/profile.html").href,function(){$(document.body).append(elProfile.children());_this45.profileWindow=new Potree.ProfileWindow(_this45);_this45.profileWindowController=new Potree.ProfileWindowController(_this45);$("#profile_window").draggable({handle:$("#profile_titlebar"),containment:$(document.body)});$("#profile_window").resizable({containment:$(document.body),handles:"n, e, s, w"});if(callback){$(callback);}});});}},{key:"setLanguage",value:function setLanguage(lang){i18n.setLng(lang);$("body").i18n();}},{key:"setServer",value:function setServer(server){this.server=server;}},{key:"initThree",value:function initThree(){var width=this.renderArea.clientWidth;var height=this.renderArea.clientHeight;this.renderer=new THREE.WebGLRenderer({premultipliedAlpha:false});this.renderer.sortObjects=false;this.renderer.setSize(width,height);this.renderer.autoClear=false;this.renderArea.appendChild(this.renderer.domElement);this.renderer.domElement.tabIndex="2222";this.renderer.domElement.addEventListener("mousedown",function(){this.renderer.domElement.focus();}.bind(this));this.skybox=Potree.utils.loadSkybox(new URL(Potree.resourcePath+"/textures/skybox2/").href);// enable frag_depth extension for the interpolation shader, if available
this.renderer.context.getExtension("EXT_frag_depth");}},{key:"updateAnnotations",value:function updateAnnotations(){var _this46=this;if(!this.getShowAnnotations()){this.scene.annotations.traverseDescendants(function(descendant){descendant.display=false;return;});return;}this.scene.annotations.updateBounds();this.scene.camera.updateMatrixWorld();var distances=[];var renderAreaWidth=this.renderArea.clientWidth;var renderAreaHeight=this.renderArea.clientHeight;this.scene.annotations.traverse(function(annotation){if(annotation===_this46.scene.annotations){annotation.display=false;return true;}if(!annotation.visible){return false;}annotation.scene=_this46.scene;var element=annotation.domElement;var position=annotation.position;if(!position){position=annotation.boundingBox.getCenter();}var distance=viewer.scene.camera.position.distanceTo(position);var radius=annotation.boundingBox.getBoundingSphere().radius;var screenPos=new THREE.Vector3();var screenSize=0;{// SCREEN POS
screenPos.copy(position).project(_this46.scene.camera);screenPos.x=renderAreaWidth*(screenPos.x+1)/2;screenPos.y=renderAreaHeight*(1-(screenPos.y+1)/2);//screenPos.x = Math.floor(screenPos.x - element[0].clientWidth / 2);
//screenPos.y = Math.floor(screenPos.y - annotation.elTitlebar[0].clientHeight / 2);
screenPos.x=Math.floor(screenPos.x);screenPos.y=Math.floor(screenPos.y);// SCREEN SIZE
var fov=Math.PI*viewer.scene.camera.fov/180;var slope=Math.tan(fov/2.0);var projFactor=0.5*renderAreaHeight/(slope*distance);screenSize=radius*projFactor;}element[0].style.left=screenPos.x+"px";element[0].style.top=screenPos.y+"px";var zIndex=10000000-distance*(10000000/_this46.scene.camera.far);if(annotation.descriptionVisible){zIndex+=10000000;}if(annotation.children.length>0){var expand=screenSize>annotation.collapseThreshold||annotation.boundingBox.containsPoint(_this46.scene.camera.position);annotation.expand=expand;if(!expand){annotation.display=-1<=screenPos.z&&screenPos.z<=1;}return expand;}else{annotation.display=-1<=screenPos.z&&screenPos.z<=1;}});}},{key:"update",value:function update(delta,timestamp){//if(window.urlToggle === undefined){
//	window.urlToggle = 0;
//}else{
//	
//	if(window.urlToggle > 1){
//		{
//			
//			let currentValue = Potree.utils.getParameterByName("position");
//			let strPosition = "["  
//				+ this.scene.view.position.x.toFixed(3) + ";"
//				+ this.scene.view.position.y.toFixed(3) + ";"
//				+ this.scene.view.position.z.toFixed(3) + "]";
//			if(currentValue !== strPosition){
//				Potree.utils.setParameter("position", strPosition);
//			}
//			
//		}
//		
//		{
//			let currentValue = Potree.utils.getParameterByName("target");
//			let pivot = this.scene.view.getPivot();
//			let strTarget = "["  
//				+ pivot.x.toFixed(3) + ";"
//				+ pivot.y.toFixed(3) + ";"
//				+ pivot.z.toFixed(3) + "]";
//			if(currentValue !== strTarget){
//				Potree.utils.setParameter("target", strTarget);
//			}
//		}
//		
//		window.urlToggle = 0;
//	}
//	
//	window.urlToggle += delta;
//}
var scene=this.scene;var camera=this.scene.camera;Potree.pointLoadLimit=Potree.pointBudget*2;this.scene.directionalLight.position.copy(camera.position);this.scene.directionalLight.lookAt(new THREE.Vector3().addVectors(camera.position,camera.getWorldDirection()));var visibleNodes=0;var visiblePoints=0;var progress=0;var _iteratorNormalCompletion58=true;var _didIteratorError58=false;var _iteratorError58=undefined;try{for(var _iterator58=this.scene.pointclouds[Symbol.iterator](),_step58;!(_iteratorNormalCompletion58=(_step58=_iterator58.next()).done);_iteratorNormalCompletion58=true){var pointcloud=_step58.value;var bbWorld=Potree.utils.computeTransformedBoundingBox(pointcloud.boundingBox,pointcloud.matrixWorld);if(!pointcloud.material._defaultIntensityRangeChanged){var root=pointcloud.pcoGeometry.root;if(root!=null&&root.loaded){var attributes=pointcloud.pcoGeometry.root.geometry.attributes;if(attributes.intensity){var array=attributes.intensity.array;// chose max value from the 0.75 percentile
var ordered=[];for(var _j15=0;_j15<array.length;_j15++){ordered.push(array[_j15]);}ordered.sort();var capIndex=parseInt((ordered.length-1)*0.75);var cap=ordered[capIndex];if(cap<=1){pointcloud.material.intensityRange=[0,1];}else if(cap<=256){pointcloud.material.intensityRange=[0,255];}else{pointcloud.material.intensityRange=[0,cap];}}//pointcloud._intensityMaxEvaluated = true;
}}pointcloud.material.clipMode=this.clipMode;pointcloud.showBoundingBox=this.showBoundingBox;pointcloud.generateDEM=this.generateDEM;pointcloud.minimumNodePixelSize=this.minNodeSize;visibleNodes+=pointcloud.numVisibleNodes;visiblePoints+=pointcloud.numVisiblePoints;progress+=pointcloud.progress;}// update classification visibility
}catch(err){_didIteratorError58=true;_iteratorError58=err;}finally{try{if(!_iteratorNormalCompletion58&&_iterator58.return){_iterator58.return();}}finally{if(_didIteratorError58){throw _iteratorError58;}}}var _iteratorNormalCompletion59=true;var _didIteratorError59=false;var _iteratorError59=undefined;try{for(var _iterator59=this.scene.pointclouds[Symbol.iterator](),_step59;!(_iteratorNormalCompletion59=(_step59=_iterator59.next()).done);_iteratorNormalCompletion59=true){var _pointcloud3=_step59.value;var classification=_pointcloud3.material.classification;var somethingChanged=false;var _iteratorNormalCompletion62=true;var _didIteratorError62=false;var _iteratorError62=undefined;try{for(var _iterator62=Object.keys(this.classifications)[Symbol.iterator](),_step62;!(_iteratorNormalCompletion62=(_step62=_iterator62.next()).done);_iteratorNormalCompletion62=true){var key=_step62.value;var w=this.classifications[key].visible?1:0;if(classification[key]){if(classification[key].w!==w){classification[key].w=w;somethingChanged=true;}}else if(classification.DEFAULT){classification[key]=classification.DEFAULT;somethingChanged=true;}else{classification[key]=new THREE.Vector4(0.3,0.6,0.6,0.5);somethingChanged=true;}}}catch(err){_didIteratorError62=true;_iteratorError62=err;}finally{try{if(!_iteratorNormalCompletion62&&_iterator62.return){_iterator62.return();}}finally{if(_didIteratorError62){throw _iteratorError62;}}}if(somethingChanged){_pointcloud3.material.recomputeClassification();}}}catch(err){_didIteratorError59=true;_iteratorError59=err;}finally{try{if(!_iteratorNormalCompletion59&&_iterator59.return){_iterator59.return();}}finally{if(_didIteratorError59){throw _iteratorError59;}}}if(!this.freeze){var result=Potree.updatePointClouds(scene.pointclouds,camera,this.renderer);visibleNodes=result.visibleNodes.length;visiblePoints=result.numVisiblePoints;camera.near=result.lowestSpacing*10.0;camera.far=-this.getBoundingBox().applyMatrix4(camera.matrixWorldInverse).min.z;camera.far=Math.max(camera.far*1.5,1000);}camera.fov=this.fov;// Navigation mode changed?
if(this.getControls(scene.view.navigationMode)!==this.controls){if(this.controls){this.controls.enabled=false;this.inputHandler.removeInputListener(this.controls);}this.controls=this.getControls(scene.view.navigationMode);this.controls.enabled=true;this.inputHandler.addInputListener(this.controls);}//
if(this.controls!==null){this.controls.setScene(scene);this.controls.update(delta);camera.position.copy(scene.view.position);camera.rotation.order="ZXY";camera.rotation.x=Math.PI/2+this.scene.view.pitch;camera.rotation.z=this.scene.view.yaw;}{// update clip boxes
//let boxes = this.scene.profiles.reduce( (a, b) => {return a.boxes.concat(b.boxes)}, []);
//boxes = boxes.concat(this.scene.volumes.filter(v => v.clip));
var boxes=this.scene.volumes.filter(function(v){return v.clip;});var _iteratorNormalCompletion60=true;var _didIteratorError60=false;var _iteratorError60=undefined;try{for(var _iterator60=this.scene.profiles[Symbol.iterator](),_step60;!(_iteratorNormalCompletion60=(_step60=_iterator60.next()).done);_iteratorNormalCompletion60=true){var profile=_step60.value;boxes=boxes.concat(profile.boxes);}}catch(err){_didIteratorError60=true;_iteratorError60=err;}finally{try{if(!_iteratorNormalCompletion60&&_iterator60.return){_iterator60.return();}}finally{if(_didIteratorError60){throw _iteratorError60;}}}var clipBoxes=boxes.map(function(box){box.updateMatrixWorld();var boxInverse=new THREE.Matrix4().getInverse(box.matrixWorld);var boxPosition=box.getWorldPosition();return{matrix:box.matrixWorld,inverse:boxInverse,position:boxPosition};});var _iteratorNormalCompletion61=true;var _didIteratorError61=false;var _iteratorError61=undefined;try{for(var _iterator61=this.scene.pointclouds[Symbol.iterator](),_step61;!(_iteratorNormalCompletion61=(_step61=_iterator61.next()).done);_iteratorNormalCompletion61=true){var _pointcloud4=_step61.value;_pointcloud4.material.setClipBoxes(clipBoxes);}}catch(err){_didIteratorError61=true;_iteratorError61=err;}finally{try{if(!_iteratorNormalCompletion61&&_iterator61.return){_iterator61.return();}}finally{if(_didIteratorError61){throw _iteratorError61;}}}}this.updateAnnotations();if(this.mapView){this.mapView.update(delta,this.scene.camera);if(this.mapView.sceneProjection){$("#potree_map_toggle").css("display","block");}}TWEEN.update(timestamp);this.dispatchEvent({"type":"update","delta":delta,"timestamp":timestamp});}},{key:"loop",value:function loop(timestamp){requestAnimationFrame(this.loop.bind(this));this.stats.begin();//var start = new Date().getTime();
this.update(this.clock.getDelta(),timestamp);//var end = new Date().getTime();
//var duration = end - start;
//toggleMessage++;
//if(toggleMessage > 30){
//	document.getElementById("lblMessage").innerHTML = "update: " + duration + "ms";
//	toggleMessage = 0;
//}
//let queryAll = Potree.startQuery("All", viewer.renderer.getContext());
if(this.useEDL&&Potree.Features.SHADER_EDL.isSupported()){if(!this.edlRenderer){this.edlRenderer=new EDLRenderer(this);}this.edlRenderer.render(this.renderer);}else{if(!this.potreeRenderer){this.potreeRenderer=new PotreeRenderer(this);}this.potreeRenderer.render();}//Potree.endQuery(queryAll, viewer.renderer.getContext());
//Potree.resolveQueries(viewer.renderer.getContext());
//let pointsRendered = viewer.scene.pointclouds[0].visibleNodes.map(n => n.geometryNode.geometry.attributes.position.count).reduce( (a, v) => a + v, 0);
//console.log("rendered: ", pointsRendered);
//if(this.takeScreenshot == true){
//	this.takeScreenshot = false;
//	
//	let screenshot = this.renderer.domElement.toDataURL();
//	
//	//document.body.appendChild(screenshot); 
//	let w = this.open();
//	w.document.write('<img src="'+screenshot+'"/>');
//}	
this.stats.end();Potree.framenumber++;}}]);return PotreeViewer;}(THREE.EventDispatcher);//------------------------------------------------------------------------------------
// Renderers
//------------------------------------------------------------------------------------
var PotreeRenderer=function(){function PotreeRenderer(viewer){_classCallCheck(this,PotreeRenderer);this.viewer=viewer;}_createClass(PotreeRenderer,[{key:"render",value:function render(){{// resize
var width=viewer.scaleFactor*viewer.renderArea.clientWidth;var height=viewer.scaleFactor*viewer.renderArea.clientHeight;var aspect=width/height;viewer.scene.camera.aspect=aspect;viewer.scene.camera.updateProjectionMatrix();viewer.renderer.setSize(width,height);}// render skybox
if(viewer.background==="skybox"){viewer.renderer.clear(true,true,false);viewer.skybox.camera.rotation.copy(viewer.scene.camera.rotation);viewer.skybox.camera.fov=viewer.scene.camera.fov;viewer.skybox.camera.aspect=viewer.scene.camera.aspect;viewer.skybox.camera.updateProjectionMatrix();viewer.renderer.render(viewer.skybox.scene,viewer.skybox.camera);}else if(viewer.background==="gradient"){//viewer.renderer.clear(true, true, false);
viewer.renderer.render(viewer.scene.sceneBG,viewer.scene.cameraBG);}else if(viewer.background==="black"){viewer.renderer.setClearColor(0x000000,1);viewer.renderer.clear(true,true,false);}else if(viewer.background==="white"){viewer.renderer.setClearColor(0xFFFFFF,1);viewer.renderer.clear(true,true,false);}var _iteratorNormalCompletion63=true;var _didIteratorError63=false;var _iteratorError63=undefined;try{for(var _iterator63=this.viewer.scene.pointclouds[Symbol.iterator](),_step63;!(_iteratorNormalCompletion63=(_step63=_iterator63.next()).done);_iteratorNormalCompletion63=true){var pointcloud=_step63.value;pointcloud.material.useEDL=false;}//var queryPC = Potree.startQuery("PointCloud", viewer.renderer.getContext());
}catch(err){_didIteratorError63=true;_iteratorError63=err;}finally{try{if(!_iteratorNormalCompletion63&&_iterator63.return){_iterator63.return();}}finally{if(_didIteratorError63){throw _iteratorError63;}}}viewer.renderer.render(viewer.scene.scenePointCloud,viewer.scene.camera);//Potree.endQuery(queryPC, viewer.renderer.getContext());
// render scene
viewer.renderer.render(viewer.scene.scene,viewer.scene.camera);viewer.volumeTool.update();viewer.renderer.render(viewer.volumeTool.sceneVolume,viewer.scene.camera);viewer.renderer.render(viewer.controls.sceneControls,viewer.scene.camera);viewer.renderer.clearDepth();viewer.measuringTool.update();viewer.profileTool.update();viewer.transformationTool.update();viewer.renderer.render(viewer.measuringTool.sceneMeasurement,viewer.scene.camera);viewer.renderer.render(viewer.profileTool.sceneProfile,viewer.scene.camera);viewer.renderer.render(viewer.transformationTool.sceneTransform,viewer.scene.camera);//Potree.endQuery(queryAll, viewer.renderer.getContext());
//Potree.resolveQueries(viewer.renderer.getContext());
}}]);return PotreeRenderer;}();;var EDLRenderer=function(){function EDLRenderer(viewer){_classCallCheck(this,EDLRenderer);this.viewer=viewer;this.edlMaterial=null;this.attributeMaterials=[];this.rtColor=null;this.gl=viewer.renderer.context;}_createClass(EDLRenderer,[{key:"initEDL",value:function initEDL(){if(this.edlMaterial!=null){return;}//var depthTextureExt = gl.getExtension("WEBGL_depth_texture"); 
this.edlMaterial=new Potree.EyeDomeLightingMaterial();this.rtColor=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType});this.rtColor.depthTexture=new THREE.DepthTexture();this.rtColor.depthTexture.type=THREE.UnsignedIntType;}},{key:"resize",value:function resize(){var width=viewer.scaleFactor*viewer.renderArea.clientWidth;var height=viewer.scaleFactor*viewer.renderArea.clientHeight;var aspect=width/height;var needsResize=this.rtColor.width!=width||this.rtColor.height!=height;// disposal will be unnecessary once this fix made it into three.js master: 
// https://github.com/mrdoob/three.js/pull/6355
if(needsResize){this.rtColor.dispose();}viewer.scene.camera.aspect=aspect;viewer.scene.camera.updateProjectionMatrix();viewer.renderer.setSize(width,height);this.rtColor.setSize(width,height);}},{key:"render",value:function render(){this.initEDL();this.resize();if(viewer.background==="skybox"){viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();viewer.skybox.camera.rotation.copy(viewer.scene.camera.rotation);viewer.skybox.camera.fov=viewer.scene.camera.fov;viewer.skybox.camera.aspect=viewer.scene.camera.aspect;viewer.skybox.camera.updateProjectionMatrix();viewer.renderer.render(viewer.skybox.scene,viewer.skybox.camera);}else if(viewer.background==="gradient"){viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();viewer.renderer.render(viewer.scene.sceneBG,viewer.scene.cameraBG);}else if(viewer.background==="black"){viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();}else if(viewer.background==="white"){viewer.renderer.setClearColor(0xFFFFFF,0);viewer.renderer.clear();}viewer.measuringTool.update();viewer.profileTool.update();viewer.transformationTool.update();viewer.volumeTool.update();viewer.renderer.render(viewer.scene.scene,viewer.scene.camera);viewer.renderer.clearTarget(this.rtColor,true,true,true);var width=viewer.renderArea.clientWidth;var height=viewer.renderArea.clientHeight;// COLOR & DEPTH PASS
var _iteratorNormalCompletion64=true;var _didIteratorError64=false;var _iteratorError64=undefined;try{for(var _iterator64=viewer.scene.pointclouds[Symbol.iterator](),_step64;!(_iteratorNormalCompletion64=(_step64=_iterator64.next()).done);_iteratorNormalCompletion64=true){var pointcloud=_step64.value;var octreeSize=pointcloud.pcoGeometry.boundingBox.getSize().x;var _material3=pointcloud.material;_material3.weighted=false;_material3.useLogarithmicDepthBuffer=false;_material3.useEDL=true;_material3.screenWidth=width;_material3.screenHeight=height;_material3.uniforms.visibleNodes.value=pointcloud.material.visibleNodesTexture;_material3.uniforms.octreeSize.value=octreeSize;_material3.fov=viewer.scene.camera.fov*(Math.PI/180);_material3.spacing=pointcloud.pcoGeometry.spacing*Math.max(pointcloud.scale.x,pointcloud.scale.y,pointcloud.scale.z);_material3.near=viewer.scene.camera.near;_material3.far=viewer.scene.camera.far;}}catch(err){_didIteratorError64=true;_iteratorError64=err;}finally{try{if(!_iteratorNormalCompletion64&&_iterator64.return){_iterator64.return();}}finally{if(_didIteratorError64){throw _iteratorError64;}}}viewer.renderer.render(viewer.scene.scenePointCloud,viewer.scene.camera,this.rtColor);viewer.renderer.render(viewer.scene.scene,viewer.scene.camera,this.rtColor);// bit of a hack here. The EDL pass will mess up the text of the volume tool
// so volume tool is rendered again afterwards
//viewer.volumeTool.render(this.rtColor);
viewer.renderer.render(viewer.volumeTool.sceneVolume,viewer.scene.camera,this.rtColor);{// EDL OCCLUSION PASS
this.edlMaterial.uniforms.screenWidth.value=width;this.edlMaterial.uniforms.screenHeight.value=height;this.edlMaterial.uniforms.colorMap.value=this.rtColor.texture;this.edlMaterial.uniforms.edlStrength.value=viewer.edlStrength;this.edlMaterial.uniforms.radius.value=viewer.edlRadius;this.edlMaterial.uniforms.opacity.value=1;this.edlMaterial.depthTest=true;this.edlMaterial.depthWrite=true;this.edlMaterial.transparent=true;Potree.utils.screenPass.render(viewer.renderer,this.edlMaterial);}viewer.renderer.clearDepth();viewer.renderer.render(viewer.controls.sceneControls,viewer.scene.camera);viewer.renderer.render(viewer.measuringTool.sceneMeasurement,viewer.scene.camera);viewer.renderer.render(viewer.profileTool.sceneProfile,viewer.scene.camera);viewer.renderer.render(viewer.transformationTool.sceneTransform,viewer.scene.camera);}}]);return EDLRenderer;}();;Potree.ProfileWindow=function(_THREE$EventDispatche12){_inherits(ProfileWindow,_THREE$EventDispatche12);function ProfileWindow(){_classCallCheck(this,ProfileWindow);var _this47=_possibleConstructorReturn(this,(ProfileWindow.__proto__||Object.getPrototypeOf(ProfileWindow)).call(this));_this47.elRoot=$("#profile_window");_this47.renderArea=_this47.elRoot.find("#profileCanvasContainer");_this47.svg=d3.select("svg#profileSVG");_this47.mouseIsDown=false;_this47.projectedBox=new THREE.Box3();_this47.pointclouds=new Map();_this47.numPoints=0;_this47.geometryPool=new(function(){function _class10(){_classCallCheck(this,_class10);this.geometries=[];this.maxPoints=50000;}_createClass(_class10,[{key:"getGeometry",value:function getGeometry(){if(this.geometries.length===0){var geometry=new THREE.BufferGeometry();var buffers={position:new Float32Array(3*this.maxPoints),color:new Uint8Array(3*this.maxPoints),intensity:new Uint16Array(this.maxPoints),classification:new Uint8Array(this.maxPoints),returnNumber:new Uint8Array(this.maxPoints),numberOfReturns:new Uint8Array(this.maxPoints),pointSourceID:new Uint16Array(this.maxPoints)};geometry.addAttribute("position",new THREE.BufferAttribute(buffers.position,3));geometry.addAttribute("color",new THREE.BufferAttribute(buffers.color,3,true));geometry.addAttribute("intensity",new THREE.BufferAttribute(buffers.intensity,1,false));geometry.addAttribute("classification",new THREE.BufferAttribute(buffers.classification,1,false));geometry.addAttribute("returnNumber",new THREE.BufferAttribute(buffers.returnNumber,1,false));geometry.addAttribute("numberOfReturns",new THREE.BufferAttribute(buffers.numberOfReturns,1,false));geometry.addAttribute("pointSourceID",new THREE.BufferAttribute(buffers.pointSourceID,1,false));geometry.setDrawRange(0,0);this.geometries.push(geometry);}return this.geometries.pop();}},{key:"returnGeometry",value:function returnGeometry(geometry){this.geometries.push(geometry);}}]);return _class10;}())();_this47.materialPool=new(function(){function _class11(){_classCallCheck(this,_class11);this.materials=[];}_createClass(_class11,[{key:"getMaterial",value:function getMaterial(){if(this.materials.length===0){var _material4=new Potree.PointCloudMaterial();this.materials.push(_material4);}return this.materials.pop();}},{key:"returnMaterial",value:function returnMaterial(material){this.materials.push(material);}}]);return _class11;}())();_this47.mouse=new THREE.Vector2(0,0);_this47.scale=new THREE.Vector3(1,1,1);var csvIcon=Potree.resourcePath+"/icons/file_csv_2d.svg";$("#potree_download_csv_icon").attr("src",csvIcon);var lasIcon=Potree.resourcePath+"/icons/file_las_3d.svg";$("#potree_download_las_icon").attr("src",lasIcon);_this47.initTHREE();_this47.initSVG();_this47.initListeners();return _this47;}_createClass(ProfileWindow,[{key:"initListeners",value:function initListeners(){var _this48=this;$(window).resize(function(){_this48.render();});this.renderArea.mousedown(function(e){_this48.mouseIsDown=true;});this.renderArea.mouseup(function(e){_this48.mouseIsDown=false;});this.renderArea.mousemove(function(e){if(_this48.pointclouds.size===0){return;}var rect=_this48.renderArea[0].getBoundingClientRect();var x=e.clientX-rect.left;var y=e.clientY-rect.top;var newMouse=new THREE.Vector2(x,y);if(_this48.mouseIsDown){// DRAG
_this48.autoFit=false;var cPos=[_this48.scaleX.invert(_this48.mouse.x),_this48.scaleY.invert(_this48.mouse.y)];var ncPos=[_this48.scaleX.invert(newMouse.x),_this48.scaleY.invert(newMouse.y)];_this48.camera.position.x-=ncPos[0]-cPos[0];_this48.camera.position.y-=ncPos[1]-cPos[1];_this48.render();}else if(_this48.pointclouds.size>0){// FIND HOVERED POINT 
var pixelRadius=10;var radius=Math.abs(_this48.scaleX.invert(0)-_this48.scaleX.invert(5));var mileage=_this48.scaleX.invert(newMouse.x);var elevation=_this48.scaleY.invert(newMouse.y);var point=_this48.selectPoint(mileage,elevation,radius);if(point){_this48.elRoot.find("#profileSelectionProperties").fadeIn(200);_this48.pickSphere.visible=true;_this48.pickSphere.scale.set(0.5*radius,0.5*radius,0.5*radius);_this48.pickSphere.position.set(point.mileage,point.position[2],0);var info=_this48.elRoot.find("#profileSelectionProperties");var html="<table>";var _iteratorNormalCompletion65=true;var _didIteratorError65=false;var _iteratorError65=undefined;try{for(var _iterator65=Object.keys(point)[Symbol.iterator](),_step65;!(_iteratorNormalCompletion65=(_step65=_iterator65.next()).done);_iteratorNormalCompletion65=true){var attribute=_step65.value;var value=point[attribute];if(attribute==="position"){var values=[].concat(_toConsumableArray(value)).map(function(v){return Potree.utils.addCommas(v.toFixed(3));});html+="\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>x</td>\n\t\t\t\t\t\t\t\t\t<td>"+values[0]+"</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>y</td>\n\t\t\t\t\t\t\t\t\t<td>"+values[1]+"</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>z</td>\n\t\t\t\t\t\t\t\t\t<td>"+values[2]+"</td>\n\t\t\t\t\t\t\t\t</tr>";}else if(attribute==="color"){html+="\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>"+attribute+"</td>\n\t\t\t\t\t\t\t\t\t<td>"+value.join(", ")+"</td>\n\t\t\t\t\t\t\t\t</tr>";}else if(attribute==="normal"){continue;}else if(attribute==="mileage"){html+="\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>"+attribute+"</td>\n\t\t\t\t\t\t\t\t\t<td>"+value.toFixed(3)+"</td>\n\t\t\t\t\t\t\t\t</tr>";}else{html+="\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>"+attribute+"</td>\n\t\t\t\t\t\t\t\t\t<td>"+value+"</td>\n\t\t\t\t\t\t\t\t</tr>";}}}catch(err){_didIteratorError65=true;_iteratorError65=err;}finally{try{if(!_iteratorNormalCompletion65&&_iterator65.return){_iterator65.return();}}finally{if(_didIteratorError65){throw _iteratorError65;}}}html+="</table>";info.html(html);_this48.selectedPoint=point;}else{//this.pickSphere.visible = false;
//this.selectedPoint = null;
}_this48.render();}_this48.mouse.copy(newMouse);});var onWheel=function onWheel(e){_this48.autoFit=false;var delta=0;if(e.wheelDelta!==undefined){// WebKit / Opera / Explorer 9
delta=e.wheelDelta;}else if(e.detail!==undefined){// Firefox
delta=-e.detail;}var ndelta=Math.sign(delta);//let sPos = new THREE.Vector3(this.mouse.x, this.mouse.y, 0);
//let cPos = this.toCamSpace(sPos);
var cPos=[_this48.scaleX.invert(_this48.mouse.x),_this48.scaleY.invert(_this48.mouse.y)];if(ndelta>0){// + 10%
_this48.scale.multiplyScalar(1.1);}else{// - 10%
_this48.scale.multiplyScalar(100/110);}//this.scale.max(new THREE.Vector3(0.5, 0.5, 0.5));
//this.scale.min(new THREE.Vector3(100, 100, 100));
_this48.updateScales();var ncPos=[_this48.scaleX.invert(_this48.mouse.x),_this48.scaleY.invert(_this48.mouse.y)];_this48.camera.position.x-=ncPos[0]-cPos[0];_this48.camera.position.y-=ncPos[1]-cPos[1];_this48.render();};$(this.renderArea)[0].addEventListener("mousewheel",onWheel,false);$(this.renderArea)[0].addEventListener("DOMMouseScroll",onWheel,false);// Firefox
$('#closeProfileContainer').click(function(){_this48.hide();});$('#potree_download_csv_icon').click(function(){var points=new Potree.Points();_this48.pointclouds.forEach(function(value,key){points.add(value.points);});var string=Potree.CSVExporter.toString(points);var uri="data:application/octet-stream;base64,"+btoa(string);$('#potree_download_profile_ortho_link').attr("href",uri);});$('#potree_download_las_icon').click(function(){var points=new Potree.Points();_this48.pointclouds.forEach(function(value,key){points.add(value.points);});var buffer=Potree.LASExporter.toLAS(points);var u8view=new Uint8Array(buffer);var binString="";for(var _i65=0;_i65<u8view.length;_i65++){binString+=String.fromCharCode(u8view[_i65]);}var uri="data:application/octet-stream;base64,"+btoa(binString);$('#potree_download_profile_link').attr("href",uri);//let uri = "data:application/octet-stream;base64,"+btoa(string);
//$('#potree_download_profile_ortho_link').attr("href", uri);
//let las = viewer.profileWindow.getPointsInProfileAsLas();
//let u8view = new Uint8Array(las);
//
//let binString = "";
//for(let i = 0; i < u8view.length; i++){
//	binString += String.fromCharCode(u8view[i]);
//}
//
//let uri = "data:application/octet-stream;base64,"+btoa(binString);
//$('#potree_download_profile_link').attr("href", uri);
});}},{key:"selectPoint",value:function selectPoint(mileage,elevation,radius){var closest={distance:Infinity,pointcloud:null,points:null,index:null};var _iteratorNormalCompletion66=true;var _didIteratorError66=false;var _iteratorError66=undefined;try{for(var _iterator66=this.pointclouds[Symbol.iterator](),_step66;!(_iteratorNormalCompletion66=(_step66=_iterator66.next()).done);_iteratorNormalCompletion66=true){var _ref4=_step66.value;var _ref5=_slicedToArray(_ref4,2);var pointcloud=_ref5[0];var entry=_ref5[1];var points=entry.points;for(var _i66=0;_i66<points.numPoints;_i66++){//let pos = new THREE.Vector3(...points.data.position.subarray(3*i, 3*i+3));
var m=points.data.mileage[_i66]-mileage;var e=points.data.position[3*_i66+2]-elevation;var r=Math.sqrt(m*m+e*e);if(r<radius&&r<closest.distance){closest={distance:r,pointcloud:pointcloud,points:points,index:_i66};}}}}catch(err){_didIteratorError66=true;_iteratorError66=err;}finally{try{if(!_iteratorNormalCompletion66&&_iterator66.return){_iterator66.return();}}finally{if(_didIteratorError66){throw _iteratorError66;}}}if(closest.distance<Infinity){var points=closest.points;var point={};var attributes=Object.keys(points.data);var _iteratorNormalCompletion67=true;var _didIteratorError67=false;var _iteratorError67=undefined;try{for(var _iterator67=attributes[Symbol.iterator](),_step67;!(_iteratorNormalCompletion67=(_step67=_iterator67.next()).done);_iteratorNormalCompletion67=true){var attribute=_step67.value;var attributeData=points.data[attribute];var itemSize=attributeData.length/points.numPoints;var value=attributeData.subarray(itemSize*closest.index,itemSize*closest.index+itemSize);if(value.length===1){point[attribute]=value[0];}else{point[attribute]=value;}}}catch(err){_didIteratorError67=true;_iteratorError67=err;}finally{try{if(!_iteratorNormalCompletion67&&_iterator67.return){_iterator67.return();}}finally{if(_didIteratorError67){throw _iteratorError67;}}}return point;}else{return null;}}},{key:"initTHREE",value:function initTHREE(){this.renderer=new THREE.WebGLRenderer({alpha:true,premultipliedAlpha:false});this.renderer.setClearColor(0x000000,0);this.renderer.setSize(10,10);this.renderer.autoClear=true;this.renderArea.append($(this.renderer.domElement));this.renderer.domElement.tabIndex="2222";this.renderer.context.getExtension("EXT_frag_depth");$(this.renderer.domElement).css("width","100%");$(this.renderer.domElement).css("height","100%");this.camera=new THREE.OrthographicCamera(-10,10,10,-10,-1000,1000);this.scene=new THREE.Scene();var sg=new THREE.SphereGeometry(1,16,16);var sm=new THREE.MeshNormalMaterial();this.pickSphere=new THREE.Mesh(sg,sm);this.pickSphere.visible=false;this.scene.add(this.pickSphere);}},{key:"initSVG",value:function initSVG(){var width=this.renderArea[0].clientWidth;var height=this.renderArea[0].clientHeight;var marginLeft=this.renderArea[0].offsetLeft;this.svg.selectAll("*").remove();this.scaleX=d3.scale.linear().domain([this.camera.left+this.camera.position.x,this.camera.right+this.camera.position.x]).range([0,width]);this.scaleY=d3.scale.linear().domain([this.camera.bottom+this.camera.position.y,this.camera.top+this.camera.position.y]).range([height,0]);this.xAxis=d3.svg.axis().scale(this.scaleX).orient("bottom").innerTickSize(-height).outerTickSize(1).tickPadding(10).ticks(width/50);this.yAxis=d3.svg.axis().scale(this.scaleY).orient("left").innerTickSize(-width).outerTickSize(1).tickPadding(10).ticks(height/20);this.svg.append("g").attr("class","x axis").attr("transform","translate("+marginLeft+", "+height+")").call(this.xAxis);this.svg.append("g").attr("class","y axis").attr("transform","translate("+marginLeft+", 0)").call(this.yAxis);}},{key:"setProfile",value:function setProfile(profile){this.render();}},{key:"addPoints",value:function addPoints(pointcloud,points){var _this49=this;if(this.pointclouds.get(pointcloud)===undefined){var _material5=this.materialPool.getMaterial();var geometry=this.geometryPool.getGeometry();var model=new THREE.Points(geometry,_material5);this.scene.add(model);var materialChanged=function materialChanged(e){_this49.render();};pointcloud.material.addEventListener("material_property_changed",materialChanged);this.pointclouds.set(pointcloud,{points:new Potree.Points(),material:_material5,geometry:geometry,model:model,listeners:[{target:pointcloud.material,type:"material_property_changed",callback:materialChanged}]});}var pc=this.pointclouds.get(pointcloud);pc.points.add(points);// rebuild 3d model
var projectedBox=new THREE.Box3();{var _geometry=pc.geometry;var _iteratorNormalCompletion68=true;var _didIteratorError68=false;var _iteratorError68=undefined;try{for(var _iterator68=Object.keys(pc.points.data)[Symbol.iterator](),_step68;!(_iteratorNormalCompletion68=(_step68=_iterator68.next()).done);_iteratorNormalCompletion68=true){var attribute=_step68.value;var buffer=pc.points.data[attribute];var itemSize=buffer.length/pc.points.numPoints;if(attribute==="position"){var posBuffer=new Float32Array(buffer.length);for(var _i67=0;_i67<pc.points.numPoints;_i67++){var x=pc.points.data.mileage[_i67];var y=buffer[3*_i67+2];posBuffer[3*_i67+0]=x;posBuffer[3*_i67+1]=y;posBuffer[3*_i67+2]=y;projectedBox.expandByPoint(new THREE.Vector3(x,y,0));}if(!posBuffer){console.log("wtf");}_geometry.attributes[attribute].array.set(posBuffer);}else if(attribute==="color"){_geometry.attributes[attribute].array.set(buffer);}else if(attribute==="mileage"){continue;}else if(_geometry.attributes[attribute]===undefined){continue;}else{_geometry.attributes[attribute].array.set(buffer);}_geometry.attributes[attribute].needsUpdate=true;_geometry.setDrawRange(0,pc.points.numPoints);}}catch(err){_didIteratorError68=true;_iteratorError68=err;}finally{try{if(!_iteratorNormalCompletion68&&_iterator68.return){_iterator68.return();}}finally{if(_didIteratorError68){throw _iteratorError68;}}}var radius=pc.points.boundingBox.getSize().toArray().reduce(function(a,v){return Math.max(a,v);});_geometry.boundingSphere=new THREE.Sphere(this.camera.position,radius);_geometry.boundingBox=_geometry.boundingSphere.getBoundingBox();}this.projectedBox.union(projectedBox);if(this.autoFit){// SCALE
var width=this.renderArea[0].clientWidth;var height=this.renderArea[0].clientHeight;var size=this.projectedBox.getSize();var sx=width/size.x;var sy=height/size.y;var scale=Math.min(sx,sy);var center=this.projectedBox.getCenter();this.scale.set(scale,scale,1);this.camera.position.copy(center);}var numPoints=0;var _iteratorNormalCompletion69=true;var _didIteratorError69=false;var _iteratorError69=undefined;try{for(var _iterator69=this.pointclouds.entries()[Symbol.iterator](),_step69;!(_iteratorNormalCompletion69=(_step69=_iterator69.next()).done);_iteratorNormalCompletion69=true){var entry=_step69.value;numPoints+=entry[1].points.numPoints;$("#profile_num_points").html(Potree.utils.addCommas(numPoints));}}catch(err){_didIteratorError69=true;_iteratorError69=err;}finally{try{if(!_iteratorNormalCompletion69&&_iterator69.return){_iterator69.return();}}finally{if(_didIteratorError69){throw _iteratorError69;}}}this.render();}},{key:"reset",value:function reset(){var _this50=this;this.autoFit=true;this.projectedBox=new THREE.Box3();var _iteratorNormalCompletion70=true;var _didIteratorError70=false;var _iteratorError70=undefined;try{for(var _iterator70=this.pointclouds[Symbol.iterator](),_step70;!(_iteratorNormalCompletion70=(_step70=_iterator70.next()).done);_iteratorNormalCompletion70=true){var entry=_step70.value;var pointcloud=entry[0];var _material6=entry[1].model.material;var geometry=entry[1].model.geometry;this.materialPool.returnMaterial(_material6);this.geometryPool.returnGeometry(geometry);entry[1].model.material=null;entry[1].model.geometry=null;var _iteratorNormalCompletion71=true;var _didIteratorError71=false;var _iteratorError71=undefined;try{for(var _iterator71=entry[1].listeners[Symbol.iterator](),_step71;!(_iteratorNormalCompletion71=(_step71=_iterator71.next()).done);_iteratorNormalCompletion71=true){var listener=_step71.value;listener.target.removeEventListener(listener.type,listener.callback);}}catch(err){_didIteratorError71=true;_iteratorError71=err;}finally{try{if(!_iteratorNormalCompletion71&&_iterator71.return){_iterator71.return();}}finally{if(_didIteratorError71){throw _iteratorError71;}}}}}catch(err){_didIteratorError70=true;_iteratorError70=err;}finally{try{if(!_iteratorNormalCompletion70&&_iterator70.return){_iterator70.return();}}finally{if(_didIteratorError70){throw _iteratorError70;}}}this.pointclouds.clear();this.mouseIsDown=false;this.mouse.set(0,0);this.scale.set(1,1,1);this.pickSphere.visible=false;this.scene.children.filter(function(c){return c instanceof THREE.Points;}).forEach(function(c){return _this50.scene.remove(c);});this.elRoot.find("#profileSelectionProperties").hide();this.render();}},{key:"show",value:function show(){this.elRoot.fadeIn();this.enabled=true;}},{key:"hide",value:function hide(){this.elRoot.fadeOut();this.enabled=false;}},{key:"updateScales",value:function updateScales(){var width=this.renderArea[0].clientWidth;var height=this.renderArea[0].clientHeight;var left=-width/2/this.scale.x;var right=+width/2/this.scale.x;var top=+height/2/this.scale.y;var bottom=-height/2/this.scale.y;this.camera.left=left;this.camera.right=right;this.camera.top=top;this.camera.bottom=bottom;this.camera.updateProjectionMatrix();this.scaleX.domain([this.camera.left+this.camera.position.x,this.camera.right+this.camera.position.x]).range([0,width]);this.scaleY.domain([this.camera.bottom+this.camera.position.y,this.camera.top+this.camera.position.y]).range([height,0]);}},{key:"render",value:function render(){var width=this.renderArea[0].clientWidth;var height=this.renderArea[0].clientHeight;this.updateScales();{// THREEJS
var radius=Math.abs(this.scaleX.invert(0)-this.scaleX.invert(5));this.pickSphere.scale.set(radius,radius,radius);this.pickSphere.position.z=this.camera.far-radius;var _iteratorNormalCompletion72=true;var _didIteratorError72=false;var _iteratorError72=undefined;try{for(var _iterator72=this.pointclouds[Symbol.iterator](),_step72;!(_iteratorNormalCompletion72=(_step72=_iterator72.next()).done);_iteratorNormalCompletion72=true){var entry=_step72.value;var pointcloud=entry[0];var _material7=entry[1].material;_material7.pointColorType=pointcloud.material.pointColorType;_material7.uniforms.intensityRange.value=pointcloud.material.uniforms.intensityRange.value;_material7.heightMin=pointcloud.material.heightMin;_material7.heightMax=pointcloud.material.heightMax;_material7.rgbGamma=pointcloud.material.rgbGamma;_material7.rgbContrast=pointcloud.material.rgbContrast;_material7.rgbBrightness=pointcloud.material.rgbBrightness;_material7.intensityRange=pointcloud.material.intensityRange;_material7.intensityGamma=pointcloud.material.intensityGamma;_material7.intensityContrast=pointcloud.material.intensityContrast;_material7.intensityBrightness=pointcloud.material.intensityBrightness;}}catch(err){_didIteratorError72=true;_iteratorError72=err;}finally{try{if(!_iteratorNormalCompletion72&&_iterator72.return){_iterator72.return();}}finally{if(_didIteratorError72){throw _iteratorError72;}}}this.renderer.setSize(width,height);this.renderer.render(this.scene,this.camera);}{// SVG SCALES
var marginLeft=this.renderArea[0].offsetLeft;this.xAxis.scale(this.scaleX).orient("bottom").innerTickSize(-height).outerTickSize(1).tickPadding(10).ticks(width/50);this.yAxis.scale(this.scaleY).orient("left").innerTickSize(-width).outerTickSize(1).tickPadding(10).ticks(height/20);d3.select(".x,axis").attr("transform","translate("+marginLeft+", "+height+")").call(this.xAxis);d3.select(".y,axis").attr("transform","translate("+marginLeft+", 0)").call(this.yAxis);}}}]);return ProfileWindow;}(THREE.EventDispatcher);Potree.ProfileWindowController=function(){function ProfileWindowController(viewer){var _this51=this;_classCallCheck(this,ProfileWindowController);this.viewer=viewer;this.profileWindow=viewer.profileWindow;this.profile=null;this.numPoints=0;this.threshold=30*1000;this.scheduledRecomputeTime=null;this.enabled=true;this.requests=[];this._recompute=function(){_this51.recompute();};}_createClass(ProfileWindowController,[{key:"setProfile",value:function setProfile(profile){if(this.profile!==null&&this.profile!==profile){this.profile.removeEventListener("marker_moved",this._recompute);this.profile.removeEventListener("marker_added",this._recompute);this.profile.removeEventListener("marker_removed",this._recompute);this.profile.removeEventListener("width_changed",this._recompute);}this.profile=profile;{this.profile.addEventListener("marker_moved",this._recompute);this.profile.addEventListener("marker_added",this._recompute);this.profile.addEventListener("marker_removed",this._recompute);this.profile.addEventListener("width_changed",this._recompute);}this.recompute();}},{key:"reset",value:function reset(){this.profileWindow.reset();this.numPoints=0;if(this.profile){var _iteratorNormalCompletion73=true;var _didIteratorError73=false;var _iteratorError73=undefined;try{for(var _iterator73=this.requests[Symbol.iterator](),_step73;!(_iteratorNormalCompletion73=(_step73=_iterator73.next()).done);_iteratorNormalCompletion73=true){var request=_step73.value;request.cancel();}}catch(err){_didIteratorError73=true;_iteratorError73=err;}finally{try{if(!_iteratorNormalCompletion73&&_iterator73.return){_iterator73.return();}}finally{if(_didIteratorError73){throw _iteratorError73;}}}}}},{key:"progressHandler",value:function progressHandler(pointcloud,progress){var _iteratorNormalCompletion74=true;var _didIteratorError74=false;var _iteratorError74=undefined;try{for(var _iterator74=progress.segments[Symbol.iterator](),_step74;!(_iteratorNormalCompletion74=(_step74=_iterator74.next()).done);_iteratorNormalCompletion74=true){var segment=_step74.value;this.profileWindow.addPoints(pointcloud,segment.points);this.numPoints+=segment.points.numPoints;}}catch(err){_didIteratorError74=true;_iteratorError74=err;}finally{try{if(!_iteratorNormalCompletion74&&_iterator74.return){_iterator74.return();}}finally{if(_didIteratorError74){throw _iteratorError74;}}}}},{key:"cancel",value:function cancel(){var _iteratorNormalCompletion75=true;var _didIteratorError75=false;var _iteratorError75=undefined;try{for(var _iterator75=this.requests[Symbol.iterator](),_step75;!(_iteratorNormalCompletion75=(_step75=_iterator75.next()).done);_iteratorNormalCompletion75=true){var request=_step75.value;request.cancel();//request.finishLevelThenCancel();
}}catch(err){_didIteratorError75=true;_iteratorError75=err;}finally{try{if(!_iteratorNormalCompletion75&&_iterator75.return){_iterator75.return();}}finally{if(_didIteratorError75){throw _iteratorError75;}}}this.requests=[];}},{key:"recompute",value:function recompute(){var _this52=this;if(!this.profile){return;}if(this.scheduledRecomputeTime!==null&&this.scheduledRecomputeTime>new Date().getTime()){return;}else{this.scheduledRecomputeTime=new Date().getTime()+100;}this.scheduledRecomputeTime=null;this.reset();var _loop5=function _loop5(pointcloud){var request=pointcloud.getPointsInProfile(_this52.profile,null,{"onProgress":function onProgress(event){if(!_this52.enabled){return;}_this52.progressHandler(pointcloud,event.points);if(_this52.numPoints>_this52.threshold){_this52.cancel();}},"onFinish":function onFinish(event){if(!_this52.enabled){return;}},"onCancel":function onCancel(){if(!_this52.enabled){return;}}});_this52.requests.push(request);};var _iteratorNormalCompletion76=true;var _didIteratorError76=false;var _iteratorError76=undefined;try{for(var _iterator76=this.viewer.scene.pointclouds.filter(function(p){return p.visible;})[Symbol.iterator](),_step76;!(_iteratorNormalCompletion76=(_step76=_iterator76.next()).done);_iteratorNormalCompletion76=true){var pointcloud=_step76.value;_loop5(pointcloud);}}catch(err){_didIteratorError76=true;_iteratorError76=err;}finally{try{if(!_iteratorNormalCompletion76&&_iterator76.return){_iterator76.return();}}finally{if(_didIteratorError76){throw _iteratorError76;}}}}}]);return ProfileWindowController;}();// http://epsg.io/
proj4.defs("UTM10N","+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=m +no_defs");Potree.MapView=function(){function _class12(viewer){_classCallCheck(this,_class12);this.viewer=viewer;this.webMapService="WMTS";this.mapProjectionName="EPSG:3857";this.mapProjection=proj4.defs(this.mapProjectionName);this.sceneProjection=null;this.extentsLayer=null;this.cameraLayer=null;this.toolLayer=null;this.sourcesLayer=null;this.sourcesLabelLayer=null;this.enabled=false;this.createAnnotationStyle=function(text){return[new ol.style.Style({image:new ol.style.Circle({radius:10,stroke:new ol.style.Stroke({color:[255,255,255,0.5],width:2}),fill:new ol.style.Fill({color:[0,0,0,0.5]})})})/*,
				new ol.style.Style({
					text: new ol.style.Text({
						font: '12px helvetica,sans-serif',
						text: text,
						fill: new ol.style.Fill({
							color: '#000'
						}),
						stroke: new ol.style.Stroke({
							color: '#fff',
							width: 2
						})
					})
				})*/];};this.createLabelStyle=function(text){var style=new ol.style.Style({image:new ol.style.Circle({radius:6,stroke:new ol.style.Stroke({color:'white',width:2}),fill:new ol.style.Fill({color:'green'})}),text:new ol.style.Text({font:'12px helvetica,sans-serif',text:text,fill:new ol.style.Fill({color:'#000'}),stroke:new ol.style.Stroke({color:'#fff',width:2})})});return style;};}_createClass(_class12,[{key:"showSources",value:function showSources(show){this.sourcesLayer.setVisible(show);this.sourcesLabelLayer.setVisible(show);}},{key:"init",value:function init(){var _this53=this;this.elMap=$("#potree_map");this.elMap.draggable({handle:$('#potree_map_header')});this.elMap.resizable();this.elTooltip=$("<div style=\"position: relative; z-index: 100\"></div>");this.elMap.append(this.elTooltip);var extentsLayer=this.getExtentsLayer();var cameraLayer=this.getCameraLayer();var toolLayer=this.getToolLayer();var sourcesLayer=this.getSourcesLayer();var sourcesLabelLayer=this.getSourcesLabelLayer();var annotationsLayer=this.getAnnotationsLayer();var mousePositionControl=new ol.control.MousePosition({coordinateFormat:ol.coordinate.createStringXY(5),projection:"EPSG:4326",undefinedHTML:'&nbsp;'});var _this=this;var DownloadSelectionControl=function DownloadSelectionControl(opt_options){var options=opt_options||{};// TOGGLE TILES
var btToggleTiles=document.createElement('button');btToggleTiles.innerHTML='T';btToggleTiles.addEventListener('click',function(){var visible=sourcesLayer.getVisible();_this.showSources(!visible);//sourcesLayer.setVisible(!visible);
//sourcesLabelLayer.setVisible(!visible);
},false);btToggleTiles.style.float="left";btToggleTiles.title="show / hide tiles";// DOWNLOAD SELECTED TILES
var link=document.createElement("a");link.href="#";link.download="list.txt";link.style.float="left";var button=document.createElement('button');button.innerHTML='D';link.appendChild(button);var this_=this;var handleDownload=function handleDownload(e){var features=selectedFeatures.getArray();var url=[location.protocol,'//',location.host,location.pathname].join('');if(features.length===0){alert("No tiles were selected. Select area with ctrl + left mouse button!");e.preventDefault();e.stopImmediatePropagation();return false;}else if(features.length===1){var feature=features[0];if(feature.source){var cloudjsurl=feature.pointcloud.pcoGeometry.url;var sourceurl=new URL(url+'/../'+cloudjsurl+'/../source/'+feature.source.name);link.href=sourceurl.href;link.download=feature.source.name;}}else{var content="";for(var i=0;i<features.length;i++){var _feature=features[i];if(_feature.source){var _cloudjsurl=_feature.pointcloud.pcoGeometry.url;var _sourceurl=new URL(url+'/../'+_cloudjsurl+'/../source/'+_feature.source.name);content+=_sourceurl.href+"\n";}}var uri="data:application/octet-stream;base64,"+btoa(content);link.href=uri;link.download="list_of_files.txt";}};button.addEventListener('click',handleDownload,false);// assemble container
var element=document.createElement('div');element.className='ol-unselectable ol-control';element.appendChild(link);element.appendChild(btToggleTiles);element.style.bottom="0.5em";element.style.left="0.5em";element.title="Download file or list of selected tiles. Select tile with left mouse button or area using ctrl + left mouse.";ol.control.Control.call(this,{element:element,target:options.target});};ol.inherits(DownloadSelectionControl,ol.control.Control);this.map=new ol.Map({controls:ol.control.defaults({attributionOptions:{collapsible:false}}).extend([//this.controls.zoomToExtent,
new DownloadSelectionControl(),mousePositionControl]),layers:[new ol.layer.Tile({source:new ol.source.OSM()}),this.toolLayer,this.annotationsLayer,this.sourcesLayer,this.sourcesLabelLayer,extentsLayer,cameraLayer],target:'potree_map_content',view:new ol.View({center:this.olCenter,zoom:9})});// DRAGBOX / SELECTION
this.dragBoxLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({stroke:new ol.style.Stroke({color:'rgba(0, 0, 255, 1)',width:2})})});this.map.addLayer(this.dragBoxLayer);var select=new ol.interaction.Select();this.map.addInteraction(select);var selectedFeatures=select.getFeatures();var dragBox=new ol.interaction.DragBox({condition:ol.events.condition.platformModifierKeyOnly});this.map.addInteraction(dragBox);this.map.on('pointermove',function(evt){var pixel=evt.pixel;var feature=_this53.map.forEachFeatureAtPixel(pixel,function(feature){return feature;});//console.log(feature);
//this.elTooltip.css("display", feature ? '' : 'none');
_this53.elTooltip.css("display","none");if(feature&&feature.onHover){feature.onHover(evt);//overlay.setPosition(evt.coordinate);
//tooltip.innerHTML = feature.get('name');
}});this.map.on('click',function(evt){var pixel=evt.pixel;var feature=_this53.map.forEachFeatureAtPixel(pixel,function(feature){return feature;});if(feature&&feature.onHover){feature.onClick(evt);}});dragBox.on('boxend',function(e){// features that intersect the box are added to the collection of
// selected features, and their names are displayed in the "info"
// div
var extent=dragBox.getGeometry().getExtent();_this53.getSourcesLayer().getSource().forEachFeatureIntersectingExtent(extent,function(feature){selectedFeatures.push(feature);});});// clear selection when drawing a new box and when clicking on the map
dragBox.on('boxstart',function(e){selectedFeatures.clear();});this.map.on('click',function(){selectedFeatures.clear();});this.viewer.addEventListener("scene_changed",function(e){_this53.setScene(e.scene);});this.onPointcloudAdded=function(e){_this53.load(e.pointcloud);};this.onAnnotationAdded=function(e){if(!_this53.sceneProjection){return;}var annotation=e.annotation;var position=annotation.position;var mapPos=_this53.toMap.forward([position.x,position.y]);var feature=new ol.Feature({geometry:new ol.geom.Point(mapPos),name:annotation.title});feature.setStyle(_this53.createAnnotationStyle(annotation.title));feature.onHover=function(evt){var coordinates=feature.getGeometry().getCoordinates();var p=_this53.map.getPixelFromCoordinate(coordinates);_this53.elTooltip.html(annotation.title);_this53.elTooltip.css("display","");_this53.elTooltip.css("left",p[0]+"px");_this53.elTooltip.css("top",p[1]+"px");};feature.onClick=function(evt){annotation.clickTitle();};_this53.getAnnotationsLayer().getSource().addFeature(feature);};this.setScene(this.viewer.scene);}},{key:"setScene",value:function setScene(scene){var _this54=this;if(this.scene===scene){return;};if(this.scene){this.scene.removeEventListener("pointcloud_added",this.onPointcloudAdded);this.scene.annotations.removeEventListener("annotation_added",this.onAnnotationAdded);}this.scene=scene;this.scene.addEventListener("pointcloud_added",this.onPointcloudAdded);this.scene.annotations.addEventListener("annotation_added",this.onAnnotationAdded);var _iteratorNormalCompletion77=true;var _didIteratorError77=false;var _iteratorError77=undefined;try{for(var _iterator77=this.viewer.scene.pointclouds[Symbol.iterator](),_step77;!(_iteratorNormalCompletion77=(_step77=_iterator77.next()).done);_iteratorNormalCompletion77=true){var pointcloud=_step77.value;this.load(pointcloud);}}catch(err){_didIteratorError77=true;_iteratorError77=err;}finally{try{if(!_iteratorNormalCompletion77&&_iterator77.return){_iterator77.return();}}finally{if(_didIteratorError77){throw _iteratorError77;}}}this.viewer.scene.annotations.traverseDescendants(function(annotation){_this54.onAnnotationAdded({annotation:annotation});});}},{key:"getExtentsLayer",value:function getExtentsLayer(){if(this.extentsLayer){return this.extentsLayer;}this.gExtent=new ol.geom.LineString([[0,0],[0,0]]);var feature=new ol.Feature(this.gExtent);var featureVector=new ol.source.Vector({features:[feature]});this.extentsLayer=new ol.layer.Vector({source:featureVector,style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(255, 255, 255, 0.2)'}),stroke:new ol.style.Stroke({color:'#0000ff',width:2}),image:new ol.style.Circle({radius:3,fill:new ol.style.Fill({color:'#0000ff'})})})});return this.extentsLayer;}},{key:"getAnnotationsLayer",value:function getAnnotationsLayer(){if(this.annotationsLayer){return this.annotationsLayer;}this.annotationsLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(255, 0, 0, 1)'}),stroke:new ol.style.Stroke({color:'rgba(255, 0, 0, 1)',width:2})})});return this.annotationsLayer;}},{key:"getCameraLayer",value:function getCameraLayer(){if(this.cameraLayer){return this.cameraLayer;}// CAMERA LAYER
this.gCamera=new ol.geom.LineString([[0,0],[0,0],[0,0],[0,0]]);var feature=new ol.Feature(this.gCamera);var featureVector=new ol.source.Vector({features:[feature]});this.cameraLayer=new ol.layer.Vector({source:featureVector,style:new ol.style.Style({stroke:new ol.style.Stroke({color:'#0000ff',width:2})})});return this.cameraLayer;}},{key:"getToolLayer",value:function getToolLayer(){if(this.toolLayer){return this.toolLayer;}this.toolLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(255, 0, 0, 1)'}),stroke:new ol.style.Stroke({color:'rgba(255, 0, 0, 1)',width:2})})});return this.toolLayer;}},{key:"getSourcesLayer",value:function getSourcesLayer(){if(this.sourcesLayer){return this.sourcesLayer;}this.sourcesLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(0, 0, 150, 0.1)'}),stroke:new ol.style.Stroke({color:'rgba(0, 0, 150, 1)',width:1})})});return this.sourcesLayer;}},{key:"getSourcesLabelLayer",value:function getSourcesLabelLayer(){if(this.sourcesLabelLayer){return this.sourcesLabelLayer;}this.sourcesLabelLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(255, 0, 0, 0.1)'}),stroke:new ol.style.Stroke({color:'rgba(255, 0, 0, 1)',width:2})}),minResolution:0.01,maxResolution:20});return this.sourcesLabelLayer;}},{key:"setSceneProjection",value:function setSceneProjection(sceneProjection){this.sceneProjection=sceneProjection;this.toMap=proj4(this.sceneProjection,this.mapProjection);this.toScene=proj4(this.mapProjection,this.sceneProjection);}},{key:"getMapExtent",value:function getMapExtent(){var bb=this.viewer.getBoundingBox();var bottomLeft=this.toMap.forward([bb.min.x,bb.min.y]);var bottomRight=this.toMap.forward([bb.max.x,bb.min.y]);var topRight=this.toMap.forward([bb.max.x,bb.max.y]);var topLeft=this.toMap.forward([bb.min.x,bb.max.y]);var extent={bottomLeft:bottomLeft,bottomRight:bottomRight,topRight:topRight,topLeft:topLeft};return extent;}},{key:"getMapCenter",value:function getMapCenter(){var mapExtent=this.getMapExtent();var mapCenter=[(mapExtent.bottomLeft[0]+mapExtent.topRight[0])/2,(mapExtent.bottomLeft[1]+mapExtent.topRight[1])/2];return mapCenter;}},{key:"updateToolDrawings",value:function updateToolDrawings(){this.toolLayer.getSource().clear();var profiles=this.viewer.profileTool.profiles;for(var i=0;i<profiles.length;i++){var profile=profiles[i];var coordinates=[];for(var j=0;j<profile.points.length;j++){var point=profile.points[j];var pointMap=this.toMap.forward([point.x,point.y]);coordinates.push(pointMap);}var line=new ol.geom.LineString(coordinates);var feature=new ol.Feature(line);this.toolLayer.getSource().addFeature(feature);}var measurements=this.viewer.measuringTool.measurements;for(var i=0;i<measurements.length;i++){var measurement=measurements[i];var _coordinates=[];for(var j=0;j<measurement.points.length;j++){var _point5=measurement.points[j].position;var _pointMap=this.toMap.forward([_point5.x,_point5.y]);_coordinates.push(_pointMap);}if(measurement.closed&&measurement.points.length>0){_coordinates.push(_coordinates[0]);}var _line=new ol.geom.LineString(_coordinates);var _feature2=new ol.Feature(_line);this.toolLayer.getSource().addFeature(_feature2);}}},{key:"load",value:function load(pointcloud){var _this55=this;if(!pointcloud){return;}if(!pointcloud.projection){return;}if(!this.sceneProjection){this.setSceneProjection(pointcloud.projection);}var mapExtent=this.getMapExtent();var mapCenter=this.getMapCenter();var view=this.map.getView();view.setCenter(mapCenter);this.gExtent.setCoordinates([mapExtent.bottomLeft,mapExtent.bottomRight,mapExtent.topRight,mapExtent.topLeft,mapExtent.bottomLeft]);view.fit(this.gExtent,[300,300],{constrainResolution:false});var url=pointcloud.pcoGeometry.url+"/../sources.json";$.getJSON(url,function(data){var sources=data.sources;for(var i=0;i<sources.length;i++){var source=sources[i];var _name4=source.name;var points=source.points;var bounds=source.bounds;var mapBounds={min:_this55.toMap.forward([bounds.min[0],bounds.min[1]]),max:_this55.toMap.forward([bounds.max[0],bounds.max[1]])};var _mapCenter=[(mapBounds.min[0]+mapBounds.max[0])/2,(mapBounds.min[1]+mapBounds.max[1])/2];var p1=_this55.toMap.forward([bounds.min[0],bounds.min[1]]);var p2=_this55.toMap.forward([bounds.max[0],bounds.min[1]]);var p3=_this55.toMap.forward([bounds.max[0],bounds.max[1]]);var p4=_this55.toMap.forward([bounds.min[0],bounds.max[1]]);var boxes=[];//var feature = new ol.Feature({
//	'geometry': new ol.geom.LineString([p1, p2, p3, p4, p1])
//});
var feature=new ol.Feature({'geometry':new ol.geom.Polygon([[p1,p2,p3,p4,p1]])});feature.source=source;feature.pointcloud=pointcloud;_this55.getSourcesLayer().getSource().addFeature(feature);feature=new ol.Feature({geometry:new ol.geom.Point(_mapCenter),name:_name4});feature.setStyle(_this55.createLabelStyle(_name4));_this55.sourcesLabelLayer.getSource().addFeature(feature);}});}},{key:"toggle",value:function toggle(){if(this.elMap.is(":visible")){this.elMap.css("display","none");this.enabled=false;}else{this.elMap.css("display","block");this.enabled=true;}}},{key:"update",value:function update(delta){if(!this.sceneProjection){return;}var pm=$("#potree_map");if(!this.enabled){return;}// resize
var mapSize=this.map.getSize();var resized=pm.width()!=mapSize[0]||pm.height()!=mapSize[1];if(resized){this.map.updateSize();}// camera
var scale=this.map.getView().getResolution();var camera=this.viewer.scene.camera;var campos=camera.position;var camdir=camera.getWorldDirection();var sceneLookAt=camdir.clone().multiplyScalar(30*scale).add(campos);var geoPos=camera.position;var geoLookAt=sceneLookAt;var mapPos=new THREE.Vector2().fromArray(this.toMap.forward([geoPos.x,geoPos.y]));var mapLookAt=new THREE.Vector2().fromArray(this.toMap.forward([geoLookAt.x,geoLookAt.y]));var mapDir=new THREE.Vector2().subVectors(mapLookAt,mapPos).normalize();mapLookAt=mapPos.clone().add(mapDir.clone().multiplyScalar(30*scale));var mapLength=mapPos.distanceTo(mapLookAt);var mapSide=new THREE.Vector2(-mapDir.y,mapDir.x);var p1=mapPos.toArray();var p2=mapLookAt.clone().sub(mapSide.clone().multiplyScalar(0.3*mapLength)).toArray();var p3=mapLookAt.clone().add(mapSide.clone().multiplyScalar(0.3*mapLength)).toArray();this.gCamera.setCoordinates([p1,p2,p3,p1]);}},{key:"sourcesVisible",get:function get(){return this.getSourcesLayer().getVisible();},set:function set(value){this.getSourcesLayer().setVisible(value);}}]);return _class12;}();var createToolIcon=function createToolIcon(icon,title,callback){var element=$("\n\t\t<img src=\""+icon+"\" \n\t\t\tstyle=\"width: 32px; height: 32px\" \n\t\t\tclass=\"button-icon\" \n\t\t\tdata-i18n=\""+title+"\" />\n\t");element.click(callback);return element;};function initToolbar(){// ANGLE
var elToolbar=$("#tools");elToolbar.append(createToolIcon(Potree.resourcePath+"/icons/angle.png","[title]tt.angle_measurement",function(){$("#menu_measurements").next().slideDown();viewer.measuringTool.startInsertion({showDistances:false,showAngles:true,showArea:false,closed:true,maxMarkers:3,name:"Angle"});}));// POINT
elToolbar.append(createToolIcon(Potree.resourcePath+"/icons/point.svg","[title]tt.point_measurement",function(){$("#menu_measurements").next().slideDown();viewer.measuringTool.startInsertion({showDistances:false,showAngles:false,showCoordinates:true,showArea:false,closed:true,maxMarkers:1,name:"Point"});}));// DISTANCE
elToolbar.append(createToolIcon(Potree.resourcePath+"/icons/distance.svg","[title]tt.distance_measurement",function(){$("#menu_measurements").next().slideDown();viewer.measuringTool.startInsertion({showDistances:true,showArea:false,closed:false,name:"Distance"});}));// HEIGHT
elToolbar.append(createToolIcon(Potree.resourcePath+"/icons/height.svg","[title]tt.height_measurement",function(){$("#menu_measurements").next().slideDown();viewer.measuringTool.startInsertion({showDistances:false,showHeight:true,showArea:false,closed:false,maxMarkers:2,name:"Height"});}));// AREA
elToolbar.append(createToolIcon(Potree.resourcePath+"/icons/area.svg","[title]tt.area_measurement",function(){$("#menu_measurements").next().slideDown();viewer.measuringTool.startInsertion({showDistances:true,showArea:true,closed:true,name:"Area"});}));// VOLUME
elToolbar.append(createToolIcon(Potree.resourcePath+"/icons/volume.svg","[title]tt.volume_measurement",function(){viewer.volumeTool.startInsertion();}));// PROFILE
elToolbar.append(createToolIcon(Potree.resourcePath+"/icons/profile.svg","[title]tt.height_profile",function(){$("#menu_measurements").next().slideDown();;viewer.profileTool.startInsertion();}));// CLIP VOLUME
elToolbar.append(createToolIcon(Potree.resourcePath+"/icons/clip_volume.svg","[title]tt.clip_volume",function(){viewer.volumeTool.startInsertion({clip:true});}));// REMOVE ALL
elToolbar.append(createToolIcon(Potree.resourcePath+"/icons/reset_tools.svg","[title]tt.remove_all_measurement",function(){viewer.scene.removeAllMeasurements();}));}function initClassificationList(){var elClassificationList=$("#classificationList");var addClassificationItem=function addClassificationItem(code,name){var inputID="chkClassification_"+code;var element=$("\n\t\t\t<li>\n\t\t\t\t<label style=\"whitespace: nowrap\">\n\t\t\t\t\t<input id=\""+inputID+"\" type=\"checkbox\" checked/>\n\t\t\t\t\t<span>"+name+"</span>\n\t\t\t\t</label>\n\t\t\t</li>\n\t\t");var elInput=element.find("input");elInput.click(function(event){viewer.setClassificationVisibility(code,event.target.checked);});elClassificationList.append(element);};addClassificationItem(0,"never classified");addClassificationItem(1,"unclassified");addClassificationItem(2,"ground");addClassificationItem(3,"low vegetation");addClassificationItem(4,"medium vegetation");addClassificationItem(5,"high vegetation");addClassificationItem(6,"building");addClassificationItem(7,"low point(noise)");addClassificationItem(8,"key-point");addClassificationItem(9,"water");addClassificationItem(12,"overlap");}function initAccordion(){$(".accordion > h3").each(function(){var header=$(this);var content=$(this).next();header.addClass("accordion-header ui-widget");content.addClass("accordion-content ui-widget");content.hide();header.click(function(){content.slideToggle();});});// to close all, call
// $(".accordion > div").hide()
// to open the, for example, tool menu, call: 
// $("#menu_tools").next().show()
}function initAppearance(){//$( "#optQuality" ).selectmenu();
//$("#optQuality").val(viewer.getQuality()).selectmenu("refresh")
//$("#optQuality").selectmenu({
//	change: function(event, ui){
//		viewer.setQuality(ui.item.value);
//	}
//});
$("#sldPointBudget").slider({value:viewer.getPointBudget(),min:100*1000,max:5*1000*1000,step:1000,slide:function slide(event,ui){viewer.setPointBudget(ui.value);}});$("#sldFOV").slider({value:viewer.getFOV(),min:20,max:100,step:1,slide:function slide(event,ui){viewer.setFOV(ui.value);}});$("#sldEDLRadius").slider({value:viewer.getEDLRadius(),min:1,max:4,step:0.01,slide:function slide(event,ui){viewer.setEDLRadius(ui.value);}});$("#sldEDLStrength").slider({value:viewer.getEDLStrength(),min:0,max:5,step:0.01,slide:function slide(event,ui){viewer.setEDLStrength(ui.value);}});viewer.addEventListener("point_budget_changed",function(event){$('#lblPointBudget')[0].innerHTML=Potree.utils.addCommas(viewer.getPointBudget());$("#sldPointBudget").slider({value:viewer.getPointBudget()});});viewer.addEventListener("fov_changed",function(event){$('#lblFOV')[0].innerHTML=parseInt(viewer.getFOV());$("#sldFOV").slider({value:viewer.getFOV()});});//viewer.addEventListener("quality_changed", e => {
//	
//	let name = viewer.quality;
//	
//	$( "#optQuality" )
//		.selectmenu()
//		.val(name)
//		.selectmenu("refresh");
//});
viewer.addEventListener("edl_radius_changed",function(event){$('#lblEDLRadius')[0].innerHTML=viewer.getEDLRadius().toFixed(1);$("#sldEDLRadius").slider({value:viewer.getEDLRadius()});});viewer.addEventListener("edl_strength_changed",function(event){$('#lblEDLStrength')[0].innerHTML=viewer.getEDLStrength().toFixed(1);$("#sldEDLStrength").slider({value:viewer.getEDLStrength()});});viewer.addEventListener("background_changed",function(event){$("input[name=background][value='"+viewer.getBackground()+"']").prop("checked",true);});$('#lblPointBudget')[0].innerHTML=Potree.utils.addCommas(viewer.getPointBudget());$('#lblFOV')[0].innerHTML=parseInt(viewer.getFOV());$('#lblEDLRadius')[0].innerHTML=viewer.getEDLRadius().toFixed(1);$('#lblEDLStrength')[0].innerHTML=viewer.getEDLStrength().toFixed(1);$('#chkEDLEnabled')[0].checked=viewer.getEDLEnabled();$("input[name=background][value='"+viewer.getBackground()+"']").prop("checked",true);}function initNavigation(){var elNavigation=$("#navigation");var sldMoveSpeed=$("#sldMoveSpeed");var lblMoveSpeed=$('#lblMoveSpeed');elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/earth_controls_1.png","[title]tt.earth_control",function(){viewer.setNavigationMode(Potree.EarthControls);}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/fps_controls.png","[title]tt.flight_control",function(){viewer.setNavigationMode(Potree.FirstPersonControls);}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/orbit_controls.svg","[title]tt.orbit_control",function(){viewer.setNavigationMode(Potree.OrbitControls);}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/focus.svg","[title]tt.focus_control",function(){viewer.fitToScreen();}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/topview.svg","[title]tt.top_view_control",function(){viewer.setTopView();}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/frontview.svg","[title]tt.front_view_control",function(){viewer.setFrontView();}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/leftview.svg","[title]tt.left_view_control",function(){viewer.setLeftView();}));var speedRange=new THREE.Vector2(1,10*1000);var toLinearSpeed=function toLinearSpeed(value){return Math.pow(value,4)*speedRange.y+speedRange.x;};var toExpSpeed=function toExpSpeed(value){return Math.pow((value-speedRange.x)/speedRange.y,1/4);};sldMoveSpeed.slider({value:toExpSpeed(viewer.getMoveSpeed()),min:0,max:1,step:0.01,slide:function slide(event,ui){viewer.setMoveSpeed(toLinearSpeed(ui.value));}});viewer.addEventListener("move_speed_changed",function(event){lblMoveSpeed.html(viewer.getMoveSpeed().toFixed(1));sldMoveSpeed.slider({value:toExpSpeed(viewer.getMoveSpeed())});});lblMoveSpeed.html(viewer.getMoveSpeed().toFixed(1));}function initAnnotationDetails(){// annotation_details
var annotationPanel=$("#annotation_details");var registeredEvents=[];var rebuild=function rebuild(){annotationPanel.empty();var _iteratorNormalCompletion78=true;var _didIteratorError78=false;var _iteratorError78=undefined;try{for(var _iterator78=registeredEvents[Symbol.iterator](),_step78;!(_iteratorNormalCompletion78=(_step78=_iterator78.next()).done);_iteratorNormalCompletion78=true){var registeredEvent=_step78.value;var type=registeredEvent.type,dispatcher=registeredEvent.dispatcher,callback=registeredEvent.callback;dispatcher.removeEventListener(type,callback);}}catch(err){_didIteratorError78=true;_iteratorError78=err;}finally{try{if(!_iteratorNormalCompletion78&&_iterator78.return){_iterator78.return();}}finally{if(_didIteratorError78){throw _iteratorError78;}}}registeredEvents=[];var checked=viewer.getShowAnnotations()?"checked":"";var chkEnable=$("\n\t\t\t<li>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"checkbox\" id=\"chkShowAnnotations\" "+checked+"\n\t\t\t\t\t\tonClick=\"viewer.setShowAnnotations(this.checked)\"/>\n\t\t\t\t\t<span data-i18n=\"annotations.show3D\"></span>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"checkbox\" id=\"chkShowAnnotationsMap\" "+checked+"\n\t\t\t\t\t\tonClick=\"viewer.mapView.getAnnotationsLayer().setVisible(this.checked)\"/>\n\t\t\t\t\t<span data-i18n=\"annotations.showMap\"></span>\n\t\t\t\t</label>\n\t\t\t</li>\n\t\t");annotationPanel.append(chkEnable);//let stack = viewer.scene.annotations.children.reverse().map(
//	a => ({annotation: a, container: annotationPanel}));
var stack=viewer.scene.annotations.children.map(function(a){return{annotation:a,container:annotationPanel};});var _loop6=function _loop6(){var _stack$shift=stack.shift(),annotation=_stack$shift.annotation,container=_stack$shift.container;// ►	U+25BA	\u25BA
// ▼	U+25BC	\u25BC
var element=$("\n\t\t\t\t<div class=\"annotation-item\" style=\"margin: 8px 20px\">\n\t\t\t\t\t<span class=\"annotation-main\">\n\t\t\t\t\t\t<span class=\"annotation-expand\">\u25BA</span>\n\t\t\t\t\t\t<span class=\"annotation-label\">\n\t\t\t\t\t\t\t"+annotation.title+"\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t");var elMain=element.find(".annotation-main");var elExpand=element.find(".annotation-expand");elExpand.css("display",annotation.children.length>0?"block":"none");var actions=[];{// ACTIONS, INCLUDING GOTO LOCATION
if(annotation.hasView()){var action=new Potree.Action({"icon":Potree.resourcePath+"/icons/target.svg","onclick":function onclick(e){annotation.moveHere(viewer.scene.camera);}});actions.push(action);}var _iteratorNormalCompletion79=true;var _didIteratorError79=false;var _iteratorError79=undefined;try{for(var _iterator79=annotation.actions[Symbol.iterator](),_step79;!(_iteratorNormalCompletion79=(_step79=_iterator79.next()).done);_iteratorNormalCompletion79=true){var _action2=_step79.value;actions.push(_action2);}}catch(err){_didIteratorError79=true;_iteratorError79=err;}finally{try{if(!_iteratorNormalCompletion79&&_iterator79.return){_iterator79.return();}}finally{if(_didIteratorError79){throw _iteratorError79;}}}}actions=actions.filter(function(a){return a.showIn===undefined||a.showIn.includes("sidebar");});// FIRST ACTION
if(annotation.children.length===0&&actions.length>0){var _action3=actions[0];var elIcon=$("<img src=\""+_action3.icon+"\" class=\"annotation-icon\">");if(_action3.tooltip){elIcon.attr("title",_action3.tooltip);}elMain.append(elIcon);elMain.click(function(e){return _action3.onclick({annotation:annotation});});elMain.mouseover(function(e){return elIcon.css("opacity",1);});elMain.mouseout(function(e){return elIcon.css("opacity",0.5);});{var iconChanged=function iconChanged(e){elIcon.attr("src",e.icon);};_action3.addEventListener("icon_changed",iconChanged);registeredEvents.push({type:"icon_changed",dispatcher:_action3,callback:iconChanged});}actions.splice(0,1);}// REMAINING ACTIONS
var _loop7=function _loop7(_action4){var elIcon=$("<img src=\""+_action4.icon+"\" class=\"annotation-icon\">");if(_action4.tooltip){elIcon.attr("title",_action4.tooltip);}elIcon.click(function(e){_action4.onclick({annotation:annotation});return false;});elIcon.mouseover(function(e){return elIcon.css("opacity",1);});elIcon.mouseout(function(e){return elIcon.css("opacity",0.5);});{var _iconChanged=function _iconChanged(e){elIcon.attr("src",e.icon);};_action4.addEventListener("icon_changed",_iconChanged);registeredEvents.push({type:"icon_changed",dispatcher:_action4,callback:_iconChanged});}element.append(elIcon);};var _iteratorNormalCompletion80=true;var _didIteratorError80=false;var _iteratorError80=undefined;try{for(var _iterator80=actions[Symbol.iterator](),_step80;!(_iteratorNormalCompletion80=(_step80=_iterator80.next()).done);_iteratorNormalCompletion80=true){var _action4=_step80.value;_loop7(_action4);}}catch(err){_didIteratorError80=true;_iteratorError80=err;}finally{try{if(!_iteratorNormalCompletion80&&_iterator80.return){_iterator80.return();}}finally{if(_didIteratorError80){throw _iteratorError80;}}}element.mouseover(function(e){return annotation.setHighlighted(true);});element.mouseout(function(e){return annotation.setHighlighted(false);});annotation.setHighlighted(false);container.append(element);if(annotation.children.length>0){element.click(function(e){if(element.next().is(":visible")){elExpand.html("\u25BA");}else{elExpand.html("\u25BC");}element.next().toggle(100);});//let left = ((annotation.level()) * 20) + "px";
var left="20px";var childContainer=$("<div style=\"margin: 0px; padding: 0px 0px 0px "+left+"; display: none\"></div>");var _iteratorNormalCompletion81=true;var _didIteratorError81=false;var _iteratorError81=undefined;try{for(var _iterator81=annotation.children[Symbol.iterator](),_step81;!(_iteratorNormalCompletion81=(_step81=_iterator81.next()).done);_iteratorNormalCompletion81=true){var child=_step81.value;container.append(childContainer);stack.push({annotation:child,container:childContainer});}}catch(err){_didIteratorError81=true;_iteratorError81=err;}finally{try{if(!_iteratorNormalCompletion81&&_iterator81.return){_iterator81.return();}}finally{if(_didIteratorError81){throw _iteratorError81;}}}}};while(stack.length>0){_loop6();};annotationPanel.i18n();};var annotationsChanged=function annotationsChanged(e){rebuild();};viewer.addEventListener("scene_changed",function(e){e.oldScene.annotations.removeEventListener("annotation_added",annotationsChanged);e.scene.annotations.addEventListener("annotation_added",annotationsChanged);rebuild();});viewer.scene.annotations.addEventListener("annotation_added",annotationsChanged);rebuild();}function initMeasurementDetails(){var id=0;var trackedItems=new Map();var removeIconPath=Potree.resourcePath+"/icons/remove.svg";var mlist=$("#measurement_list");var createCoordinatesTable=function createCoordinatesTable(measurement){var table=$("\n\t\t\t<table class=\"measurement_value_table\">\n\t\t\t\t<tr>\n\t\t\t\t\t<th>x</th>\n\t\t\t\t\t<th>y</th>\n\t\t\t\t\t<th>z</th>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t");var _iteratorNormalCompletion82=true;var _didIteratorError82=false;var _iteratorError82=undefined;try{for(var _iterator82=measurement.points[Symbol.iterator](),_step82;!(_iteratorNormalCompletion82=(_step82=_iterator82.next()).done);_iteratorNormalCompletion82=true){var point=_step82.value;var position=point instanceof THREE.Vector3?point:point.position;var x=Potree.utils.addCommas(position.x.toFixed(3));var y=Potree.utils.addCommas(position.y.toFixed(3));var z=Potree.utils.addCommas(position.z.toFixed(3));var row=$("\n\t\t\t\t<tr>\n\t\t\t\t\t<td><span>"+x+"</span></td>\n\t\t\t\t\t<td><span>"+y+"</span></td>\n\t\t\t\t\t<td><span>"+z+"</span></td>\n\t\t\t\t</tr>\n\t\t\t");table.append(row);}}catch(err){_didIteratorError82=true;_iteratorError82=err;}finally{try{if(!_iteratorNormalCompletion82&&_iterator82.return){_iterator82.return();}}finally{if(_didIteratorError82){throw _iteratorError82;}}}return table;};var createAttributesTable=function createAttributesTable(measurement){var elTable=$('<table class="measurement_value_table"></table>');var point=measurement.points[0];if(point.color){var color=point.color;var text=color.join(", ");elTable.append($("\n\t\t\t\t<tr>\n\t\t\t\t\t<td>rgb</td>\n\t\t\t\t\t<td>"+text+"</td>\n\t\t\t\t</tr>\n\t\t\t"));}return elTable;};var MeasurePanel=function(){function MeasurePanel(scene,measurement){var _this56=this;_classCallCheck(this,MeasurePanel);this.scene=scene;this.measurement=measurement;this.icon=null;this.constructor.counter=this.constructor.counter===undefined?0:this.constructor.counter+1;this.id=this.constructor.counter;var title=measurement.name;this.elPanel=$("\n\t\t\t\t<span class=\"measurement_item\">\n\t\t\t\t\t<!-- HEADER -->\n\t\t\t\t\t<div class=\"measurement_header\" onclick=\"$(this).next().slideToggle(200)\">\n\t\t\t\t\t\t<span class=\"measurement_icon\"><img src=\"\" class=\"measurement_item_icon\" /></span>\n\t\t\t\t\t\t<span class=\"measurement_header_title\">"+title+"</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<!-- DETAIL -->\n\t\t\t\t\t<div class=\"measurement_content selectable\" style=\"display: none\">\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t");this.elContentContainer=this.elPanel.find(".measurement_content");this.elIcon=this.elPanel.find(".measurement_item_icon");this._update=function(){_this56.update();};}_createClass(MeasurePanel,[{key:"destroy",value:function destroy(){}},{key:"update",value:function update(){}}]);return MeasurePanel;}();;var DistancePanel=function(_MeasurePanel){_inherits(DistancePanel,_MeasurePanel);function DistancePanel(scene,measurement){_classCallCheck(this,DistancePanel);var _this57=_possibleConstructorReturn(this,(DistancePanel.__proto__||Object.getPrototypeOf(DistancePanel)).call(this,scene,measurement));_this57.typename="Distance";_this57.icon=Potree.resourcePath+"/icons/distance.svg";_this57.elIcon.attr("src",_this57.icon);_this57.elContent=$("\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"coordinates_table_container\"></span>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<br>\n\t\t\t\t\t<table id=\"distances_table_"+_this57.id+"\" class=\"measurement_value_table\">\n\t\t\t\t\t</table>\n\t\t\t\t\t\n\t\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t\t<div style=\"display: flex; margin-top: 12px\">\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t<span style=\"flex-grow: 1\"></span>\n\t\t\t\t\t\t<img class=\"measurement_action_remove\" src=\""+removeIconPath+"\" style=\"width: 16px; height: 16px\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t");_this57.elContentContainer.append(_this57.elContent);var elRemove=_this57.elContent.find(".measurement_action_remove");elRemove.click(function(){_this57.scene.removeMeasurement(measurement);});_this57.measurement.addEventListener("marker_added",_this57._update);_this57.measurement.addEventListener("marker_removed",_this57._update);_this57.measurement.addEventListener("marker_moved",_this57._update);_this57.update();return _this57;}_createClass(DistancePanel,[{key:"update",value:function update(){var elCoordiantesContainer=this.elContent.find(".coordinates_table_container");elCoordiantesContainer.empty();elCoordiantesContainer.append(createCoordinatesTable(this.measurement));var positions=this.measurement.points.map(function(p){return p.position;});var distances=[];for(var _i68=0;_i68<positions.length-1;_i68++){var d=positions[_i68].distanceTo(positions[_i68+1]);distances.push(d.toFixed(3));}var totalDistance=this.measurement.getTotalDistance().toFixed(3);var elDistanceTable=this.elContent.find("#distances_table_"+this.id);elDistanceTable.empty();for(var _i69=0;_i69<distances.length;_i69++){var label=_i69===0?"Distances: ":"";var distance=distances[_i69];var elDistance=$("\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>"+label+"</th>\n\t\t\t\t\t\t<td style=\"width: 100%; padding-left: 10px\">"+distance+"</td>\n\t\t\t\t\t</tr>");elDistanceTable.append(elDistance);}var elTotal=$("\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Total: </td><td style=\"width: 100%; padding-left: 10px\">"+totalDistance+"</th>\n\t\t\t\t</tr>");elDistanceTable.append(elTotal);//let elDistance = this.elContent.find(`#distance_${this.id}`);
//elDistance.html(totalDistance);
}},{key:"destroy",value:function destroy(){this.elPanel.remove();this.measurement.removeEventListener("marker_added",this._update);this.measurement.removeEventListener("marker_removed",this._update);this.measurement.removeEventListener("marker_moved",this._update);}}]);return DistancePanel;}(MeasurePanel);;var PointPanel=function(_MeasurePanel2){_inherits(PointPanel,_MeasurePanel2);function PointPanel(scene,measurement){_classCallCheck(this,PointPanel);var _this58=_possibleConstructorReturn(this,(PointPanel.__proto__||Object.getPrototypeOf(PointPanel)).call(this,scene,measurement));_this58.typename="Point";_this58.icon=Potree.resourcePath+"/icons/point.svg";_this58.elIcon.attr("src",_this58.icon);var totalDistance=_this58.measurement.getTotalDistance().toFixed(3);_this58.elContent=$("\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"coordinates_table_container\"></span>\n\t\t\t\t\t\n\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t<span class=\"attributes_table_container\"></span>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t\t<div style=\"display: flex; margin-top: 12px\">\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t<span style=\"flex-grow: 1\"></span>\n\t\t\t\t\t\t<img class=\"measurement_action_remove\" src=\""+removeIconPath+"\" style=\"width: 16px; height: 16px\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t");_this58.elContentContainer.append(_this58.elContent);var elRemove=_this58.elContent.find(".measurement_action_remove");elRemove.click(function(){_this58.scene.removeMeasurement(measurement);});_this58.measurement.addEventListener("marker_added",_this58._update);_this58.measurement.addEventListener("marker_removed",_this58._update);_this58.measurement.addEventListener("marker_moved",_this58._update);_this58.update();return _this58;}_createClass(PointPanel,[{key:"update",value:function update(){var elCoordiantesContainer=this.elContent.find(".coordinates_table_container");elCoordiantesContainer.empty();elCoordiantesContainer.append(createCoordinatesTable(this.measurement));var elAttributesContainer=this.elContent.find(".attributes_table_container");elAttributesContainer.empty();elAttributesContainer.append(createAttributesTable(this.measurement));}},{key:"destroy",value:function destroy(){this.elPanel.remove();this.measurement.removeEventListener("marker_added",this._update);this.measurement.removeEventListener("marker_removed",this._update);this.measurement.removeEventListener("marker_moved",this._update);}}]);return PointPanel;}(MeasurePanel);;var AreaPanel=function(_MeasurePanel3){_inherits(AreaPanel,_MeasurePanel3);function AreaPanel(scene,measurement){_classCallCheck(this,AreaPanel);var _this59=_possibleConstructorReturn(this,(AreaPanel.__proto__||Object.getPrototypeOf(AreaPanel)).call(this,scene,measurement));_this59.typename="Area";_this59.icon=Potree.resourcePath+"/icons/area.svg";_this59.elIcon.attr("src",_this59.icon);var totalDistance=_this59.measurement.getTotalDistance().toFixed(3);_this59.elContent=$("\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"coordinates_table_container\"></span>\n\t\t\t\t\t\n\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t<span style=\"font-weight: bold\">Area: </span>\n\t\t\t\t\t<span id=\"measurement_area_"+_this59.id+"\"></span>\n\t\t\t\t\t\n\t\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t\t<div style=\"display: flex; margin-top: 12px\">\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t<span style=\"flex-grow: 1\"></span>\n\t\t\t\t\t\t<img class=\"measurement_action_remove\" src=\""+removeIconPath+"\" style=\"width: 16px; height: 16px\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t");_this59.elContentContainer.append(_this59.elContent);var elRemove=_this59.elContent.find(".measurement_action_remove");elRemove.click(function(){_this59.scene.removeMeasurement(measurement);});_this59.measurement.addEventListener("marker_added",_this59._update);_this59.measurement.addEventListener("marker_removed",_this59._update);_this59.measurement.addEventListener("marker_moved",_this59._update);_this59.update();return _this59;}_createClass(AreaPanel,[{key:"update",value:function update(){var elCoordiantesContainer=this.elContent.find(".coordinates_table_container");elCoordiantesContainer.empty();elCoordiantesContainer.append(createCoordinatesTable(this.measurement));var elArea=this.elContent.find("#measurement_area_"+this.id);elArea.html(this.measurement.getArea().toFixed(3));}},{key:"destroy",value:function destroy(){this.elPanel.remove();this.measurement.removeEventListener("marker_added",this._update);this.measurement.removeEventListener("marker_removed",this._update);this.measurement.removeEventListener("marker_moved",this._update);}}]);return AreaPanel;}(MeasurePanel);;var AnglePanel=function(_MeasurePanel4){_inherits(AnglePanel,_MeasurePanel4);function AnglePanel(scene,measurement){_classCallCheck(this,AnglePanel);var _this60=_possibleConstructorReturn(this,(AnglePanel.__proto__||Object.getPrototypeOf(AnglePanel)).call(this,scene,measurement));_this60.typename="Angle";_this60.icon=Potree.resourcePath+"/icons/angle.png";_this60.elIcon.attr("src",_this60.icon);var totalDistance=_this60.measurement.getTotalDistance().toFixed(3);_this60.elContent=$("\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"coordinates_table_container\"></span>\n\t\t\t\t\t\n\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t<table class=\"measurement_value_table\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>\u03B1</th>\n\t\t\t\t\t\t\t<th>\u03B2</th>\n\t\t\t\t\t\t\t<th>\u03B3</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td align=\"center\" id=\"angle_cell_alpha_"+_this60.id+"\" style=\"width: 33%\"></td>\n\t\t\t\t\t\t\t<td align=\"center\" id=\"angle_cell_betta_"+_this60.id+"\" style=\"width: 33%\"></td>\n\t\t\t\t\t\t\t<td align=\"center\" id=\"angle_cell_gamma_"+_this60.id+"\" style=\"width: 33%\"></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t\t\n\t\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t\t<div style=\"display: flex; margin-top: 12px\">\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t<span style=\"flex-grow: 1\"></span>\n\t\t\t\t\t\t<img class=\"measurement_action_remove\" src=\""+removeIconPath+"\" style=\"width: 16px; height: 16px\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t");_this60.elContentContainer.append(_this60.elContent);var elRemove=_this60.elContent.find(".measurement_action_remove");elRemove.click(function(){_this60.scene.removeMeasurement(measurement);});_this60.measurement.addEventListener("marker_added",_this60._update);_this60.measurement.addEventListener("marker_removed",_this60._update);_this60.measurement.addEventListener("marker_moved",_this60._update);_this60.update();return _this60;}_createClass(AnglePanel,[{key:"update",value:function update(){var elCoordiantesContainer=this.elContent.find(".coordinates_table_container");elCoordiantesContainer.empty();elCoordiantesContainer.append(createCoordinatesTable(this.measurement));var angles=[];for(var _i70=0;_i70<this.measurement.points.length;_i70++){angles.push(this.measurement.getAngle(_i70)*(180.0/Math.PI));}angles=angles.map(function(a){return a.toFixed(1)+"\xB0";});var elAlpha=this.elContent.find("#angle_cell_alpha_"+this.id);var elBetta=this.elContent.find("#angle_cell_betta_"+this.id);var elGamma=this.elContent.find("#angle_cell_gamma_"+this.id);elAlpha.html(angles[0]);elBetta.html(angles[1]);elGamma.html(angles[2]);}},{key:"destroy",value:function destroy(){this.elPanel.remove();this.measurement.removeEventListener("marker_added",this._update);this.measurement.removeEventListener("marker_removed",this._update);this.measurement.removeEventListener("marker_moved",this._update);}}]);return AnglePanel;}(MeasurePanel);;var HeightPanel=function(_MeasurePanel5){_inherits(HeightPanel,_MeasurePanel5);function HeightPanel(scene,measurement){_classCallCheck(this,HeightPanel);var _this61=_possibleConstructorReturn(this,(HeightPanel.__proto__||Object.getPrototypeOf(HeightPanel)).call(this,scene,measurement));_this61.typename="Height";_this61.icon=Potree.resourcePath+"/icons/height.svg";_this61.elIcon.attr("src",_this61.icon);_this61.elContent=$("\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"coordinates_table_container\"></span>\n\t\t\t\t\t\n\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t<span id=\"height_label_"+_this61.id+"\">Height: </span><br>\n\t\t\t\t\t\n\t\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t\t<div style=\"display: flex; margin-top: 12px\">\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t<span style=\"flex-grow: 1\"></span>\n\t\t\t\t\t\t<img class=\"measurement_action_remove\" src=\""+removeIconPath+"\" style=\"width: 16px; height: 16px\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t");_this61.elContentContainer.append(_this61.elContent);var elRemove=_this61.elContent.find(".measurement_action_remove");elRemove.click(function(){_this61.scene.removeMeasurement(measurement);});_this61.measurement.addEventListener("marker_added",_this61._update);_this61.measurement.addEventListener("marker_removed",_this61._update);_this61.measurement.addEventListener("marker_moved",_this61._update);_this61.update();return _this61;}_createClass(HeightPanel,[{key:"update",value:function update(){var elCoordiantesContainer=this.elContent.find(".coordinates_table_container");elCoordiantesContainer.empty();elCoordiantesContainer.append(createCoordinatesTable(this.measurement));{var points=this.measurement.points;var sorted=points.slice().sort(function(a,b){return a.position.z-b.position.z;});var lowPoint=sorted[0].position.clone();var highPoint=sorted[sorted.length-1].position.clone();var min=lowPoint.z;var max=highPoint.z;var height=max-min;height=height.toFixed(3);this.elHeightLabel=this.elContent.find("#height_label_"+this.id);this.elHeightLabel.html("<b>Height:</b> "+height);}}},{key:"destroy",value:function destroy(){this.elPanel.remove();this.measurement.removeEventListener("marker_added",this._update);this.measurement.removeEventListener("marker_removed",this._update);this.measurement.removeEventListener("marker_moved",this._update);}}]);return HeightPanel;}(MeasurePanel);;var ProfilePanel=function(_MeasurePanel6){_inherits(ProfilePanel,_MeasurePanel6);function ProfilePanel(scene,measurement){_classCallCheck(this,ProfilePanel);var _this62=_possibleConstructorReturn(this,(ProfilePanel.__proto__||Object.getPrototypeOf(ProfilePanel)).call(this,scene,measurement));_this62.typename="Profile";_this62.icon=Potree.resourcePath+"/icons/profile.svg";_this62.elIcon.attr("src",_this62.icon);var labelID="lblProfileWidth_"+_this62.id;var sliderID="sldProfileWidth_"+_this62.id;_this62.elContent=$("\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"coordinates_table_container\"></span>\n\t\t\t\t\t\n\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t<span style=\"display:flex\">\n\t\t\t\t\t\t<span style=\"display:flex; align-items: center; padding-right: 10px\">Width: </span>\n\t\t\t\t\t\t<input id=\""+sliderID+"\" name=\""+sliderID+"\" value=\"5.06\" style=\"flex-grow: 1; width:100%\">\n\t\t\t\t\t</span>\n\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t<input type=\"button\" value=\"Prepare Download\" id=\"download_profile_"+_this62.id+"\"/>\n\t\t\t\t\t<span id=\"download_profile_status_"+_this62.id+"\"></span>\n\t\t\t\t\t\n\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t<input type=\"button\" id=\"show_2d_profile_"+_this62.id+"\" value=\"show 2d profile\" style=\"width: 100%\"/>\n\t\t\t\t\t\n\t\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t\t<div style=\"display: flex; margin-top: 12px\">\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t<span style=\"flex-grow: 1\"></span>\n\t\t\t\t\t\t<img class=\"measurement_action_remove\" src=\""+removeIconPath+"\" style=\"width: 16px; height: 16px\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t");_this62.elContentContainer.append(_this62.elContent);_this62.elShow2DProfile=_this62.elContent.find("#show_2d_profile_"+_this62.id);_this62.elShow2DProfile.click(function(){viewer.profileWindow.show();viewer.profileWindowController.setProfile(measurement);//viewer.profileWindow.draw(measurement);
});{// download
_this62.elDownloadButton=_this62.elContent.find("#download_profile_"+_this62.id);if(viewer.server){_this62.elDownloadButton.click(function(){return _this62.download();});}else{_this62.elDownloadButton.hide();}}{// width spinner
var elWidthLabel=_this62.elContent.find("#"+labelID);var elWidthSlider=_this62.elContent.find("#"+sliderID);var startValue=0;elWidthSlider.spinner({min:0,max:10*1000*1000,step:0.01,numberFormat:"n",start:function start(event,ui){startValue=measurement.getWidth();},spin:function spin(event,ui){var value=elWidthSlider.spinner("value");measurement.setWidth(value);},change:function change(event,ui){var value=elWidthSlider.spinner("value");measurement.setWidth(value);},stop:function stop(event,ui){var value=elWidthSlider.spinner("value");measurement.setWidth(value);},incremental:function incremental(count){var value=elWidthSlider.spinner("value");var step=elWidthSlider.spinner("option","step");var delta=value*0.05;var increments=Math.max(1,parseInt(delta/step));return increments;}});elWidthSlider.spinner("value",measurement.getWidth());elWidthSlider.spinner("widget").css("width","100%");_this62.widthListener=function(event){var value=elWidthSlider.spinner("value");if(value!==measurement.getWidth()){elWidthSlider.spinner("value",measurement.getWidth());}};measurement.addEventListener("width_changed",_this62.widthListener);}var elRemove=_this62.elContent.find(".measurement_action_remove");elRemove.click(function(){_this62.scene.removeProfile(measurement);});_this62.measurement.addEventListener("marker_added",_this62._update);_this62.measurement.addEventListener("marker_removed",_this62._update);_this62.measurement.addEventListener("marker_moved",_this62._update);_this62.update();return _this62;}_createClass(ProfilePanel,[{key:"update",value:function update(){var _this63=this;var elCoordiantesContainer=this.elContent.find(".coordinates_table_container");elCoordiantesContainer.empty();var coordinatesTable=createCoordinatesTable(this.measurement);var validate=function validate(input){return!isNaN(Number(input));};var cells=coordinatesTable.find("span");cells.attr("contenteditable","true");cells=cells.toArray();var _loop8=function _loop8(_i71){var cell=cells[_i71];var measure=_this63.measurement;var updateCallback=_this63._update;var assignValue=function assignValue(){var text=Potree.utils.removeCommas($(cell).html());var num=Number(text);if(!isNaN(num)){$(cell).removeClass("invalid_value");measure.removeEventListener("marker_moved",updateCallback);var index=parseInt(_i71/3);var coordinateComponent=_i71%3;var position=measure.points[index].clone();if(coordinateComponent===0){position.x=num;}else if(coordinateComponent===1){position.y=num;}else if(coordinateComponent===2){position.z=num;}measure.setPosition(index,position);measure.addEventListener("marker_moved",updateCallback);}else{$(cell).addClass("invalid_value");}};$(cell).on("keypress",function(e){if(e.which===13){assignValue();return false;}});$(cell).focusout(function(){return assignValue();});$(cell).on("input",function(e){var text=Potree.utils.removeCommas($(this).html());var num=Number(text);if(!isNaN(num)){$(this).removeClass("invalid_value");}else{$(this).addClass("invalid_value");}});};for(var _i71=0;_i71<cells.length;_i71++){_loop8(_i71);}elCoordiantesContainer.append(coordinatesTable);}},{key:"download",value:function download(){var profile=this.measurement;var boxes=profile.getSegmentMatrices().map(function(m){return m.elements.join(",");}).join(",");var minLOD=0;var maxLOD=100;var pcs=[];var _iteratorNormalCompletion83=true;var _didIteratorError83=false;var _iteratorError83=undefined;try{for(var _iterator83=this.scene.pointclouds[Symbol.iterator](),_step83;!(_iteratorNormalCompletion83=(_step83=_iterator83.next()).done);_iteratorNormalCompletion83=true){var pointcloud=_step83.value;var urlIsAbsolute=new RegExp('^(?:[a-z]+:)?//','i').test(pointcloud.pcoGeometry.url);var _pc="";if(urlIsAbsolute){_pc=pointcloud.pcoGeometry.url;}else{_pc=window.location.href+"/../"+pointcloud.pcoGeometry.url;}pcs.push(_pc);}}catch(err){_didIteratorError83=true;_iteratorError83=err;}finally{try{if(!_iteratorNormalCompletion83&&_iterator83.return){_iterator83.return();}}finally{if(_didIteratorError83){throw _iteratorError83;}}}var pc=pcs.map(function(v){return"pointcloud[]="+v;}).join("&");var request=viewer.server+"/start_extract_region_worker?minLOD="+minLOD+"&maxLOD="+maxLOD+"&box="+boxes+"&"+pc;//console.log(request);
var elMessage=this.elContent.find("#download_profile_status_"+this.id);elMessage.html("sending request...");var workerID=null;var start=new Date().getTime();var observe=function observe(){var request=viewer.server+"/observe_status?workerID="+workerID;var loaded=0;var xhr=new XMLHttpRequest();xhr.withCredentials=true;xhr.addEventListener("progress",function(e){var nowLoaded=e.loaded;var response=xhr.responseText.substring(loaded,nowLoaded);response=JSON.parse(response);if(response.status==="FINISHED"){elMessage.html("<br><a href=\""+viewer.server+"/get_las?workerID="+workerID+"\">Download ready</a>");}else{var current=new Date().getTime();var duration=current-start;var seconds=parseInt(duration/1000);elMessage.html("processing request... "+seconds+"s");}loaded=nowLoaded;});xhr.open('GET',request,true);xhr.send(null);};var xhr=new XMLHttpRequest();xhr.withCredentials=true;xhr.onreadystatechange=function(){if(xhr.readyState==XMLHttpRequest.DONE){//alert(xhr.responseText);
var res=JSON.parse(xhr.responseText);console.log(res);if(res.status==="OK"){workerID=res.workerID;elMessage.html("request is being processed");//checkUntilFinished();
observe();}else if(res.status==="ERROR_POINT_PROCESSED_ESTIMATE_TOO_LARGE"){elMessage.html("Too many candidate points in selection.");}else{elMessage.html(""+res.status);}}};xhr.open('GET',request,true);xhr.send(null);}},{key:"destroy",value:function destroy(){this.elPanel.remove();this.measurement.removeEventListener("marker_added",this._update);this.measurement.removeEventListener("marker_removed",this._update);this.measurement.removeEventListener("marker_moved",this._update);this.measurement.removeEventListener("width_changed",this.widthListener);}}]);return ProfilePanel;}(MeasurePanel);;var VolumePanel=function(_MeasurePanel7){_inherits(VolumePanel,_MeasurePanel7);function VolumePanel(scene,measurement){_classCallCheck(this,VolumePanel);var _this64=_possibleConstructorReturn(this,(VolumePanel.__proto__||Object.getPrototypeOf(VolumePanel)).call(this,scene,measurement));_this64.typename="Volume";_this64.icon=Potree.resourcePath+"/icons/volume.svg";_this64.elIcon.attr("src",_this64.icon);_this64.values={};_this64.elContent=$("\n\t\t\t\t<div>\n\n\t\t\t\t\t<div style=\"width: 100%;\">\n\t\t\t\t\t\t<div style=\"display:inline-flex; width: 100%; \">\n\t\t\t\t\t\t\t<span class=\"input-grid-label\">x</span>\n\t\t\t\t\t\t\t<span class=\"input-grid-label\">y</span>\n\t\t\t\t\t\t\t<span class=\"input-grid-label\">z</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style=\"display:inline-flex; width: 100%;\">\n\t\t\t\t\t\t\t<span class=\"input-grid-cell\"><input type=\"text\" id=\"volume_input_x_"+measurement.id+"\"/></span>\n\t\t\t\t\t\t\t<span class=\"input-grid-cell\"><input type=\"text\" id=\"volume_input_y_"+measurement.id+"\"/></span>\n\t\t\t\t\t\t\t<span class=\"input-grid-cell\"><input type=\"text\" id=\"volume_input_z_"+measurement.id+"\"/></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div style=\"width: 100%;\">\n\t\t\t\t\t\t<div style=\"display:inline-flex; width: 100%; \">\n\t\t\t\t\t\t\t<span class=\"input-grid-label\">length</span>\n\t\t\t\t\t\t\t<span class=\"input-grid-label\">width</span>\n\t\t\t\t\t\t\t<span class=\"input-grid-label\">height</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style=\"display:inline-flex; width: 100%;\">\n\t\t\t\t\t\t\t<span class=\"input-grid-cell\"><input type=\"text\" id=\"volume_input_length_"+measurement.id+"\"/></span>\n\t\t\t\t\t\t\t<span class=\"input-grid-cell\"><input type=\"text\" id=\"volume_input_width_"+measurement.id+"\"/></span>\n\t\t\t\t\t\t\t<span class=\"input-grid-cell\"><input type=\"text\" id=\"volume_input_height_"+measurement.id+"\"/></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style=\"width: 100%;\">\n\t\t\t\t\t\t<div style=\"display:inline-flex; width: 100%; \">\n\t\t\t\t\t\t\t<span class=\"input-grid-label\">&alpha;</span>\n\t\t\t\t\t\t\t<span class=\"input-grid-label\">&beta;</span>\n\t\t\t\t\t\t\t<span class=\"input-grid-label\">&gamma;</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style=\"display:inline-flex; width: 100%;\">\n\t\t\t\t\t\t\t<span class=\"input-grid-cell\"><input type=\"text\" id=\"volume_input_alpha_"+measurement.id+"\"/></span>\n\t\t\t\t\t\t\t<span class=\"input-grid-cell\"><input type=\"text\" id=\"volume_input_beta_"+measurement.id+"\"/></span>\n\t\t\t\t\t\t\t<span class=\"input-grid-cell\"><input type=\"text\" id=\"volume_input_gamma_"+measurement.id+"\"/></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<label><input type=\"checkbox\" id=\"chkClip_"+_this64.measurement.id+"\"/><span data-i18n=\"measurements.clip\"></span></label>\n\t\t\t\t\t<label><input type=\"checkbox\" id=\"chkVisible_"+_this64.measurement.id+"\"/><span data-i18n=\"measurements.show\"></span></label>\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<input type=\"button\" value=\"Prepare Download\" id=\"download_volume_"+_this64.id+"\"/>\n\t\t\t\t\t<span id=\"download_volume_status_"+_this64.id+"\"></span>\n\t\t\t\t\t\n\t\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t\t<div style=\"display: flex; margin-top: 12px\">\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t<span style=\"flex-grow: 1\"></span>\n\t\t\t\t\t\t<img class=\"measurement_action_remove\" src=\""+removeIconPath+"\" style=\"width: 16px; height: 16px\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t");_this64.elContentContainer.append(_this64.elContent);_this64.elClip=_this64.elContent.find("#chkClip_"+_this64.measurement.id);_this64.elVisible=_this64.elContent.find("#chkVisible_"+_this64.measurement.id);_this64.elClip.click(function(){_this64.measurement.clip=_this64.elClip.is(":checked");});_this64.elVisible.click(function(){_this64.measurement.visible=_this64.elVisible.is(":checked");});_this64.elClip.prop('checked',_this64.measurement.clip);_this64.elVisible.prop('checked',_this64.measurement.visible);_this64.elX=_this64.elContent.find("#volume_input_x_"+_this64.measurement.id);_this64.elY=_this64.elContent.find("#volume_input_y_"+_this64.measurement.id);_this64.elZ=_this64.elContent.find("#volume_input_z_"+_this64.measurement.id);_this64.elLength=_this64.elContent.find("#volume_input_length_"+_this64.measurement.id);_this64.elWidth=_this64.elContent.find("#volume_input_width_"+_this64.measurement.id);_this64.elHeight=_this64.elContent.find("#volume_input_height_"+_this64.measurement.id);_this64.elAlpha=_this64.elContent.find("#volume_input_alpha_"+_this64.measurement.id);_this64.elBeta=_this64.elContent.find("#volume_input_beta_"+_this64.measurement.id);_this64.elGamma=_this64.elContent.find("#volume_input_gamma_"+_this64.measurement.id);_this64.elX.on("change",function(e){var val=_this64.elX.val();if($.isNumeric(val)){val=parseFloat(val);_this64.measurement.position.x=val;}});_this64.elY.on("change",function(e){var val=_this64.elY.val();if($.isNumeric(val)){val=parseFloat(val);_this64.measurement.position.y=val;}});_this64.elZ.on("change",function(e){var val=_this64.elZ.val();if($.isNumeric(val)){val=parseFloat(val);_this64.measurement.position.z=val;}});_this64.elLength.on("change",function(e){var val=_this64.elLength.val();if($.isNumeric(val)){val=parseFloat(val);_this64.measurement.scale.x=val;}});_this64.elWidth.on("change",function(e){var val=_this64.elWidth.val();if($.isNumeric(val)){val=parseFloat(val);_this64.measurement.scale.y=val;}});_this64.elHeight.on("change",function(e){var val=_this64.elHeight.val();if($.isNumeric(val)){val=parseFloat(val);_this64.measurement.scale.z=val;}});var toRadians=function toRadians(d){return Math.PI*d/180;};_this64.elAlpha.on("change",function(e){var val=_this64.elAlpha.val();if($.isNumeric(val)){val=parseFloat(val);_this64.measurement.rotation.x=toRadians(val);}});_this64.elBeta.on("change",function(e){var val=_this64.elBeta.val();if($.isNumeric(val)){val=parseFloat(val);_this64.measurement.rotation.y=toRadians(val);}});_this64.elGamma.on("change",function(e){var val=_this64.elGamma.val();if($.isNumeric(val)){val=parseFloat(val);_this64.measurement.rotation.z=toRadians(val);}});_this64.elDownloadButton=_this64.elContent.find("#download_volume_"+_this64.id);if(viewer.server){_this64.elDownloadButton.click(function(){return _this64.download();});}else{_this64.elDownloadButton.hide();}var elRemove=_this64.elContent.find(".measurement_action_remove");elRemove.click(function(){_this64.scene.removeVolume(measurement);});_this64.measurement.addEventListener("marker_added",_this64._update);_this64.measurement.addEventListener("marker_removed",_this64._update);_this64.measurement.addEventListener("marker_moved",_this64._update);_this64.elContent.i18n();_this64.update();return _this64;}_createClass(VolumePanel,[{key:"download",value:function download(){var volume=this.measurement;var boxes=volume.matrixWorld.elements.join(",");var minLOD=0;var maxLOD=100;var pcs=[];var _iteratorNormalCompletion84=true;var _didIteratorError84=false;var _iteratorError84=undefined;try{for(var _iterator84=this.scene.pointclouds[Symbol.iterator](),_step84;!(_iteratorNormalCompletion84=(_step84=_iterator84.next()).done);_iteratorNormalCompletion84=true){var pointcloud=_step84.value;var urlIsAbsolute=new RegExp('^(?:[a-z]+:)?//','i').test(pointcloud.pcoGeometry.url);var _pc2="";if(urlIsAbsolute){_pc2=pointcloud.pcoGeometry.url;}else{_pc2=window.location.href+"/../"+pointcloud.pcoGeometry.url;}pcs.push(_pc2);}}catch(err){_didIteratorError84=true;_iteratorError84=err;}finally{try{if(!_iteratorNormalCompletion84&&_iterator84.return){_iterator84.return();}}finally{if(_didIteratorError84){throw _iteratorError84;}}}var pc=pcs.map(function(v){return"pointcloud[]="+v;}).join("&");var request=viewer.server+"/start_extract_region_worker?minLOD="+minLOD+"&maxLOD="+maxLOD+"&box="+boxes+"&"+pc;//&pointCloud=${pc}`;
//console.log(request);
var elMessage=this.elContent.find("#download_volume_status_"+this.id);elMessage.html("sending request...");var workerID=null;var start=new Date().getTime();var observe=function observe(){var request=viewer.server+"/observe_status?workerID="+workerID;var loaded=0;var xhr=new XMLHttpRequest();xhr.withCredentials=true;xhr.addEventListener("progress",function(e){var nowLoaded=e.loaded;var response=xhr.responseText.substring(loaded,nowLoaded);response=JSON.parse(response);if(response.status==="FINISHED"){elMessage.html("<br><a href=\""+viewer.server+"/get_las?workerID="+workerID+"\">Download ready</a>");}else{var current=new Date().getTime();var duration=current-start;var seconds=parseInt(duration/1000);elMessage.html("processing request... "+seconds+"s");}loaded=nowLoaded;});xhr.open('GET',request,true);xhr.send(null);};var xhr=new XMLHttpRequest();xhr.withCredentials=true;xhr.onreadystatechange=function(){if(xhr.readyState==XMLHttpRequest.DONE){//alert(xhr.responseText);
var res=JSON.parse(xhr.responseText);console.log(res);if(res.status==="OK"){workerID=res.workerID;elMessage.html("request is being processed");//checkUntilFinished();
observe();}else if(res.status==="ERROR_POINT_PROCESSED_ESTIMATE_TOO_LARGE"){elMessage.html("Too many candidate points in selection.");}else{elMessage.html(""+res.status);}}};xhr.open('GET',request,true);xhr.send(null);}},{key:"update",value:function update(){if(!this.destroyed){requestAnimationFrame(this._update);}if(!this.elContent.is(":visible")){return;}if(this.measurement.position.x!==this.values.x){this.elX.val(this.measurement.position.x.toFixed(3));this.values.x=this.measurement.position.x;}if(this.measurement.position.y!==this.values.y){var elY=this.elContent.find("#volume_input_y_"+this.measurement.id);elY.val(this.measurement.position.y.toFixed(3));this.values.y=this.measurement.position.y;}if(this.measurement.position.z!==this.values.z){var elZ=this.elContent.find("#volume_input_z_"+this.measurement.id);elZ.val(this.measurement.position.z.toFixed(3));this.values.z=this.measurement.position.z;}if(this.measurement.scale.x!==this.values.length){this.elLength.val(this.measurement.scale.x.toFixed(3));this.values.length=this.measurement.scale.x;}if(this.measurement.scale.y!==this.values.width){this.elWidth.val(this.measurement.scale.y.toFixed(3));this.values.width=this.measurement.scale.y;}if(this.measurement.scale.z!==this.values.height){this.elHeight.val(this.measurement.scale.z.toFixed(3));this.values.height=this.measurement.scale.z;}var toDegrees=function toDegrees(r){return 180*r/Math.PI;};if(this.measurement.rotation.x!==this.values.alpha){this.elAlpha.val(toDegrees(this.measurement.rotation.x).toFixed(1));this.values.alpha=this.measurement.rotation.x;}if(this.measurement.rotation.y!==this.values.beta){this.elBeta.val(toDegrees(this.measurement.rotation.y).toFixed(1));this.values.beta=this.measurement.rotation.y;}if(this.measurement.rotation.z!==this.values.gamma){this.elGamma.val(toDegrees(this.measurement.rotation.z).toFixed(1));this.values.gamma=this.measurement.rotation.z;}}},{key:"destroy",value:function destroy(){this.elPanel.remove();this.measurement.removeEventListener("marker_added",this._update);this.measurement.removeEventListener("marker_removed",this._update);this.measurement.removeEventListener("marker_moved",this._update);this.destroyed=true;}}]);return VolumePanel;}(MeasurePanel);;var TYPE={DISTANCE:{panel:DistancePanel},AREA:{panel:AreaPanel},POINT:{panel:PointPanel},ANGLE:{panel:AnglePanel},HEIGHT:{panel:HeightPanel},PROFILE:{panel:ProfilePanel},VOLUME:{panel:VolumePanel}};var getType=function getType(measurement){if(measurement instanceof Potree.Measure){if(measurement.showDistances&&!measurement.showArea&&!measurement.showAngles){return TYPE.DISTANCE;}else if(measurement.showDistances&&measurement.showArea&&!measurement.showAngles){return TYPE.AREA;}else if(measurement.maxMarkers===1){return TYPE.POINT;}else if(!measurement.showDistances&&!measurement.showArea&&measurement.showAngles){return TYPE.ANGLE;}else if(measurement.showHeight){return TYPE.HEIGHT;}else{return TYPE.OTHER;}}else if(measurement instanceof Potree.Profile){return TYPE.PROFILE;}else if(measurement instanceof Potree.Volume){return TYPE.VOLUME;}};var trackMeasurement=function trackMeasurement(scene,measurement){id++;var type=getType(measurement);var panel=new type.panel(scene,measurement);mlist.append(panel.elPanel);var track={scene:scene,measurement:measurement,panel:panel,stopTracking:function stopTracking(e){panel.destroy();}};trackedItems.set(measurement,track);var onremove=function onremove(e){var remove=function remove(){panel.destroy();scene.removeEventListener("measurement_removed",onremove);scene.removeEventListener("profile_removed",onremove);scene.removeEventListener("volume_removed",onremove);};if(e.measurement instanceof Potree.Measure&&e.measurement===measurement){remove();}else if(e.profile instanceof Potree.Profile&&e.profile===measurement){remove();}else if(e.volume instanceof Potree.Volume&&e.volume===measurement){remove();}};scene.addEventListener("measurement_removed",onremove);scene.addEventListener("profile_removed",onremove);scene.addEventListener("volume_removed",onremove);};var scenelistener=function scenelistener(e){if(e.measurement){trackMeasurement(e.scene,e.measurement);}else if(e.profile){trackMeasurement(e.scene,e.profile);viewer.profileWindow.show();viewer.profileWindowController.setProfile(e.profile);}else if(e.volume){trackMeasurement(e.scene,e.volume);}};var trackScene=function trackScene(scene){//$("#measurement_details").empty();
trackedItems.forEach(function(trackedItem,key,map){trackedItem.stopTracking();});var items=scene.measurements.concat(scene.profiles).concat(scene.volumes);var _iteratorNormalCompletion85=true;var _didIteratorError85=false;var _iteratorError85=undefined;try{for(var _iterator85=items[Symbol.iterator](),_step85;!(_iteratorNormalCompletion85=(_step85=_iterator85.next()).done);_iteratorNormalCompletion85=true){var measurement=_step85.value;trackMeasurement(scene,measurement);}}catch(err){_didIteratorError85=true;_iteratorError85=err;}finally{try{if(!_iteratorNormalCompletion85&&_iterator85.return){_iterator85.return();}}finally{if(_didIteratorError85){throw _iteratorError85;}}}if(!scene.hasEventListener("measurement_added",scenelistener)){scene.addEventListener("measurement_added",scenelistener);}if(!scene.hasEventListener("profile_added",scenelistener)){scene.addEventListener("profile_added",scenelistener);}if(!scene.hasEventListener("volume_added",scenelistener)){scene.addEventListener("volume_added",scenelistener);}};trackScene(viewer.scene);viewer.addEventListener("scene_changed",function(e){trackScene(e.scene);});{// BOTTOM ACTIONS
var elActionsB=$("#measurement_list_after");{var icon=Potree.resourcePath+"/icons/file_geojson.svg";var elDownload=$("\n\t\t\t\t<a href=\"#\" download=\"measure.json\" class=\"measurepanel_downloads\">\n\t\t\t\t\t<img src=\""+icon+"\" style=\"height: 24px\" />\n\t\t\t\t</a>");elActionsB.append(elDownload);elDownload.click(function(e){var scene=viewer.scene;var measurements=[scene.measurements,scene.profiles,scene.volumes].reduce(function(a,v){return a.concat(v);});var geojson=Potree.GeoJSONExporter.toString(measurements);var url=window.URL.createObjectURL(new Blob([geojson],{type:'data:application/octet-stream'}));elDownload.attr("href",url);});}{var _icon=Potree.resourcePath+"/icons/file_dxf.svg";var _elDownload=$("\n\t\t\t\t<a href=\"#\" download=\"measure.dxf\" class=\"measurepanel_downloads\">\n\t\t\t\t\t<img src=\""+_icon+"\" style=\"height: 24px\" />\n\t\t\t\t</a>");elActionsB.append(_elDownload);_elDownload.click(function(e){var scene=viewer.scene;var measurements=[scene.measurements,scene.profiles,scene.volumes].reduce(function(a,v){return a.concat(v);});var dxf=Potree.DXFExporter.toString(measurements);var url=window.URL.createObjectURL(new Blob([dxf],{type:'data:application/octet-stream'}));_elDownload.attr("href",url);});}}};function initSceneList(){var scenelist=$('#scene_list');// length units
$("#optLengthUnit").selectmenu({style:'popup',position:{my:"top",at:"bottom",collision:"flip"},change:function change(e){var selectedValue=$("#optLengthUnit").selectmenu().val();viewer.setLengthUnit(selectedValue);}});$("#optLengthUnit").selectmenu().val(viewer.lengthUnit.code);$("#optLengthUnit").selectmenu("refresh");var initUIElements=function initUIElements(i){// scene panel in scene list
var pointcloud=viewer.scene.pointclouds[i];var title=pointcloud.name;var pcMaterial=pointcloud.material;var checked=pointcloud.visible?"checked":"";var scenePanel=$("\n\t\t\t<span class=\"scene_item\">\n\t\t\t\t<!-- HEADER -->\n\t\t\t\t<div style=\"float: right; margin: 6px; margin-right: 15px\"><input id=\"scene_list_item_pointcloud_"+i+"\" type=\"checkbox\" "+checked+" /></div>\n\t\t\t\t<div class=\"scene_header\" onclick=\"$(this).next().slideToggle(200)\">\n\t\t\t\t\t<span class=\"scene_icon\"><img src=\""+(Potree.resourcePath+"/icons/cloud_icon.svg")+"\" class=\"scene_item_icon\" /></span>\n\t\t\t\t\t<span class=\"scene_header_title\">"+title+"</span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<!-- DETAIL -->\n\t\t\t\t<div class=\"scene_content selectable\" style=\"display: none\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ul class=\"pv-menu-list\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t<span data-i18n=\"appearance.point_size\"></span>:<span id=\"lblPointSize_"+i+"\"></span> <div id=\"sldPointSize_"+i+"\"></div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- SIZE TYPE -->\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<label for=\"optPointSizing_"+i+"\" class=\"pv-select-label\" data-i18n=\"appearance.point_size_type\">Point Sizing </label>\n\t\t\t\t\t\t\t<select id=\"optPointSizing_"+i+"\" name=\"optPointSizing_"+i+"\">\n\t\t\t\t\t\t\t\t<option>FIXED</option>\n\t\t\t\t\t\t\t\t<option>ATTENUATED</option>\n\t\t\t\t\t\t\t\t<option>ADAPTIVE</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</li>\n\t\n\t\t\t\t\t\t<!--\n\t\t\t\t\t\tShape:\n\t\t\t\t\t\t<div id=\"sizing_"+i+"\">\n\t\t\t\t\t\t\t<label for=\"radio_"+i+"_1\">FIXED</label>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"radio_"+i+"\" id=\"radio_"+i+"_1\">\n\t\t\t\t\t\t\t<label for=\"radio_"+i+"_2\">ATTENUATED</label>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"radio_"+i+"\" id=\"radio_"+i+"_2\">\n\t\t\t\t\t\t\t<label for=\"radio_"+i+"_3\">ADAPTIVE</label>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"radio_"+i+"\" id=\"radio_"+i+"_3\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t-->\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- SHAPE -->\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<label for=\"optShape_\" class=\"pv-select-label\" data-i18n=\"appearance.point_shape\"></label>\n\t\t\t\t\t\t\t<select id=\"optShape_"+i+"\" name=\"optShape_"+i+"\">\n\t\t\t\t\t\t\t\t<option>SQUARE</option>\n\t\t\t\t\t\t\t\t<option>CIRCLE</option>\n\t\t\t\t\t\t\t\t<option>PARABOLOID</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</li>\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- OPACITY -->\n\t\t\t\t\t\t<li><span data-i18n=\"appearance.point_opacity\"></span>:<span id=\"lblOpacity_"+i+"\"></span><div id=\"sldOpacity_"+i+"\"></div></li>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"divider\">\n\t\t\t\t\t\t\t<span>Attribute</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t   <!--<label for=\"optMaterial"+i+"\" class=\"pv-select-label\">Attributes:</label><br>-->\n\t\t\t\t\t\t   <select id=\"optMaterial"+i+"\" name=\"optMaterial"+i+"\">\n\t\t\t\t\t\t   </select>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div id=\"materials.composite_weight_container"+i+"\">\n\t\t\t\t\t\t\t<div class=\"divider\">\n\t\t\t\t\t\t\t\t<span>Attribute Weights</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<li>RGB: <span id=\"lblWeightRGB"+i+"\"></span> <div id=\"sldWeightRGB"+i+"\"></div>\t</li>\n\t\t\t\t\t\t\t<li>Intensity: <span id=\"lblWeightIntensity"+i+"\"></span> <div id=\"sldWeightIntensity"+i+"\"></div>\t</li>\n\t\t\t\t\t\t\t<li>Elevation: <span id=\"lblWeightElevation"+i+"\"></span> <div id=\"sldWeightElevation"+i+"\"></div>\t</li>\n\t\t\t\t\t\t\t<li>Classification: <span id=\"lblWeightClassification"+i+"\"></span> <div id=\"sldWeightClassification"+i+"\"></div>\t</li>\n\t\t\t\t\t\t\t<li>Return Number: <span id=\"lblWeightReturnNumber"+i+"\"></span> <div id=\"sldWeightReturnNumber"+i+"\"></div>\t</li>\n\t\t\t\t\t\t\t<li>Source ID: <span id=\"lblWeightSourceID"+i+"\"></span> <div id=\"sldWeightSourceID"+i+"\"></div>\t</li>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div id=\"materials.rgb_container"+i+"\">\n\t\t\t\t\t\t\t<div class=\"divider\">\n\t\t\t\t\t\t\t\t<span>RGB</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<li>Gamma: <span id=\"lblRGBGamma"+i+"\"></span> <div id=\"sldRGBGamma"+i+"\"></div>\t</li>\n\t\t\t\t\t\t\t<li>Brightness: <span id=\"lblRGBBrightness"+i+"\"></span> <div id=\"sldRGBBrightness"+i+"\"></div>\t</li>\n\t\t\t\t\t\t\t<li>Contrast: <span id=\"lblRGBContrast"+i+"\"></span> <div id=\"sldRGBContrast"+i+"\"></div>\t</li>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div id=\"materials.color_container"+i+"\">\n\t\t\t\t\t\t\t<div class=\"divider\">\n\t\t\t\t\t\t\t\t<span>Color</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<input id=\"materials.color.picker"+i+"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div id=\"materials.elevation_container"+i+"\">\n\t\t\t\t\t\t\t<div class=\"divider\">\n\t\t\t\t\t\t\t\t<span>Elevation</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<li><span data-i18n=\"appearance.elevation_range\"></span>: <span id=\"lblHeightRange"+i+"\"></span> <div id=\"sldHeightRange"+i+"\"></div>\t</li>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div id=\"materials.transition_container"+i+"\">\n\t\t\t\t\t\t\t<div class=\"divider\">\n\t\t\t\t\t\t\t\t<span>Transition</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<li>transition: <span id=\"lblTransition"+i+"\"></span> <div id=\"sldTransition"+i+"\"></div>\t</li>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div id=\"materials.intensity_container"+i+"\">\n\t\t\t\t\t\t\t<div class=\"divider\">\n\t\t\t\t\t\t\t\t<span>Intensity</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<li>Range: <span id=\"lblIntensityRange"+i+"\"></span> <div id=\"sldIntensityRange"+i+"\"></div>\t</li>\n\t\t\t\t\t\t\t<li>Gamma: <span id=\"lblIntensityGamma"+i+"\"></span> <div id=\"sldIntensityGamma"+i+"\"></div>\t</li>\n\t\t\t\t\t\t\t<li>Brightness: <span id=\"lblIntensityBrightness"+i+"\"></span> <div id=\"sldIntensityBrightness"+i+"\"></div>\t</li>\n\t\t\t\t\t\t\t<li>Contrast: <span id=\"lblIntensityContrast"+i+"\"></span> <div id=\"sldIntensityContrast"+i+"\"></div>\t</li>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t");{// POINT SIZE
var sldPointSize=scenePanel.find("#sldPointSize_"+i);var lblPointSize=scenePanel.find("#lblPointSize_"+i);sldPointSize.slider({value:pcMaterial.size,min:0,max:3,step:0.01,slide:function slide(event,ui){pcMaterial.size=ui.value;}});var update=function update(e){lblPointSize.html(pcMaterial.size.toFixed(2));sldPointSize.slider({value:pcMaterial.size});};pcMaterial.addEventListener("point_size_changed",update);update();}{// POINT SIZE TYPE
var strSizeType=Object.keys(Potree.PointSizeType)[pcMaterial.pointSizeType];var opt=scenePanel.find("#optPointSizing_"+i);opt.selectmenu();opt.val(strSizeType).selectmenu("refresh");opt.selectmenu({change:function change(event,ui){pcMaterial.pointSizeType=Potree.PointSizeType[ui.item.value];}});pcMaterial.addEventListener("point_size_type_changed",function(e){var typename=Object.keys(Potree.PointSizeType)[pcMaterial.pointSizeType];$("#optPointSizing").selectmenu().val(typename).selectmenu("refresh");});}{// SHAPE
var _opt=scenePanel.find("#optShape_"+i);_opt.selectmenu({change:function change(event,ui){var value=ui.item.value;pcMaterial.shape=Potree.PointShape[value];}});pcMaterial.addEventListener("point_shape_changed",function(e){var typename=Object.keys(Potree.PointShape)[pcMaterial.shape];_opt.selectmenu().val(typename).selectmenu("refresh");});}{// OPACITY
var sldOpacity=scenePanel.find("#sldOpacity_"+i);var lblOpacity=scenePanel.find("#lblOpacity_"+i);sldOpacity.slider({value:pcMaterial.opacity,min:0,max:1,step:0.001,slide:function slide(event,ui){pcMaterial.opacity=ui.value;}});var _update=function _update(e){lblOpacity.html(pcMaterial.opacity.toFixed(2));sldOpacity.slider({value:pcMaterial.opacity});};pcMaterial.addEventListener("opacity_changed",_update);_update();}var inputVis=scenePanel.find("input[type='checkbox']");inputVis.click(function(event){pointcloud.visible=event.target.checked;if(viewer.profileWindowController){viewer.profileWindowController.recompute();}});scenelist.append(scenePanel);// ui elements
$("#optMaterial"+i).selectmenu({style:'popup',position:{my:"top",at:"bottom",collision:"flip"}});$("#sldHeightRange"+i).slider({range:true,min:0,max:1000,values:[0,1000],step:0.01,slide:function slide(event,ui){pcMaterial.heightMin=ui.values[0];pcMaterial.heightMax=ui.values[1];viewer.dispatchEvent({"type":"height_range_changed"+i,"viewer":viewer});}});$("#sldTransition"+i).slider({value:pcMaterial.materialTransition,min:0,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.materialTransition=ui.value;viewer.dispatchEvent({"type":"material_transition_changed"+i,"viewer":viewer});}});$("#sldIntensityRange"+i).slider({range:true,min:0,max:1,values:[0,1],step:0.01,slide:function slide(event,ui){var min=ui.values[0]==0?0:parseInt(Math.pow(2,16*ui.values[0]));var max=parseInt(Math.pow(2,16*ui.values[1]));pcMaterial.intensityRange=[min,max];//pcMaterial.intensityRange[0] = min;
//pcMaterial.intensityRange[1] = max;
viewer.dispatchEvent({"type":"intensity_range_changed"+i,"viewer":viewer});}});$("#sldIntensityGamma"+i).slider({value:pcMaterial.intensityGamma,min:0,max:4,step:0.01,slide:function slide(event,ui){pcMaterial.intensityGamma=ui.value;viewer.dispatchEvent({"type":"intensity_gamma_changed"+i,"viewer":viewer});}});$("#sldIntensityContrast"+i).slider({value:pcMaterial.intensityContrast,min:-1,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.intensityContrast=ui.value;viewer.dispatchEvent({"type":"intensity_contrast_changed"+i,"viewer":viewer});}});$("#sldIntensityBrightness"+i).slider({value:pcMaterial.intensityBrightness,min:-1,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.intensityBrightness=ui.value;viewer.dispatchEvent({"type":"intensity_brightness_changed"+i,"viewer":viewer});}});$("#sldRGBGamma"+i).slider({value:pcMaterial.rgbGamma,min:0,max:4,step:0.01,slide:function slide(event,ui){pcMaterial.rgbGamma=ui.value;viewer.dispatchEvent({"type":"rgb_gamma_changed"+i,"viewer":viewer});}});$("#sldRGBContrast"+i).slider({value:pcMaterial.rgbContrast,min:-1,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.rgbContrast=ui.value;viewer.dispatchEvent({"type":"rgb_contrast_changed"+i,"viewer":viewer});}});$("#sldRGBBrightness"+i).slider({value:pcMaterial.rgbBrightness,min:-1,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.rgbBrightness=ui.value;viewer.dispatchEvent({"type":"rgb_brightness_changed"+i,"viewer":viewer});}});$("#sldWeightRGB"+i).slider({value:pcMaterial.weightRGB,min:0,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.weightRGB=ui.value;viewer.dispatchEvent({"type":"attribute_weights_changed"+i,"viewer":viewer});}});$("#sldWeightIntensity"+i).slider({value:pcMaterial.weightIntensity,min:0,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.weightIntensity=ui.value;viewer.dispatchEvent({"type":"attribute_weights_changed"+i,"viewer":viewer});}});$("#sldWeightElevation"+i).slider({value:pcMaterial.weightElevation,min:0,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.weightElevation=ui.value;viewer.dispatchEvent({"type":"attribute_weights_changed"+i,"viewer":viewer});}});$("#sldWeightClassification"+i).slider({value:pcMaterial.weightClassification,min:0,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.weightClassification=ui.value;viewer.dispatchEvent({"type":"attribute_weights_changed"+i,"viewer":viewer});}});$("#sldWeightReturnNumber"+i).slider({value:pcMaterial.weightReturnNumber,min:0,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.weightReturnNumber=ui.value;viewer.dispatchEvent({"type":"attribute_weights_changed"+i,"viewer":viewer});}});$("#sldWeightSourceID"+i).slider({value:pcMaterial.weightSourceID,min:0,max:1,step:0.01,slide:function slide(event,ui){pcMaterial.weightSourceID=ui.value;viewer.dispatchEvent({"type":"attribute_weights_changed"+i,"viewer":viewer});}});$("#materials\\.color\\.picker"+i).spectrum({flat:true,showInput:true,preferredFormat:"rgb",cancelText:"",chooseText:"Apply",color:"#"+pcMaterial.color.getHexString(),move:function move(color){var cRGB=color.toRgb();var tc=new THREE.Color().setRGB(cRGB.r/255,cRGB.g/255,cRGB.b/255);pcMaterial.color=tc;},change:function change(color){var cRGB=color.toRgb();var tc=new THREE.Color().setRGB(cRGB.r/255,cRGB.g/255,cRGB.b/255);pcMaterial.color=tc;}});pcMaterial.addEventListener("color_changed",function(e){$("#materials\\.color\\.picker"+i).spectrum("set","#"+pcMaterial.color.getHexString());});var updateHeightRange=function updateHeightRange(){var box=[pointcloud.pcoGeometry.tightBoundingBox,pointcloud.getBoundingBoxWorld()].find(function(v){return v!==undefined;});pointcloud.updateMatrixWorld(true);box=Potree.utils.computeTransformedBoundingBox(box,pointcloud.matrixWorld);var bWidth=box.max.z-box.min.z;bMin=box.min.z-0.2*bWidth;bMax=box.max.z+0.2*bWidth;$("#lblHeightRange"+i)[0].innerHTML=pcMaterial.heightMin.toFixed(2)+" to "+pcMaterial.heightMax.toFixed(2);$("#sldHeightRange"+i).slider({min:bMin,max:bMax,values:[pcMaterial.heightMin,pcMaterial.heightMax]});};var updateIntensityRange=function updateIntensityRange(){var range=pcMaterial.intensityRange;var min=Math.log2(range[0])/16;var max=Math.log2(range[1])/16;$("#lblIntensityRange"+i)[0].innerHTML=parseInt(pcMaterial.intensityRange[0])+" to "+parseInt(pcMaterial.intensityRange[1]);$("#sldIntensityRange"+i).slider({values:[min,max]});};{updateHeightRange();var min=$("#sldHeightRange"+i).slider("option","min");var max=$("#sldHeightRange"+i).slider("option","max");}pcMaterial.addEventListener("material_property_changed",function(event){updateHeightRange();{// INTENSITY
var gamma=pcMaterial.intensityGamma;var contrast=pcMaterial.intensityContrast;var brightness=pcMaterial.intensityBrightness;updateIntensityRange();$('#lblIntensityGamma'+i)[0].innerHTML=gamma.toFixed(2);$("#sldIntensityGamma"+i).slider({value:gamma});$('#lblIntensityContrast'+i)[0].innerHTML=contrast.toFixed(2);$("#sldIntensityContrast"+i).slider({value:contrast});$('#lblIntensityBrightness'+i)[0].innerHTML=brightness.toFixed(2);$("#sldIntensityBrightness"+i).slider({value:brightness});}{// RGB
var _gamma=pcMaterial.rgbGamma;var _contrast=pcMaterial.rgbContrast;var _brightness=pcMaterial.rgbBrightness;$('#lblRGBGamma'+i)[0].innerHTML=_gamma.toFixed(2);$("#sldRGBGamma"+i).slider({value:_gamma});$('#lblRGBContrast'+i)[0].innerHTML=_contrast.toFixed(2);$("#sldRGBContrast"+i).slider({value:_contrast});$('#lblRGBBrightness'+i)[0].innerHTML=_brightness.toFixed(2);$("#sldRGBBrightness"+i).slider({value:_brightness});}});viewer.addEventListener("length_unit_changed",function(e){$("#optLengthUnit").selectmenu().val(e.value);$("#optLengthUnit").selectmenu("refresh");});viewer.addEventListener("pointcloud_loaded",updateHeightRange);updateHeightRange();updateIntensityRange();$('#lblIntensityGamma'+i)[0].innerHTML=pcMaterial.intensityGamma.toFixed(2);$('#lblIntensityContrast'+i)[0].innerHTML=pcMaterial.intensityContrast.toFixed(2);$('#lblIntensityBrightness'+i)[0].innerHTML=pcMaterial.intensityBrightness.toFixed(2);$('#lblRGBGamma'+i)[0].innerHTML=pcMaterial.rgbGamma.toFixed(2);$('#lblRGBContrast'+i)[0].innerHTML=pcMaterial.rgbContrast.toFixed(2);$('#lblRGBBrightness'+i)[0].innerHTML=pcMaterial.rgbBrightness.toFixed(2);var options=["RGB","RGB and Elevation","Color","Elevation","Intensity","Intensity Gradient","Classification","Return Number","Source","Phong","Level of Detail","Composite"];var elMaterialList=$("#optMaterial"+i);for(var _i72=0;_i72<options.length;_i72++){var option=options[_i72];var id="optMaterial_"+option+"_"+_i72;var elOption=$("\n\t\t\t\t<option id=\""+id+"\">\n\t\t\t\t\t"+option+"\n\t\t\t\t</option>");elMaterialList.append(elOption);}var updateMaterialPanel=function updateMaterialPanel(event,ui){var selectedValue=$("#optMaterial"+i).selectmenu().val();pcMaterial.pointColorType=viewer.toMaterialID(selectedValue);viewer.dispatchEvent({"type":"material_changed"+i,"viewer":viewer});var blockWeights=$("#materials\\.composite_weight_container"+i);var blockElevation=$("#materials\\.elevation_container"+i);var blockRGB=$("#materials\\.rgb_container"+i);var blockColor=$("#materials\\.color_container"+i);var blockIntensity=$("#materials\\.intensity_container"+i);var blockTransition=$("#materials\\.transition_container"+i);blockIntensity.css("display","none");blockElevation.css("display","none");blockRGB.css("display","none");blockColor.css("display","none");blockWeights.css("display","none");blockTransition.css("display","none");if(selectedValue==="Composite"){blockWeights.css("display","block");blockElevation.css("display","block");blockRGB.css("display","block");blockIntensity.css("display","block");}else if(selectedValue==="Elevation"){blockElevation.css("display","block");}else if(selectedValue==="RGB and Elevation"){blockRGB.css("display","block");blockElevation.css("display","block");}else if(selectedValue==="RGB"){blockRGB.css("display","block");}else if(selectedValue==="Color"){blockColor.css("display","block");}else if(selectedValue==="Intensity"){blockIntensity.css("display","block");}else if(selectedValue==="Intensity Gradient"){blockIntensity.css("display","block");}};$("#optMaterial"+i).selectmenu({change:updateMaterialPanel});$("#optMaterial"+i).val(viewer.toMaterialName(pcMaterial.pointColorType)).selectmenu("refresh");updateMaterialPanel();viewer.addEventListener("material_changed"+i,function(e){$("#optMaterial"+i).val(viewer.toMaterialName(pcMaterial.pointColorType)).selectmenu("refresh");});scenePanel.i18n();};var buildSceneList=function buildSceneList(){scenelist.empty();for(var _i73=0;_i73<viewer.scene.pointclouds.length;_i73++){initUIElements(_i73);}};buildSceneList();viewer.addEventListener("scene_changed",function(e){buildSceneList();if(e.oldScene){e.oldScene.removeEventListener("pointcloud_added",buildSceneList);}e.scene.addEventListener("pointcloud_added",buildSceneList);});viewer.scene.addEventListener("pointcloud_added",buildSceneList);var lastPos=new THREE.Vector3();var lastTarget=new THREE.Vector3();viewer.addEventListener("update",function(e){var pos=viewer.scene.view.position;var target=viewer.scene.view.getPivot();if(pos.equals(lastPos)&&target.equals(lastTarget)){return;}else{lastPos.copy(pos);lastTarget.copy(target);}var strCamPos="<br>"+[pos.x,pos.y,pos.z].map(function(e){return e.toFixed(2);}).join(", ");var strCamTarget="<br>"+[target.x,target.y,target.z].map(function(e){return e.toFixed(2);}).join(", ");$('#lblCameraPosition').html(strCamPos);$('#lblCameraTarget').html(strCamTarget);});};var initSettings=function initSettings(){$("#sldMinNodeSize").slider({value:viewer.getMinNodeSize(),min:0,max:1000,step:0.01,slide:function slide(event,ui){viewer.setMinNodeSize(ui.value);}});viewer.addEventListener("minnodesize_changed",function(event){$('#lblMinNodeSize').html(parseInt(viewer.getMinNodeSize()));$("#sldMinNodeSize").slider({value:viewer.getMinNodeSize()});});$('#lblMinNodeSize').html(parseInt(viewer.getMinNodeSize()));var toClipModeCode=function toClipModeCode(string){if(string==="No Clipping"){return Potree.ClipMode.DISABLED;}else if(string==="Highlight Inside"){return Potree.ClipMode.HIGHLIGHT_INSIDE;}else if(string==="Clip Outside"){return Potree.ClipMode.CLIP_OUTSIDE;}};var toClipModeString=function toClipModeString(code){if(code===Potree.ClipMode.DISABLED){return"No Clipping";}else if(code===Potree.ClipMode.HIGHLIGHT_INSIDE){return"Highlight Inside";}else if(code===Potree.ClipMode.CLIP_OUTSIDE){return"Clip Outside";}};$("#optClipMode").selectmenu();$("#optClipMode").val(toClipModeString(viewer.getClipMode())).selectmenu("refresh");$("#optClipMode").selectmenu({change:function change(event,ui){viewer.setClipMode(toClipModeCode(ui.item.value));}});viewer.addEventListener("clip_mode_changed",function(e){var string=toClipModeString(viewer.clipMode);$("#optClipMode").selectmenu().val(string).selectmenu("refresh");});};var initSidebar=function initSidebar(){initAccordion();initAppearance();initToolbar();initNavigation();initClassificationList();initAnnotationDetails();initMeasurementDetails();initSceneList();initSettings();$('#potree_version_number').html(Potree.version.major+"."+Potree.version.minor+Potree.version.suffix);$('.perfect_scrollbar').perfectScrollbar();};var HoverMenuItem=function HoverMenuItem(icon,callback){_classCallCheck(this,HoverMenuItem);this.icon=icon;this.callback=callback;this.element=$("\n\t\t\t<span class=\"hover_menu_item\">\n\t\t\t\t<img src=\""+icon+"\">\n\t\t\t</span>\n\t\t");this.element.click(function(){callback();});};;var HoverMenu=function(){function HoverMenu(icon){_classCallCheck(this,HoverMenu);var scope=this;this.items=[];this.x=0;this.y=0;this.circumference=32;this.element=$('<span class="hover_menu"></span>');this.elIcon=$("<span class=\"hover_menu_icon\">\n\t\t\t<img src=\""+icon+"\">\n\t\t</span>");this.element.append(this.elIcon);this.element.click(function(){$(this).find(".hover_menu_item").fadeIn(200);$(this).find(".hover_menu_icon").fadeOut(200);$(this).css("left",scope.x-scope.circumference-$(this).width()/2+"px");$(this).css("top",scope.y-scope.circumference-$(this).height()/2+"px");$(this).css("border",scope.circumference+"px solid transparent");}).mouseleave(function(){$(this).find(".hover_menu_item").fadeOut(200);$(this).find(".hover_menu_icon").fadeIn(200);$(this).css("left",scope.x-$(this).width()/2+"px");$(this).css("top",scope.y-$(this).height()/2+"px");$(this).css("border","0px solid black");});}_createClass(HoverMenu,[{key:"addItem",value:function addItem(item){this.items.push(item);this.element.append(item.element);item.element.hide();this.arrange();}},{key:"removeItem",value:function removeItem(item){this.items=this.items.filter(function(e){return e!==item;});this.element.remove(item.element);this.arrange();}},{key:"arrange",value:function arrange(){var menuItems=this.element.find(".hover_menu_item");menuItems.each(function(index,value){var u=index/menuItems.length*Math.PI*2;var radius=22;var x=Math.cos(u)*radius;// + offset ;
var y=Math.sin(u)*radius;// + offset ;
$(this).css("left",x).css("top",y);});}},{key:"setPosition",value:function setPosition(x,y){this.x=x;this.y=y;var rect=this.element.get(0).getBoundingClientRect();this.element.css("left",this.x-rect.width/2+"px");this.element.css("top",this.y-rect.height/2+"px");}}]);return HoverMenu;}();;Potree.GLProgram=function(){function GLProgram(gl,material){_classCallCheck(this,GLProgram);this.gl=gl;this.material=material;this.program=gl.createProgram();;this.recompile();}_createClass(GLProgram,[{key:"compileShader",value:function compileShader(type,source){var gl=this.gl;var vs=gl.createShader(type);gl.shaderSource(vs,source);gl.compileShader(vs);var success=gl.getShaderParameter(vs,gl.COMPILE_STATUS);if(!success){console.error("could not compile shader:");var log=gl.getShaderInfoLog(vs);console.error(log,source);return null;}return vs;}},{key:"recompile",value:function recompile(){var gl=this.gl;var vs=this.compileShader(gl.VERTEX_SHADER,this.material.vertexShader);var fs=this.compileShader(gl.FRAGMENT_SHADER,this.material.fragmentShader);if(vs===null||fs===null){return;}// PROGRAM
var program=this.program;gl.attachShader(program,vs);gl.attachShader(program,fs);gl.linkProgram(program);var success=gl.getProgramParameter(program,gl.LINK_STATUS);if(!success){console.error("could not compile/link program:");console.error(this.material.vertexShader);console.error(this.material.fragmentShader);return;}gl.detachShader(program,vs);gl.detachShader(program,fs);gl.deleteShader(vs);gl.deleteShader(fs);gl.useProgram(program);{// UNIFORMS
var uniforms={};var n=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS);for(var _i74=0;_i74<n;_i74++){var uniform=gl.getActiveUniform(program,_i74);var name=uniform.name;var loc=gl.getUniformLocation(program,name);uniforms[name]=loc;}this.uniforms=uniforms;}}}]);return GLProgram;}();
//# sourceMappingURL=potree.es5.js.map
